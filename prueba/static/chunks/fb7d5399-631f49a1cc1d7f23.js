"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[737],{9477:function(bv,P,Q){Q.r(P),Q.d(P,{ACESFilmicToneMapping:function(){return ck},AddEquation:function(){return bR},AddOperation:function(){return cf},AdditiveAnimationBlendMode:function(){return dj},AdditiveBlending:function(){return bN},AlphaFormat:function(){return cB},AlwaysDepth:function(){return b6},AlwaysStencilFunc:function(){return dK},AmbientLight:function(){return kt},AmbientLightProbe:function(){return kJ},AnimationClip:function(){return j5},AnimationLoader:function(){return kc},AnimationMixer:function(){return k6},AnimationObjectGroup:function(){return k3},AnimationUtils:function(){return j0},ArcCurve:function(){return a1},ArrayCamera:function(){return hY},ArrowHelper:function(){return lP},Audio:function(){return bp},AudioAnalyser:function(){return k$},AudioContext:function(){return kG},AudioListener:function(){return kU},AudioLoader:function(){return kH},AxesHelper:function(){return lQ},BackSide:function(){return bH},BasicDepthPacking:function(){return dq},BasicShadowMap:function(){return bC},Bone:function(){return iA},BooleanKeyframeTrack:function(){return A},Box2:function(){return li},Box3:function(){return z},Box3Helper:function(){return lK},BoxBufferGeometry:function(){return $},BoxGeometry:function(){return $},BoxHelper:function(){return lJ},BufferAttribute:function(){return n},BufferGeometry:function(){return g},BufferGeometryLoader:function(){return kz},ByteType:function(){return cr},Cache:function(){return j7},Camera:function(){return H},CameraHelper:function(){return lG},CanvasTexture:function(){return i1},CapsuleBufferGeometry:function(){return ac},CapsuleGeometry:function(){return ac},CatmullRomCurve3:function(){return a2},CineonToneMapping:function(){return cj},CircleBufferGeometry:function(){return ad},CircleGeometry:function(){return ad},ClampToEdgeWrapping:function(){return ax},Clock:function(){return kO},Color:function(){return h},ColorKeyframeTrack:function(){return bl},ColorManagement:function(){return d3},CompressedTexture:function(){return i0},CompressedTextureLoader:function(){return kd},ConeBufferGeometry:function(){return ae},ConeGeometry:function(){return ae},CubeCamera:function(){return fR},CubeReflectionMapping:function(){return ar},CubeRefractionMapping:function(){return as},CubeTexture:function(){return aX},CubeTextureLoader:function(){return kf},CubeUVReflectionMapping:function(){return av},CubicBezierCurve:function(){return a3},CubicBezierCurve3:function(){return a4},CubicInterpolant:function(){return j1},CullFaceBack:function(){return bz},CullFaceFront:function(){return bA},CullFaceFrontBack:function(){return bB},CullFaceNone:function(){return by},Curve:function(){return o},CurvePath:function(){return ba},CustomBlending:function(){return bQ},CustomToneMapping:function(){return cl},CylinderBufferGeometry:function(){return L},CylinderGeometry:function(){return L},Cylindrical:function(){return lg},Data3DTexture:function(){return Y},DataArrayTexture:function(){return X},DataTexture:function(){return iB},DataTexture2DArray:function(){return l$},DataTexture3D:function(){return l_},DataTextureLoader:function(){return kg},DataUtils:function(){return lT},DecrementStencilOp:function(){return dz},DecrementWrapStencilOp:function(){return dB},DefaultLoadingManager:function(){return j8},DepthFormat:function(){return cG},DepthStencilFormat:function(){return cH},DepthTexture:function(){return h0},DirectionalLight:function(){return ks},DirectionalLightHelper:function(){return lD},DiscreteInterpolant:function(){return j3},DodecahedronBufferGeometry:function(){return af},DodecahedronGeometry:function(){return af},DoubleSide:function(){return bI},DstAlphaFactor:function(){return b0},DstColorFactor:function(){return b2},DynamicCopyUsage:function(){return dS},DynamicDrawUsage:function(){return dM},DynamicReadUsage:function(){return dP},EdgesGeometry:function(){return bc},EllipseCurve:function(){return ab},EqualDepth:function(){return b9},EqualStencilFunc:function(){return dF},EquirectangularReflectionMapping:function(){return at},EquirectangularRefractionMapping:function(){return au},Euler:function(){return Z},EventDispatcher:function(){return q},ExtrudeBufferGeometry:function(){return ag},ExtrudeGeometry:function(){return ag},FileLoader:function(){return kb},FlatShading:function(){return bJ},Float16BufferAttribute:function(){return fo},Float32BufferAttribute:function(){return fp},Float64BufferAttribute:function(){return fq},FloatType:function(){return cw},Fog:function(){return h5},FogExp2:function(){return h4},Font:function(){return lX},FontLoader:function(){return lW},FramebufferTexture:function(){return i_},FrontSide:function(){return bG},Frustum:function(){return fZ},GLBufferAttribute:function(){return lb},GLSL1:function(){return dU},GLSL3:function(){return dV},GreaterDepth:function(){return cb},GreaterEqualDepth:function(){return ca},GreaterEqualStencilFunc:function(){return dJ},GreaterStencilFunc:function(){return dH},GridHelper:function(){return ly},Group:function(){return hZ},HalfFloatType:function(){return cx},HemisphereLight:function(){return ki},HemisphereLightHelper:function(){return lx},HemisphereLightProbe:function(){return kI},IcosahedronBufferGeometry:function(){return ah},IcosahedronGeometry:function(){return ah},ImageBitmapLoader:function(){return kE},ImageLoader:function(){return ke},ImageUtils:function(){return ea},ImmediateRenderObject:function(){return lY},IncrementStencilOp:function(){return dy},IncrementWrapStencilOp:function(){return dA},InstancedBufferAttribute:function(){return iF},InstancedBufferGeometry:function(){return ky},InstancedInterleavedBuffer:function(){return la},InstancedMesh:function(){return iK},Int16BufferAttribute:function(){return fk},Int32BufferAttribute:function(){return fm},Int8BufferAttribute:function(){return fh},IntType:function(){return cu},InterleavedBuffer:function(){return a_},InterleavedBufferAttribute:function(){return h8},Interpolant:function(){return E},InterpolateDiscrete:function(){return T},InterpolateLinear:function(){return U},InterpolateSmooth:function(){return de},InvertStencilOp:function(){return dC},KeepStencilOp:function(){return dw},KeyframeTrack:function(){return p},LOD:function(){return it},LatheBufferGeometry:function(){return K},LatheGeometry:function(){return K},Layers:function(){return eR},LessDepth:function(){return b7},LessEqualDepth:function(){return b8},LessEqualStencilFunc:function(){return dG},LessStencilFunc:function(){return dE},Light:function(){return t},LightProbe:function(){return aq},Line:function(){return I},Line3:function(){return ll},LineBasicMaterial:function(){return a0},LineCurve:function(){return a5},LineCurve3:function(){return a6},LineDashedMaterial:function(){return j_},LineLoop:function(){return iS},LineSegments:function(){return s},LinearEncoding:function(){return dn},LinearFilter:function(){return aC},LinearInterpolant:function(){return j2},LinearMipMapLinearFilter:function(){return cp},LinearMipMapNearestFilter:function(){return co},LinearMipmapLinearFilter:function(){return aE},LinearMipmapNearestFilter:function(){return aD},LinearSRGBColorSpace:function(){return F},LinearToneMapping:function(){return ch},Loader:function(){return m},LoaderUtils:function(){return kx},LoadingManager:function(){return bo},LoopOnce:function(){return db},LoopPingPong:function(){return dd},LoopRepeat:function(){return dc},LuminanceAlphaFormat:function(){return cF},LuminanceFormat:function(){return cE},MOUSE:function(){return bw},Material:function(){return k},MaterialLoader:function(){return kw},MathUtils:function(){return dZ},Matrix3:function(){return u},Matrix4:function(){return e},MaxEquation:function(){return bV},Mesh:function(){return D},MeshBasicMaterial:function(){return fe},MeshDepthMaterial:function(){return hS},MeshDistanceMaterial:function(){return hT},MeshLambertMaterial:function(){return jZ},MeshMatcapMaterial:function(){return j$},MeshNormalMaterial:function(){return jY},MeshPhongMaterial:function(){return jW},MeshPhysicalMaterial:function(){return jV},MeshStandardMaterial:function(){return be},MeshToonMaterial:function(){return jX},MinEquation:function(){return bU},MirroredRepeatWrapping:function(){return ay},MixOperation:function(){return ce},MultiplyBlending:function(){return bP},MultiplyOperation:function(){return cd},NearestFilter:function(){return az},NearestMipMapLinearFilter:function(){return cn},NearestMipMapNearestFilter:function(){return cm},NearestMipmapLinearFilter:function(){return aB},NearestMipmapNearestFilter:function(){return aA},NeverDepth:function(){return b5},NeverStencilFunc:function(){return dD},NoBlending:function(){return bL},NoColorSpace:function(){return du},NoToneMapping:function(){return cg},NormalAnimationBlendMode:function(){return di},NormalBlending:function(){return bM},NotEqualDepth:function(){return cc},NotEqualStencilFunc:function(){return dI},NumberKeyframeTrack:function(){return bm},Object3D:function(){return f},ObjectLoader:function(){return kA},ObjectSpaceNormalMap:function(){return dt},OctahedronBufferGeometry:function(){return ai},OctahedronGeometry:function(){return ai},OneFactor:function(){return bX},OneMinusDstAlphaFactor:function(){return b1},OneMinusDstColorFactor:function(){return b3},OneMinusSrcAlphaFactor:function(){return b_},OneMinusSrcColorFactor:function(){return bZ},OrthographicCamera:function(){return aY},PCFShadowMap:function(){return bD},PCFSoftShadowMap:function(){return bE},PMREMGenerator:function(){return gb},ParametricGeometry:function(){return lU},Path:function(){return bb},PerspectiveCamera:function(){return aW},Plane:function(){return fW},PlaneBufferGeometry:function(){return _},PlaneGeometry:function(){return _},PlaneHelper:function(){return lL},PointLight:function(){return kr},PointLightHelper:function(){return lt},Points:function(){return iY},PointsMaterial:function(){return iT},PolarGridHelper:function(){return lz},PolyhedronBufferGeometry:function(){return x},PolyhedronGeometry:function(){return x},PositionalAudio:function(){return kZ},PropertyBinding:function(){return d},PropertyMixer:function(){return k_},QuadraticBezierCurve:function(){return a7},QuadraticBezierCurve3:function(){return a8},Quaternion:function(){return v},QuaternionKeyframeTrack:function(){return M},QuaternionLinearInterpolant:function(){return j4},REVISION:function(){return R},RGBADepthPacking:function(){return dr},RGBAFormat:function(){return cD},RGBAIntegerFormat:function(){return cM},RGBA_ASTC_10x10_Format:function(){return c7},RGBA_ASTC_10x5_Format:function(){return c4},RGBA_ASTC_10x6_Format:function(){return c5},RGBA_ASTC_10x8_Format:function(){return c6},RGBA_ASTC_12x10_Format:function(){return c8},RGBA_ASTC_12x12_Format:function(){return c9},RGBA_ASTC_4x4_Format:function(){return cY},RGBA_ASTC_5x4_Format:function(){return cZ},RGBA_ASTC_5x5_Format:function(){return c$},RGBA_ASTC_6x5_Format:function(){return c_},RGBA_ASTC_6x6_Format:function(){return c0},RGBA_ASTC_8x5_Format:function(){return c1},RGBA_ASTC_8x6_Format:function(){return c2},RGBA_ASTC_8x8_Format:function(){return c3},RGBA_BPTC_Format:function(){return da},RGBA_ETC2_EAC_Format:function(){return cX},RGBA_PVRTC_2BPPV1_Format:function(){return cU},RGBA_PVRTC_4BPPV1_Format:function(){return cT},RGBA_S3TC_DXT1_Format:function(){return cO},RGBA_S3TC_DXT3_Format:function(){return cP},RGBA_S3TC_DXT5_Format:function(){return cQ},RGBFormat:function(){return cC},RGB_ETC1_Format:function(){return cV},RGB_ETC2_Format:function(){return cW},RGB_PVRTC_2BPPV1_Format:function(){return cS},RGB_PVRTC_4BPPV1_Format:function(){return cR},RGB_S3TC_DXT1_Format:function(){return cN},RGFormat:function(){return cK},RGIntegerFormat:function(){return cL},RawShaderMaterial:function(){return jU},Ray:function(){return G},Raycaster:function(){return lc},RectAreaLight:function(){return ku},RedFormat:function(){return cI},RedIntegerFormat:function(){return cJ},ReinhardToneMapping:function(){return ci},RepeatWrapping:function(){return aw},ReplaceStencilOp:function(){return dx},ReverseSubtractEquation:function(){return bT},RingBufferGeometry:function(){return aj},RingGeometry:function(){return aj},SRGBColorSpace:function(){return V},Scene:function(){return h6},ShaderChunk:function(){return c},ShaderLib:function(){return aa},ShaderMaterial:function(){return aV},ShadowMaterial:function(){return jT},Shape:function(){return je},ShapeBufferGeometry:function(){return ak},ShapeGeometry:function(){return ak},ShapePath:function(){return lR},ShapeUtils:function(){return jL},ShortType:function(){return cs},Skeleton:function(){return iE},SkeletonHelper:function(){return lr},SkinnedMesh:function(){return iz},SmoothShading:function(){return bK},Source:function(){return eb},Sphere:function(){return C},SphereBufferGeometry:function(){return al},SphereGeometry:function(){return al},Spherical:function(){return lf},SphericalHarmonics3:function(){return kv},SplineCurve:function(){return a9},SpotLight:function(){return kn},SpotLightHelper:function(){return ln},Sprite:function(){return ip},SpriteMaterial:function(){return h9},SrcAlphaFactor:function(){return b$},SrcAlphaSaturateFactor:function(){return b4},SrcColorFactor:function(){return bY},StaticCopyUsage:function(){return dR},StaticDrawUsage:function(){return dL},StaticReadUsage:function(){return dO},StereoCamera:function(){return kN},StreamCopyUsage:function(){return dT},StreamDrawUsage:function(){return dN},StreamReadUsage:function(){return dQ},StringKeyframeTrack:function(){return B},SubtractEquation:function(){return bS},SubtractiveBlending:function(){return bO},TOUCH:function(){return bx},TangentSpaceNormalMap:function(){return ds},TetrahedronBufferGeometry:function(){return am},TetrahedronGeometry:function(){return am},TextGeometry:function(){return lV},Texture:function(){return l},TextureLoader:function(){return kh},TorusBufferGeometry:function(){return an},TorusGeometry:function(){return an},TorusKnotBufferGeometry:function(){return ao},TorusKnotGeometry:function(){return ao},Triangle:function(){return aT},TriangleFanDrawMode:function(){return dm},TriangleStripDrawMode:function(){return dl},TrianglesDrawMode:function(){return dk},TubeBufferGeometry:function(){return ap},TubeGeometry:function(){return ap},UVMapping:function(){return S},Uint16BufferAttribute:function(){return fl},Uint32BufferAttribute:function(){return fn},Uint8BufferAttribute:function(){return fi},Uint8ClampedBufferAttribute:function(){return fj},Uniform:function(){return k7},UniformsGroup:function(){return k9},UniformsLib:function(){return b},UniformsUtils:function(){return fQ},UnsignedByteType:function(){return cq},UnsignedInt248Type:function(){return cA},UnsignedIntType:function(){return cv},UnsignedShort4444Type:function(){return cy},UnsignedShort5551Type:function(){return cz},UnsignedShortType:function(){return ct},VSMShadowMap:function(){return bF},Vector2:function(){return j},Vector3:function(){return a},Vector4:function(){return W},VectorKeyframeTrack:function(){return bn},VideoTexture:function(){return i$},WebGL1Renderer:function(){return a$},WebGL3DRenderTarget:function(){return ef},WebGLArrayRenderTarget:function(){return ee},WebGLCubeRenderTarget:function(){return fS},WebGLMultipleRenderTargets:function(){return eg},WebGLMultisampleRenderTarget:function(){return lZ},WebGLRenderTarget:function(){return y},WebGLRenderer:function(){return aZ},WebGLUtils:function(){return hX},WireframeGeometry:function(){return bd},WrapAroundEnding:function(){return dh},ZeroCurvatureEnding:function(){return df},ZeroFactor:function(){return bW},ZeroSlopeEnding:function(){return dg},ZeroStencilOp:function(){return dv},"_SRGBAFormat":function(){return dW},sRGBEncoding:function(){return dp}});/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */ let R="143",bw={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},bx={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},by=0,bz=1,bA=2,bB=3,bC=0,bD=1,bE=2,bF=3,bG=0,bH=1,bI=2,bJ=1,bK=2,bL=0,bM=1,bN=2,bO=3,bP=4,bQ=5,bR=100,bS=101,bT=102,bU=103,bV=104,bW=200,bX=201,bY=202,bZ=203,b$=204,b_=205,b0=206,b1=207,b2=208,b3=209,b4=210,b5=0,b6=1,b7=2,b8=3,b9=4,ca=5,cb=6,cc=7,cd=0,ce=1,cf=2,cg=0,ch=1,ci=2,cj=3,ck=4,cl=5,S=300,ar=301,as=302,at=303,au=304,av=306,aw=1e3,ax=1001,ay=1002,az=1003,aA=1004,cm=1004,aB=1005,cn=1005,aC=1006,aD=1007,co=1007,aE=1008,cp=1008,cq=1009,cr=1010,cs=1011,ct=1012,cu=1013,cv=1014,cw=1015,cx=1016,cy=1017,cz=1018,cA=1020,cB=1021,cC=1022,cD=1023,cE=1024,cF=1025,cG=1026,cH=1027,cI=1028,cJ=1029,cK=1030,cL=1031,cM=1033,cN=33776,cO=33777,cP=33778,cQ=33779,cR=35840,cS=35841,cT=35842,cU=35843,cV=36196,cW=37492,cX=37496,cY=37808,cZ=37809,c$=37810,c_=37811,c0=37812,c1=37813,c2=37814,c3=37815,c4=37816,c5=37817,c6=37818,c7=37819,c8=37820,c9=37821,da=36492,db=2200,dc=2201,dd=2202,T=2300,U=2301,de=2302,df=2400,dg=2401,dh=2402,di=2500,dj=2501,dk=0,dl=1,dm=2,dn=3e3,dp=3001,dq=3200,dr=3201,ds=0,dt=1,du="",V="srgb",F="srgb-linear",dv=0,dw=7680,dx=7681,dy=7682,dz=7683,dA=34055,dB=34056,dC=5386,dD=512,dE=513,dF=514,dG=515,dH=516,dI=517,dJ=518,dK=519,dL=35044,dM=35048,dN=35040,dO=35045,dP=35049,dQ=35041,dR=35046,dS=35050,dT=35042,dU="100",dV="300 es",dW=1035;class q{addEventListener(a,c){void 0===this._listeners&&(this._listeners={});let b=this._listeners;void 0===b[a]&&(b[a]=[]),-1===b[a].indexOf(c)&&b[a].push(c)}hasEventListener(a,c){if(void 0===this._listeners)return!1;let b=this._listeners;return void 0!==b[a]&& -1!==b[a].indexOf(c)}removeEventListener(c,d){if(void 0===this._listeners)return;let e=this._listeners,a=e[c];if(void 0!==a){let b=a.indexOf(d);-1!==b&&a.splice(b,1)}}dispatchEvent(a){if(void 0===this._listeners)return;let e=this._listeners,c=e[a.type];if(void 0!==c){a.target=this;let d=c.slice(0);for(let b=0,f=d.length;b<f;b++)d[b].call(this,a);a.target=null}}}let dX=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],dY=1234567,aF=Math.PI/180,aG=180/Math.PI;function aH(){let a=4294967295*Math.random()|0,b=4294967295*Math.random()|0,c=4294967295*Math.random()|0,d=4294967295*Math.random()|0,e=dX[255&a]+dX[a>>8&255]+dX[a>>16&255]+dX[a>>24&255]+"-"+dX[255&b]+dX[b>>8&255]+"-"+dX[b>>16&15|64]+dX[b>>24&255]+"-"+dX[63&c|128]+dX[c>>8&255]+"-"+dX[c>>16&255]+dX[c>>24&255]+dX[255&d]+dX[d>>8&255]+dX[d>>16&255]+dX[d>>24&255];return e.toLowerCase()}function aI(a,b,c){return Math.max(b,Math.min(c,a))}function aJ(b,a){return(b%a+a)%a}function aK(b,c,a){return(1-a)*b+a*c}function aL(a){return a*aF}function aM(a){return a*aG}function aN(a){return(a&a-1)==0&&0!==a}function aO(a){return Math.pow(2,Math.ceil(Math.log(a)/Math.LN2))}function aP(a){return Math.pow(2,Math.floor(Math.log(a)/Math.LN2))}var dZ=Object.freeze({__proto__:null,DEG2RAD:aF,RAD2DEG:aG,generateUUID:aH,clamp:aI,euclideanModulo:aJ,mapLinear:function(c,a,d,b,e){return b+(c-a)*(e-b)/(d-a)},inverseLerp:function(a,b,c){return a!==b?(c-a)/(b-a):0},lerp:aK,damp:function(a,b,c,d){return aK(a,b,1-Math.exp(-c*d))},pingpong:function(b,a=1){return a-Math.abs(aJ(b,2*a)-a)},smoothstep:function(a,b,c){return a<=b?0:a>=c?1:(a=(a-b)/(c-b))*a*(3-2*a)},smootherstep:function(a,b,c){return a<=b?0:a>=c?1:(a=(a-b)/(c-b))*a*a*(a*(6*a-15)+10)},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},seededRandom:function(b){void 0!==b&&(dY=b);let a=dY+=1831565813;return a=Math.imul(a^a>>>15,1|a),(((a^=a+Math.imul(a^a>>>7,61|a))^a>>>14)>>>0)/4294967296},degToRad:aL,radToDeg:aM,isPowerOfTwo:aN,ceilPowerOfTwo:aO,floorPowerOfTwo:aP,setQuaternionFromProperEuler:function(c,d,n,e,o){let h=Math.cos,i=Math.sin,a=h(n/2),b=i(n/2),f=h((d+e)/2),g=i((d+e)/2),j=h((d-e)/2),k=i((d-e)/2),l=h((e-d)/2),m=i((e-d)/2);switch(o){case"XYX":c.set(a*g,b*j,b*k,a*f);break;case"YZY":c.set(b*k,a*g,b*j,a*f);break;case"ZXZ":c.set(b*j,b*k,a*g,a*f);break;case"XZX":c.set(a*g,b*m,b*l,a*f);break;case"YXY":c.set(b*l,a*g,b*m,a*f);break;case"ZYZ":c.set(b*m,b*l,a*g,a*f);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+o)}},normalize:function(a,b){switch(b.constructor){case Float32Array:return a;case Uint16Array:return Math.round(65535*a);case Uint8Array:return Math.round(255*a);case Int16Array:return Math.round(32767*a);case Int8Array:return Math.round(127*a);default:throw Error("Invalid component type.")}},denormalize:function(a,b){switch(b.constructor){case Float32Array:return a;case Uint16Array:return a/65535;case Uint8Array:return a/255;case Int16Array:return Math.max(a/32767,-1);case Int8Array:return Math.max(a/127,-1);default:throw Error("Invalid component type.")}}});class j{constructor(a=0,b=0){j.prototype.isVector2=!0,this.x=a,this.y=b}get width(){return this.x}set width(a){this.x=a}get height(){return this.y}set height(a){this.y=a}set(a,b){return this.x=a,this.y=b,this}setScalar(a){return this.x=a,this.y=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setComponent(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y)}copy(a){return this.x=a.x,this.y=a.y,this}add(a){return this.x+=a.x,this.y+=a.y,this}addScalar(a){return this.x+=a,this.y+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this}sub(a){return this.x-=a.x,this.y-=a.y,this}subScalar(a){return this.x-=a,this.y-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this}multiply(a){return this.x*=a.x,this.y*=a.y,this}multiplyScalar(a){return this.x*=a,this.y*=a,this}divide(a){return this.x/=a.x,this.y/=a.y,this}divideScalar(a){return this.multiplyScalar(1/a)}applyMatrix3(d){let b=this.x,c=this.y,a=d.elements;return this.x=a[0]*b+a[3]*c+a[6],this.y=a[1]*b+a[4]*c+a[7],this}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this}clampLength(b,c){let a=this.length();return this.divideScalar(a||1).multiplyScalar(Math.max(b,Math.min(c,a)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(a){return this.x*a.x+this.y*a.y}cross(a){return this.x*a.y-this.y*a.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){let a=Math.atan2(-this.y,-this.x)+Math.PI;return a}distanceTo(a){return Math.sqrt(this.distanceToSquared(a))}distanceToSquared(a){let b=this.x-a.x,c=this.y-a.y;return b*b+c*c}manhattanDistanceTo(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this}equals(a){return a.x===this.x&&a.y===this.y}fromArray(a,b=0){return this.x=a[b],this.y=a[b+1],this}toArray(a=[],b=0){return a[b]=this.x,a[b+1]=this.y,a}fromBufferAttribute(a,b){return this.x=a.getX(b),this.y=a.getY(b),this}rotateAround(a,b){let c=Math.cos(b),d=Math.sin(b),e=this.x-a.x,f=this.y-a.y;return this.x=e*c-f*d+a.x,this.y=e*d+f*c+a.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class u{constructor(){u.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(b,c,d,e,f,g,h,i,j){let a=this.elements;return a[0]=b,a[1]=e,a[2]=h,a[3]=c,a[4]=f,a[5]=i,a[6]=d,a[7]=g,a[8]=j,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(c){let a=this.elements,b=c.elements;return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],this}extractBasis(a,b,c){return a.setFromMatrix3Column(this,0),b.setFromMatrix3Column(this,1),c.setFromMatrix3Column(this,2),this}setFromMatrix4(b){let a=b.elements;return this.set(a[0],a[4],a[8],a[1],a[5],a[9],a[2],a[6],a[10]),this}multiply(a){return this.multiplyMatrices(this,a)}premultiply(a){return this.multiplyMatrices(a,this)}multiplyMatrices(v,w){let a=v.elements,b=w.elements,c=this.elements,d=a[0],e=a[3],f=a[6],g=a[1],h=a[4],i=a[7],j=a[2],k=a[5],l=a[8],m=b[0],n=b[3],o=b[6],p=b[1],q=b[4],r=b[7],s=b[2],t=b[5],u=b[8];return c[0]=d*m+e*p+f*s,c[3]=d*n+e*q+f*t,c[6]=d*o+e*r+f*u,c[1]=g*m+h*p+i*s,c[4]=g*n+h*q+i*t,c[7]=g*o+h*r+i*u,c[2]=j*m+k*p+l*s,c[5]=j*n+k*q+l*t,c[8]=j*o+k*r+l*u,this}multiplyScalar(a){let b=this.elements;return b[0]*=a,b[3]*=a,b[6]*=a,b[1]*=a,b[4]*=a,b[7]*=a,b[2]*=a,b[5]*=a,b[8]*=a,this}determinant(){let a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8];return b*f*j-b*g*i-c*e*j+c*g*h+d*e*i-d*f*h}invert(){let a=this.elements,c=a[0],d=a[1],e=a[2],f=a[3],g=a[4],h=a[5],i=a[6],j=a[7],k=a[8],l=k*g-h*j,m=h*i-k*f,n=j*f-g*i,o=c*l+d*m+e*n;if(0===o)return this.set(0,0,0,0,0,0,0,0,0);let b=1/o;return a[0]=l*b,a[1]=(e*j-k*d)*b,a[2]=(h*d-e*g)*b,a[3]=m*b,a[4]=(k*c-e*i)*b,a[5]=(e*f-h*c)*b,a[6]=n*b,a[7]=(d*i-j*c)*b,a[8]=(g*c-d*f)*b,this}transpose(){let b,a=this.elements;return b=a[1],a[1]=a[3],a[3]=b,b=a[2],a[2]=a[6],a[6]=b,b=a[5],a[5]=a[7],a[7]=b,this}getNormalMatrix(a){return this.setFromMatrix4(a).invert().transpose()}transposeIntoArray(a){let b=this.elements;return a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8],this}setUvTransform(h,i,c,d,g,e,f){let a=Math.cos(g),b=Math.sin(g);return this.set(c*a,c*b,-c*(a*e+b*f)+e+h,-d*b,d*a,-d*(-b*e+a*f)+f+i,0,0,1),this}scale(b,c){let a=this.elements;return a[0]*=b,a[3]*=b,a[6]*=b,a[1]*=c,a[4]*=c,a[7]*=c,this}rotate(d){let b=Math.cos(d),c=Math.sin(d),a=this.elements,e=a[0],f=a[3],g=a[6],h=a[1],i=a[4],j=a[7];return a[0]=b*e+c*h,a[3]=b*f+c*i,a[6]=b*g+c*j,a[1]=-c*e+b*h,a[4]=-c*f+b*i,a[7]=-c*g+b*j,this}translate(b,c){let a=this.elements;return a[0]+=b*a[2],a[3]+=b*a[5],a[6]+=b*a[8],a[1]+=c*a[2],a[4]+=c*a[5],a[7]+=c*a[8],this}equals(b){let c=this.elements,d=b.elements;for(let a=0;a<9;a++)if(c[a]!==d[a])return!1;return!0}fromArray(b,c=0){for(let a=0;a<9;a++)this.elements[a]=b[a+c];return this}toArray(a=[],b=0){let c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a}clone(){return new this.constructor().fromArray(this.elements)}}function d$(b){for(let a=b.length-1;a>=0;--a)if(b[a]>65535)return!0;return!1}let d_={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function d0(a,b){return new d_[a](b)}function d1(a){return document.createElementNS("http://www.w3.org/1999/xhtml",a)}function aQ(a){return a<.04045?.0773993808*a:Math.pow(.9478672986*a+.0521327014,2.4)}function aR(a){return a<.0031308?12.92*a:1.055*Math.pow(a,.41666)-.055}let d2={[V]:{[F]:aQ},[F]:{[V]:aR}},d3={legacyMode:!0,get workingColorSpace(){return F},set workingColorSpace(colorSpace){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(a,b,c){if(this.legacyMode||b===c||!b||!c)return a;if(d2[b]&& void 0!==d2[b][c]){let d=d2[b][c];return a.r=d(a.r),a.g=d(a.g),a.b=d(a.b),a}throw Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(a,b){return this.convert(a,this.workingColorSpace,b)},toWorkingColorSpace:function(a,b){return this.convert(a,b,this.workingColorSpace)}},aS={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},d4={r:0,g:0,b:0},d5={h:0,s:0,l:0},d6={h:0,s:0,l:0};function d7(b,c,a){return(a<0&&(a+=1),a>1&&(a-=1),a<1/6)?b+(c-b)*6*a:a<.5?c:a<2/3?b+(c-b)*6*(2/3-a):b}function d8(b,a){return a.r=b.r,a.g=b.g,a.b=b.b,a}class h{constructor(a,b,c){if(this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===b&& void 0===c)return this.set(a);return this.setRGB(a,b,c)}set(a){return a&&a.isColor?this.copy(a):"number"==typeof a?this.setHex(a):"string"==typeof a&&this.setStyle(a),this}setScalar(a){return this.r=a,this.g=a,this.b=a,this}setHex(a,b=V){return a=Math.floor(a),this.r=(a>>16&255)/255,this.g=(a>>8&255)/255,this.b=(255&a)/255,d3.toWorkingColorSpace(this,b),this}setRGB(a,b,c,d=F){return this.r=a,this.g=b,this.b=c,d3.toWorkingColorSpace(this,d),this}setHSL(c,b,a,f=F){if(c=aJ(c,1),b=aI(b,0,1),a=aI(a,0,1),0===b)this.r=this.g=this.b=a;else{let d=a<=.5?a*(1+b):a+b-a*b,e=2*a-d;this.r=d7(e,d,c+1/3),this.g=d7(e,d,c),this.b=d7(e,d,c-1/3)}return d3.toWorkingColorSpace(this,f),this}setStyle(d,c=V){function f(a){void 0!==a&&1>parseFloat(a)&&console.warn("THREE.Color: Alpha component of "+d+" will be ignored.")}let e;if(e=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(d)){let a,i=e[1],g=e[2];switch(i){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(g))return this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,d3.toWorkingColorSpace(this,c),f(a[4]),this;if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(g))return this.r=Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,d3.toWorkingColorSpace(this,c),f(a[4]),this;break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(g)){let j=parseFloat(a[1])/360,k=parseInt(a[2],10)/100,l=parseInt(a[3],10)/100;return f(a[4]),this.setHSL(j,k,l,c)}}}else if(e=/^\#([A-Fa-f\d]+)$/.exec(d)){let b=e[1],h=b.length;if(3===h)return this.r=parseInt(b.charAt(0)+b.charAt(0),16)/255,this.g=parseInt(b.charAt(1)+b.charAt(1),16)/255,this.b=parseInt(b.charAt(2)+b.charAt(2),16)/255,d3.toWorkingColorSpace(this,c),this;if(6===h)return this.r=parseInt(b.charAt(0)+b.charAt(1),16)/255,this.g=parseInt(b.charAt(2)+b.charAt(3),16)/255,this.b=parseInt(b.charAt(4)+b.charAt(5),16)/255,d3.toWorkingColorSpace(this,c),this}return d&&d.length>0?this.setColorName(d,c):this}setColorName(a,c=V){let b=aS[a.toLowerCase()];return void 0!==b?this.setHex(b,c):console.warn("THREE.Color: Unknown color "+a),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(a){return this.r=a.r,this.g=a.g,this.b=a.b,this}copySRGBToLinear(a){return this.r=aQ(a.r),this.g=aQ(a.g),this.b=aQ(a.b),this}copyLinearToSRGB(a){return this.r=aR(a.r),this.g=aR(a.g),this.b=aR(a.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(a=V){return d3.fromWorkingColorSpace(d8(this,d4),a),aI(255*d4.r,0,255)<<16^aI(255*d4.g,0,255)<<8^aI(255*d4.b,0,255)<<0}getHexString(a=V){return("000000"+this.getHex(a).toString(16)).slice(-6)}getHSL(h,k=F){d3.fromWorkingColorSpace(d8(this,d4),k);let e=d4.r,a=d4.g,b=d4.b,c=Math.max(e,a,b),f=Math.min(e,a,b),d,i,j=(f+c)/2;if(f===c)d=0,i=0;else{let g=c-f;switch(i=j<=.5?g/(c+f):g/(2-c-f),c){case e:d=(a-b)/g+(a<b?6:0);break;case a:d=(b-e)/g+2;break;case b:d=(e-a)/g+4}d/=6}return h.h=d,h.s=i,h.l=j,h}getRGB(a,b=F){return d3.fromWorkingColorSpace(d8(this,d4),b),a.r=d4.r,a.g=d4.g,a.b=d4.b,a}getStyle(a=V){return(d3.fromWorkingColorSpace(d8(this,d4),a),a!==V)?`color(${a} ${d4.r} ${d4.g} ${d4.b})`:`rgb(${255*d4.r|0},${255*d4.g|0},${255*d4.b|0})`}offsetHSL(a,b,c){return this.getHSL(d5),d5.h+=a,d5.s+=b,d5.l+=c,this.setHSL(d5.h,d5.s,d5.l),this}add(a){return this.r+=a.r,this.g+=a.g,this.b+=a.b,this}addColors(a,b){return this.r=a.r+b.r,this.g=a.g+b.g,this.b=a.b+b.b,this}addScalar(a){return this.r+=a,this.g+=a,this.b+=a,this}sub(a){return this.r=Math.max(0,this.r-a.r),this.g=Math.max(0,this.g-a.g),this.b=Math.max(0,this.b-a.b),this}multiply(a){return this.r*=a.r,this.g*=a.g,this.b*=a.b,this}multiplyScalar(a){return this.r*=a,this.g*=a,this.b*=a,this}lerp(a,b){return this.r+=(a.r-this.r)*b,this.g+=(a.g-this.g)*b,this.b+=(a.b-this.b)*b,this}lerpColors(a,b,c){return this.r=a.r+(b.r-a.r)*c,this.g=a.g+(b.g-a.g)*c,this.b=a.b+(b.b-a.b)*c,this}lerpHSL(b,a){this.getHSL(d5),b.getHSL(d6);let c=aK(d5.h,d6.h,a),d=aK(d5.s,d6.s,a),e=aK(d5.l,d6.l,a);return this.setHSL(c,d,e),this}equals(a){return a.r===this.r&&a.g===this.g&&a.b===this.b}fromArray(a,b=0){return this.r=a[b],this.g=a[b+1],this.b=a[b+2],this}toArray(a=[],b=0){return a[b]=this.r,a[b+1]=this.g,a[b+2]=this.b,a}fromBufferAttribute(a,b){return this.r=a.getX(b),this.g=a.getY(b),this.b=a.getZ(b),!0===a.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}h.NAMES=aS;let d9;class ea{static getDataURL(a){if(/^data:/i.test(a.src)||"undefined"==typeof HTMLCanvasElement)return a.src;let b;if(a instanceof HTMLCanvasElement)b=a;else{void 0===d9&&(d9=d1("canvas")),d9.width=a.width,d9.height=a.height;let c=d9.getContext("2d");a instanceof ImageData?c.putImageData(a,0,0):c.drawImage(a,0,0,a.width,a.height),b=d9}return b.width>2048||b.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",a),b.toDataURL("image/jpeg",.6)):b.toDataURL("image/png")}static sRGBToLinear(a){if("undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap){let d=d1("canvas");d.width=a.width,d.height=a.height;let f=d.getContext("2d");f.drawImage(a,0,0,a.width,a.height);let h=f.getImageData(0,0,a.width,a.height),g=h.data;for(let e=0;e<g.length;e++)g[e]=255*aQ(g[e]/255);return f.putImageData(h,0,0),d}if(!a.data)return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),a;{let b=a.data.slice(0);for(let c=0;c<b.length;c++)b instanceof Uint8Array||b instanceof Uint8ClampedArray?b[c]=Math.floor(255*aQ(b[c]/255)):b[c]=aQ(b[c]);return{data:b,width:a.width,height:a.height}}}}class eb{constructor(a=null){this.isSource=!0,this.uuid=aH(),this.data=a,this.version=0}set needsUpdate(a){!0===a&&this.version++}toJSON(b){let f=void 0===b||"string"==typeof b;if(!f&& void 0!==b.images[this.uuid])return b.images[this.uuid];let e={uuid:this.uuid,url:""},a=this.data;if(null!==a){let c;if(Array.isArray(a)){c=[];for(let d=0,g=a.length;d<g;d++)a[d].isDataTexture?c.push(ec(a[d].image)):c.push(ec(a[d]))}else c=ec(a);e.url=c}return f||(b.images[this.uuid]=e),e}}function ec(a){return"undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap?ea.getDataURL(a):a.data?{data:Array.from(a.data),width:a.width,height:a.height,type:a.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let ed=0;class l extends q{constructor(a=l.DEFAULT_IMAGE,b=l.DEFAULT_MAPPING,c=ax,d=ax,e=aC,f=aE,g=cD,h=cq,i=1,k=dn){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:ed++}),this.uuid=aH(),this.name="",this.source=new eb(a),this.mipmaps=[],this.mapping=b,this.wrapS=c,this.wrapT=d,this.magFilter=e,this.minFilter=f,this.anisotropy=i,this.format=g,this.internalFormat=null,this.type=h,this.offset=new j(0,0),this.repeat=new j(1,1),this.center=new j(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new u,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=k,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(a){this.source.data=a}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(a){return this.name=a.name,this.source=a.source,this.mipmaps=a.mipmaps.slice(0),this.mapping=a.mapping,this.wrapS=a.wrapS,this.wrapT=a.wrapT,this.magFilter=a.magFilter,this.minFilter=a.minFilter,this.anisotropy=a.anisotropy,this.format=a.format,this.internalFormat=a.internalFormat,this.type=a.type,this.offset.copy(a.offset),this.repeat.copy(a.repeat),this.center.copy(a.center),this.rotation=a.rotation,this.matrixAutoUpdate=a.matrixAutoUpdate,this.matrix.copy(a.matrix),this.generateMipmaps=a.generateMipmaps,this.premultiplyAlpha=a.premultiplyAlpha,this.flipY=a.flipY,this.unpackAlignment=a.unpackAlignment,this.encoding=a.encoding,this.userData=JSON.parse(JSON.stringify(a.userData)),this.needsUpdate=!0,this}toJSON(a){let c=void 0===a||"string"==typeof a;if(!c&& void 0!==a.textures[this.uuid])return a.textures[this.uuid];let b={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(a).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(b.userData=this.userData),c||(a.textures[this.uuid]=b),b}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(a){if(this.mapping!==S)return a;if(a.applyMatrix3(this.matrix),a.x<0||a.x>1)switch(this.wrapS){case aw:a.x=a.x-Math.floor(a.x);break;case ax:a.x=a.x<0?0:1;break;case ay:1===Math.abs(Math.floor(a.x)%2)?a.x=Math.ceil(a.x)-a.x:a.x=a.x-Math.floor(a.x)}if(a.y<0||a.y>1)switch(this.wrapT){case aw:a.y=a.y-Math.floor(a.y);break;case ax:a.y=a.y<0?0:1;break;case ay:1===Math.abs(Math.floor(a.y)%2)?a.y=Math.ceil(a.y)-a.y:a.y=a.y-Math.floor(a.y)}return this.flipY&&(a.y=1-a.y),a}set needsUpdate(a){!0===a&&(this.version++,this.source.needsUpdate=!0)}}l.DEFAULT_IMAGE=null,l.DEFAULT_MAPPING=S;class W{constructor(a=0,b=0,c=0,d=1){W.prototype.isVector4=!0,this.x=a,this.y=b,this.z=c,this.w=d}get width(){return this.z}set width(a){this.z=a}get height(){return this.w}set height(a){this.w=a}set(a,b,c,d){return this.x=a,this.y=b,this.z=c,this.w=d,this}setScalar(a){return this.x=a,this.y=a,this.z=a,this.w=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setZ(a){return this.z=a,this}setW(a){return this.w=a,this}setComponent(b,a){switch(b){case 0:this.x=a;break;case 1:this.y=a;break;case 2:this.z=a;break;case 3:this.w=a;break;default:throw Error("index is out of range: "+b)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=void 0!==a.w?a.w:1,this}add(a){return this.x+=a.x,this.y+=a.y,this.z+=a.z,this.w+=a.w,this}addScalar(a){return this.x+=a,this.y+=a,this.z+=a,this.w+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this.z+=a.z*b,this.w+=a.w*b,this}sub(a){return this.x-=a.x,this.y-=a.y,this.z-=a.z,this.w-=a.w,this}subScalar(a){return this.x-=a,this.y-=a,this.z-=a,this.w-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this}multiply(a){return this.x*=a.x,this.y*=a.y,this.z*=a.z,this.w*=a.w,this}multiplyScalar(a){return this.x*=a,this.y*=a,this.z*=a,this.w*=a,this}applyMatrix4(f){let b=this.x,c=this.y,d=this.z,e=this.w,a=f.elements;return this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e,this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e,this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*e,this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e,this}divideScalar(a){return this.multiplyScalar(1/a)}setAxisAngleFromQuaternion(a){this.w=2*Math.acos(a.w);let b=Math.sqrt(1-a.w*a.w);return b<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b),this}setAxisAngleFromRotationMatrix(v){let r,a,b,c,d=v.elements,o=d[0],e=d[4],f=d[8],g=d[1],p=d[5],h=d[9],i=d[2],j=d[6],q=d[10];if(.01>Math.abs(e-g)&&.01>Math.abs(f-i)&&.01>Math.abs(h-j)){if(.1>Math.abs(e+g)&&.1>Math.abs(f+i)&&.1>Math.abs(h+j)&&.1>Math.abs(o+p+q-3))return this.set(1,0,0,0),this;r=Math.PI;let l=(o+1)/2,m=(p+1)/2,n=(q+1)/2,s=(e+g)/4,t=(f+i)/4,u=(h+j)/4;return l>m&&l>n?l<.01?(a=0,b=.707106781,c=.707106781):(a=Math.sqrt(l),b=s/a,c=t/a):m>n?m<.01?(a=.707106781,b=0,c=.707106781):(b=Math.sqrt(m),a=s/b,c=u/b):n<.01?(a=.707106781,b=.707106781,c=0):(c=Math.sqrt(n),a=t/c,b=u/c),this.set(a,b,c,r),this}let k=Math.sqrt((j-h)*(j-h)+(f-i)*(f-i)+(g-e)*(g-e));return .001>Math.abs(k)&&(k=1),this.x=(j-h)/k,this.y=(f-i)/k,this.z=(g-e)/k,this.w=Math.acos((o+p+q-1)/2),this}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this.z=Math.min(this.z,a.z),this.w=Math.min(this.w,a.w),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this.z=Math.max(this.z,a.z),this.w=Math.max(this.w,a.w),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this.z=Math.max(a.z,Math.min(b.z,this.z)),this.w=Math.max(a.w,Math.min(b.w,this.w)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this.z=Math.max(a,Math.min(b,this.z)),this.w=Math.max(a,Math.min(b,this.w)),this}clampLength(b,c){let a=this.length();return this.divideScalar(a||1).multiplyScalar(Math.max(b,Math.min(c,a)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this.w+=(a.w-this.w)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this.z=a.z+(b.z-a.z)*c,this.w=a.w+(b.w-a.w)*c,this}equals(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w}fromArray(a,b=0){return this.x=a[b],this.y=a[b+1],this.z=a[b+2],this.w=a[b+3],this}toArray(a=[],b=0){return a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a[b+3]=this.w,a}fromBufferAttribute(a,b){return this.x=a.getX(b),this.y=a.getY(b),this.z=a.getZ(b),this.w=a.getW(b),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class y extends q{constructor(b,c,a={}){super(),this.isWebGLRenderTarget=!0,this.width=b,this.height=c,this.depth=1,this.scissor=new W(0,0,b,c),this.scissorTest=!1,this.viewport=new W(0,0,b,c),this.texture=new l({width:b,height:c,depth:1},a.mapping,a.wrapS,a.wrapT,a.magFilter,a.minFilter,a.format,a.type,a.anisotropy,a.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==a.generateMipmaps&&a.generateMipmaps,this.texture.internalFormat=void 0!==a.internalFormat?a.internalFormat:null,this.texture.minFilter=void 0!==a.minFilter?a.minFilter:aC,this.depthBuffer=void 0===a.depthBuffer||a.depthBuffer,this.stencilBuffer=void 0!==a.stencilBuffer&&a.stencilBuffer,this.depthTexture=void 0!==a.depthTexture?a.depthTexture:null,this.samples=void 0!==a.samples?a.samples:0}setSize(a,b,c=1){(this.width!==a||this.height!==b||this.depth!==c)&&(this.width=a,this.height=b,this.depth=c,this.texture.image.width=a,this.texture.image.height=b,this.texture.image.depth=c,this.dispose()),this.viewport.set(0,0,a,b),this.scissor.set(0,0,a,b)}clone(){return new this.constructor().copy(this)}copy(a){this.width=a.width,this.height=a.height,this.depth=a.depth,this.viewport.copy(a.viewport),this.texture=a.texture.clone(),this.texture.isRenderTargetTexture=!0;let b=Object.assign({},a.texture.image);return this.texture.source=new eb(b),this.depthBuffer=a.depthBuffer,this.stencilBuffer=a.stencilBuffer,null!==a.depthTexture&&(this.depthTexture=a.depthTexture.clone()),this.samples=a.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class X extends l{constructor(a=null,b=1,c=1,d=1){super(null),this.isDataArrayTexture=!0,this.image={data:a,width:b,height:c,depth:d},this.magFilter=az,this.minFilter=az,this.wrapR=ax,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ee extends y{constructor(a,b,c){super(a,b),this.isWebGLArrayRenderTarget=!0,this.depth=c,this.texture=new X(null,a,b,c),this.texture.isRenderTargetTexture=!0}}class Y extends l{constructor(a=null,b=1,c=1,d=1){super(null),this.isData3DTexture=!0,this.image={data:a,width:b,height:c,depth:d},this.magFilter=az,this.minFilter=az,this.wrapR=ax,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ef extends y{constructor(a,b,c){super(a,b),this.isWebGL3DRenderTarget=!0,this.depth=c,this.texture=new Y(null,a,b,c),this.texture.isRenderTargetTexture=!0}}class eg extends y{constructor(b,c,d,e={}){super(b,c,e),this.isWebGLMultipleRenderTargets=!0;let f=this.texture;this.texture=[];for(let a=0;a<d;a++)this.texture[a]=f.clone(),this.texture[a].isRenderTargetTexture=!0}setSize(a,b,d=1){if(this.width!==a||this.height!==b||this.depth!==d){this.width=a,this.height=b,this.depth=d;for(let c=0,e=this.texture.length;c<e;c++)this.texture[c].image.width=a,this.texture[c].image.height=b,this.texture[c].image.depth=d;this.dispose()}return this.viewport.set(0,0,a,b),this.scissor.set(0,0,a,b),this}copy(a){this.dispose(),this.width=a.width,this.height=a.height,this.depth=a.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=a.depthBuffer,this.stencilBuffer=a.stencilBuffer,null!==a.depthTexture&&(this.depthTexture=a.depthTexture.clone()),this.texture.length=0;for(let b=0,c=a.texture.length;b<c;b++)this.texture[b]=a.texture[b].clone(),this.texture[b].isRenderTargetTexture=!0;return this}}class v{constructor(a=0,b=0,c=0,d=1){this.isQuaternion=!0,this._x=a,this._y=b,this._z=c,this._w=d}static slerpFlat(a,b,i,j,k,l,g){let c=i[j+0],d=i[j+1],e=i[j+2],f=i[j+3],m=k[l+0],n=k[l+1],o=k[l+2],p=k[l+3];if(0===g){a[b+0]=c,a[b+1]=d,a[b+2]=e,a[b+3]=f;return}if(1===g){a[b+0]=m,a[b+1]=n,a[b+2]=o,a[b+3]=p;return}if(f!==p||c!==m||d!==n||e!==o){let h=1-g,q=c*m+d*n+e*o+f*p,u=q>=0?1:-1,v=1-q*q;if(v>Number.EPSILON){let t=Math.sqrt(v),w=Math.atan2(t,q*u);h=Math.sin(h*w)/t,g=Math.sin(g*w)/t}let r=g*u;if(c=c*h+m*r,d=d*h+n*r,e=e*h+o*r,f=f*h+p*r,h===1-g){let s=1/Math.sqrt(c*c+d*d+e*e+f*f);c*=s,d*=s,e*=s,f*=s}}a[b]=c,a[b+1]=d,a[b+2]=e,a[b+3]=f}static multiplyQuaternionsFlat(a,b,c,d,e,f){let g=c[d],h=c[d+1],i=c[d+2],j=c[d+3],k=e[f],l=e[f+1],m=e[f+2],n=e[f+3];return a[b]=g*n+j*k+h*m-i*l,a[b+1]=h*n+j*l+i*k-g*m,a[b+2]=i*n+j*m+g*l-h*k,a[b+3]=j*n-g*k-h*l-i*m,a}get x(){return this._x}set x(a){this._x=a,this._onChangeCallback()}get y(){return this._y}set y(a){this._y=a,this._onChangeCallback()}get z(){return this._z}set z(a){this._z=a,this._onChangeCallback()}get w(){return this._w}set w(a){this._w=a,this._onChangeCallback()}set(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._w=d,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(a){return this._x=a.x,this._y=a.y,this._z=a.z,this._w=a.w,this._onChangeCallback(),this}setFromEuler(g,n){if(!(g&&g.isEuler))throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");let j=g._x,k=g._y,l=g._z,m=g._order,h=Math.cos,i=Math.sin,a=h(j/2),b=h(k/2),c=h(l/2),d=i(j/2),e=i(k/2),f=i(l/2);switch(m){case"XYZ":this._x=d*b*c+a*e*f,this._y=a*e*c-d*b*f,this._z=a*b*f+d*e*c,this._w=a*b*c-d*e*f;break;case"YXZ":this._x=d*b*c+a*e*f,this._y=a*e*c-d*b*f,this._z=a*b*f-d*e*c,this._w=a*b*c+d*e*f;break;case"ZXY":this._x=d*b*c-a*e*f,this._y=a*e*c+d*b*f,this._z=a*b*f+d*e*c,this._w=a*b*c-d*e*f;break;case"ZYX":this._x=d*b*c-a*e*f,this._y=a*e*c+d*b*f,this._z=a*b*f-d*e*c,this._w=a*b*c+d*e*f;break;case"YZX":this._x=d*b*c+a*e*f,this._y=a*e*c+d*b*f,this._z=a*b*f-d*e*c,this._w=a*b*c-d*e*f;break;case"XZY":this._x=d*b*c-a*e*f,this._y=a*e*c-d*b*f,this._z=a*b*f+d*e*c,this._w=a*b*c+d*e*f;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+m)}return!1!==n&&this._onChangeCallback(),this}setFromAxisAngle(a,d){let c=d/2,b=Math.sin(c);return this._x=a.x*b,this._y=a.y*b,this._z=a.z*b,this._w=Math.cos(c),this._onChangeCallback(),this}setFromRotationMatrix(p){let a=p.elements,b=a[0],e=a[4],f=a[8],g=a[1],c=a[5],h=a[9],i=a[2],j=a[6],d=a[10],o=b+c+d;if(o>0){let k=.5/Math.sqrt(o+1);this._w=.25/k,this._x=(j-h)*k,this._y=(f-i)*k,this._z=(g-e)*k}else if(b>c&&b>d){let l=2*Math.sqrt(1+b-c-d);this._w=(j-h)/l,this._x=.25*l,this._y=(e+g)/l,this._z=(f+i)/l}else if(c>d){let m=2*Math.sqrt(1+c-b-d);this._w=(f-i)/m,this._x=(e+g)/m,this._y=.25*m,this._z=(h+j)/m}else{let n=2*Math.sqrt(1+d-b-c);this._w=(g-e)/n,this._x=(f+i)/n,this._y=(h+j)/n,this._z=.25*n}return this._onChangeCallback(),this}setFromUnitVectors(a,b){let c=a.dot(b)+1;return c<Number.EPSILON?(c=0,Math.abs(a.x)>Math.abs(a.z)?(this._x=-a.y,this._y=a.x,this._z=0,this._w=c):(this._x=0,this._y=-a.z,this._z=a.y,this._w=c)):(this._x=a.y*b.z-a.z*b.y,this._y=a.z*b.x-a.x*b.z,this._z=a.x*b.y-a.y*b.x,this._w=c),this.normalize()}angleTo(a){return 2*Math.acos(Math.abs(aI(this.dot(a),-1,1)))}rotateTowards(a,c){let b=this.angleTo(a);if(0===b)return this;let d=Math.min(1,c/b);return this.slerp(a,d),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let a=this.length();return 0===a?(this._x=0,this._y=0,this._z=0,this._w=1):(a=1/a,this._x=this._x*a,this._y=this._y*a,this._z=this._z*a,this._w=this._w*a),this._onChangeCallback(),this}multiply(a){return this.multiplyQuaternions(this,a)}premultiply(a){return this.multiplyQuaternions(a,this)}multiplyQuaternions(a,b){let c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,i=b._z,j=b._w;return this._x=c*j+f*g+d*i-e*h,this._y=d*j+f*h+e*g-c*i,this._z=e*j+f*i+c*h-d*g,this._w=f*j-c*g-d*h-e*i,this._onChangeCallback(),this}slerp(a,b){if(0===b)return this;if(1===b)return this.copy(a);let d=this._x,e=this._y,f=this._z,g=this._w,c=g*a._w+d*a._x+e*a._y+f*a._z;if(c<0?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,c=-c):this.copy(a),c>=1)return this._w=g,this._x=d,this._y=e,this._z=f,this;let l=1-c*c;if(l<=Number.EPSILON){let h=1-b;return this._w=h*g+b*this._w,this._x=h*d+b*this._x,this._y=h*e+b*this._y,this._z=h*f+b*this._z,this.normalize(),this._onChangeCallback(),this}let k=Math.sqrt(l),m=Math.atan2(k,c),i=Math.sin((1-b)*m)/k,j=Math.sin(b*m)/k;return this._w=g*i+this._w*j,this._x=d*i+this._x*j,this._y=e*i+this._y*j,this._z=f*i+this._z*j,this._onChangeCallback(),this}slerpQuaternions(a,b,c){return this.copy(a).slerp(b,c)}random(){let a=Math.random(),b=Math.sqrt(1-a),c=Math.sqrt(a),d=2*Math.PI*Math.random(),e=2*Math.PI*Math.random();return this.set(b*Math.cos(d),c*Math.sin(e),c*Math.cos(e),b*Math.sin(d))}equals(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w}fromArray(a,b=0){return this._x=a[b],this._y=a[b+1],this._z=a[b+2],this._w=a[b+3],this._onChangeCallback(),this}toArray(a=[],b=0){return a[b]=this._x,a[b+1]=this._y,a[b+2]=this._z,a[b+3]=this._w,a}fromBufferAttribute(a,b){return this._x=a.getX(b),this._y=a.getY(b),this._z=a.getZ(b),this._w=a.getW(b),this}_onChange(a){return this._onChangeCallback=a,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class a{constructor(b=0,c=0,d=0){a.prototype.isVector3=!0,this.x=b,this.y=c,this.z=d}set(b,c,a){return void 0===a&&(a=this.z),this.x=b,this.y=c,this.z=a,this}setScalar(a){return this.x=a,this.y=a,this.z=a,this}setX(a){return this.x=a,this}setY(a){return this.y=a,this}setZ(a){return this.z=a,this}setComponent(b,a){switch(b){case 0:this.x=a;break;case 1:this.y=a;break;case 2:this.z=a;break;default:throw Error("index is out of range: "+b)}return this}getComponent(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+a)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(a){return this.x=a.x,this.y=a.y,this.z=a.z,this}add(a){return this.x+=a.x,this.y+=a.y,this.z+=a.z,this}addScalar(a){return this.x+=a,this.y+=a,this.z+=a,this}addVectors(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this}addScaledVector(a,b){return this.x+=a.x*b,this.y+=a.y*b,this.z+=a.z*b,this}sub(a){return this.x-=a.x,this.y-=a.y,this.z-=a.z,this}subScalar(a){return this.x-=a,this.y-=a,this.z-=a,this}subVectors(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this}multiply(a){return this.x*=a.x,this.y*=a.y,this.z*=a.z,this}multiplyScalar(a){return this.x*=a,this.y*=a,this.z*=a,this}multiplyVectors(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this}applyEuler(a){return this.applyQuaternion(ei.setFromEuler(a))}applyAxisAngle(a,b){return this.applyQuaternion(ei.setFromAxisAngle(a,b))}applyMatrix3(e){let b=this.x,c=this.y,d=this.z,a=e.elements;return this.x=a[0]*b+a[3]*c+a[6]*d,this.y=a[1]*b+a[4]*c+a[7]*d,this.z=a[2]*b+a[5]*c+a[8]*d,this}applyNormalMatrix(a){return this.applyMatrix3(a).normalize()}applyMatrix4(f){let b=this.x,c=this.y,d=this.z,a=f.elements,e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);return this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e,this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e,this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*e,this}applyQuaternion(e){let f=this.x,g=this.y,h=this.z,a=e.x,b=e.y,c=e.z,d=e.w,i=d*f+b*h-c*g,j=d*g+c*f-a*h,k=d*h+a*g-b*f,l=-a*f-b*g-c*h;return this.x=i*d+ -(l*a)+ -(j*c)- -(k*b),this.y=j*d+ -(l*b)+ -(k*a)- -(i*c),this.z=k*d+ -(l*c)+ -(i*b)- -(j*a),this}project(a){return this.applyMatrix4(a.matrixWorldInverse).applyMatrix4(a.projectionMatrix)}unproject(a){return this.applyMatrix4(a.projectionMatrixInverse).applyMatrix4(a.matrixWorld)}transformDirection(e){let b=this.x,c=this.y,d=this.z,a=e.elements;return this.x=a[0]*b+a[4]*c+a[8]*d,this.y=a[1]*b+a[5]*c+a[9]*d,this.z=a[2]*b+a[6]*c+a[10]*d,this.normalize()}divide(a){return this.x/=a.x,this.y/=a.y,this.z/=a.z,this}divideScalar(a){return this.multiplyScalar(1/a)}min(a){return this.x=Math.min(this.x,a.x),this.y=Math.min(this.y,a.y),this.z=Math.min(this.z,a.z),this}max(a){return this.x=Math.max(this.x,a.x),this.y=Math.max(this.y,a.y),this.z=Math.max(this.z,a.z),this}clamp(a,b){return this.x=Math.max(a.x,Math.min(b.x,this.x)),this.y=Math.max(a.y,Math.min(b.y,this.y)),this.z=Math.max(a.z,Math.min(b.z,this.z)),this}clampScalar(a,b){return this.x=Math.max(a,Math.min(b,this.x)),this.y=Math.max(a,Math.min(b,this.y)),this.z=Math.max(a,Math.min(b,this.z)),this}clampLength(b,c){let a=this.length();return this.divideScalar(a||1).multiplyScalar(Math.max(b,Math.min(c,a)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(a){return this.x*a.x+this.y*a.y+this.z*a.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(a){return this.normalize().multiplyScalar(a)}lerp(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this}lerpVectors(a,b,c){return this.x=a.x+(b.x-a.x)*c,this.y=a.y+(b.y-a.y)*c,this.z=a.z+(b.z-a.z)*c,this}cross(a){return this.crossVectors(this,a)}crossVectors(a,b){let c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;return this.x=d*h-e*g,this.y=e*f-c*h,this.z=c*g-d*f,this}projectOnVector(a){let b=a.lengthSq();if(0===b)return this.set(0,0,0);let c=a.dot(this)/b;return this.copy(a).multiplyScalar(c)}projectOnPlane(a){return eh.copy(this).projectOnVector(a),this.sub(eh)}reflect(a){return this.sub(eh.copy(a).multiplyScalar(2*this.dot(a)))}angleTo(a){let b=Math.sqrt(this.lengthSq()*a.lengthSq());if(0===b)return Math.PI/2;let c=this.dot(a)/b;return Math.acos(aI(c,-1,1))}distanceTo(a){return Math.sqrt(this.distanceToSquared(a))}distanceToSquared(a){let b=this.x-a.x,c=this.y-a.y,d=this.z-a.z;return b*b+c*c+d*d}manhattanDistanceTo(a){return Math.abs(this.x-a.x)+Math.abs(this.y-a.y)+Math.abs(this.z-a.z)}setFromSpherical(a){return this.setFromSphericalCoords(a.radius,a.phi,a.theta)}setFromSphericalCoords(a,b,c){let d=Math.sin(b)*a;return this.x=d*Math.sin(c),this.y=Math.cos(b)*a,this.z=d*Math.cos(c),this}setFromCylindrical(a){return this.setFromCylindricalCoords(a.radius,a.theta,a.y)}setFromCylindricalCoords(a,b,c){return this.x=a*Math.sin(b),this.y=c,this.z=a*Math.cos(b),this}setFromMatrixPosition(b){let a=b.elements;return this.x=a[12],this.y=a[13],this.z=a[14],this}setFromMatrixScale(a){let b=this.setFromMatrixColumn(a,0).length(),c=this.setFromMatrixColumn(a,1).length(),d=this.setFromMatrixColumn(a,2).length();return this.x=b,this.y=c,this.z=d,this}setFromMatrixColumn(a,b){return this.fromArray(a.elements,4*b)}setFromMatrix3Column(a,b){return this.fromArray(a.elements,3*b)}setFromEuler(a){return this.x=a._x,this.y=a._y,this.z=a._z,this}equals(a){return a.x===this.x&&a.y===this.y&&a.z===this.z}fromArray(a,b=0){return this.x=a[b],this.y=a[b+1],this.z=a[b+2],this}toArray(a=[],b=0){return a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a}fromBufferAttribute(a,b){return this.x=a.getX(b),this.y=a.getY(b),this.z=a.getZ(b),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let a=(Math.random()-.5)*2,b=Math.random()*Math.PI*2,c=Math.sqrt(1-a**2);return this.x=c*Math.cos(b),this.y=c*Math.sin(b),this.z=a,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}let eh=new a,ei=new v;class z{constructor(b=new a(Infinity,Infinity,Infinity),c=new a(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=b,this.max=c}set(a,b){return this.min.copy(a),this.max.copy(b),this}setFromArray(b){let f=Infinity,g=Infinity,h=Infinity,i=-1/0,j=-1/0,k=-1/0;for(let a=0,l=b.length;a<l;a+=3){let c=b[a],d=b[a+1],e=b[a+2];c<f&&(f=c),d<g&&(g=d),e<h&&(h=e),c>i&&(i=c),d>j&&(j=d),e>k&&(k=e)}return this.min.set(f,g,h),this.max.set(i,j,k),this}setFromBufferAttribute(b){let f=Infinity,g=Infinity,h=Infinity,i=-1/0,j=-1/0,k=-1/0;for(let a=0,l=b.count;a<l;a++){let c=b.getX(a),d=b.getY(a),e=b.getZ(a);c<f&&(f=c),d<g&&(g=d),e<h&&(h=e),c>i&&(i=c),d>j&&(j=d),e>k&&(k=e)}return this.min.set(f,g,h),this.max.set(i,j,k),this}setFromPoints(b){this.makeEmpty();for(let a=0,c=b.length;a<c;a++)this.expandByPoint(b[a]);return this}setFromCenterAndSize(a,c){let b=ek.copy(c).multiplyScalar(.5);return this.min.copy(a).sub(b),this.max.copy(a).add(b),this}setFromObject(a,b=!1){return this.makeEmpty(),this.expandByObject(a,b)}clone(){return new this.constructor().copy(this)}copy(a){return this.min.copy(a.min),this.max.copy(a.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(a){return this.isEmpty()?a.set(0,0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(a){return this.isEmpty()?a.set(0,0,0):a.subVectors(this.max,this.min)}expandByPoint(a){return this.min.min(a),this.max.max(a),this}expandByVector(a){return this.min.sub(a),this.max.add(a),this}expandByScalar(a){return this.min.addScalar(-a),this.max.addScalar(a),this}expandByObject(b,e=!1){b.updateWorldMatrix(!1,!1);let a=b.geometry;if(void 0!==a){if(e&& void 0!=a.attributes&& void 0!==a.attributes.position){let f=a.attributes.position;for(let c=0,h=f.count;c<h;c++)ek.fromBufferAttribute(f,c).applyMatrix4(b.matrixWorld),this.expandByPoint(ek)}else null===a.boundingBox&&a.computeBoundingBox(),el.copy(a.boundingBox),el.applyMatrix4(b.matrixWorld),this.union(el)}let g=b.children;for(let d=0,i=g.length;d<i;d++)this.expandByObject(g[d],e);return this}containsPoint(a){return!(a.x<this.min.x)&&!(a.x>this.max.x)&&!(a.y<this.min.y)&&!(a.y>this.max.y)&&!(a.z<this.min.z)&&!(a.z>this.max.z)}containsBox(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z}getParameter(a,b){return b.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(a){return!(a.max.x<this.min.x)&&!(a.min.x>this.max.x)&&!(a.max.y<this.min.y)&&!(a.min.y>this.max.y)&&!(a.max.z<this.min.z)&&!(a.min.z>this.max.z)}intersectsSphere(a){return this.clampPoint(a.center,ek),ek.distanceToSquared(a.center)<=a.radius*a.radius}intersectsPlane(a){let b,c;return a.normal.x>0?(b=a.normal.x*this.min.x,c=a.normal.x*this.max.x):(b=a.normal.x*this.max.x,c=a.normal.x*this.min.x),a.normal.y>0?(b+=a.normal.y*this.min.y,c+=a.normal.y*this.max.y):(b+=a.normal.y*this.max.y,c+=a.normal.y*this.min.y),a.normal.z>0?(b+=a.normal.z*this.min.z,c+=a.normal.z*this.max.z):(b+=a.normal.z*this.max.z,c+=a.normal.z*this.min.z),b<= -a.constant&&c>= -a.constant}intersectsTriangle(a){if(this.isEmpty())return!1;this.getCenter(es),et.subVectors(this.max,es),em.subVectors(a.a,es),en.subVectors(a.b,es),eo.subVectors(a.c,es),ep.subVectors(en,em),eq.subVectors(eo,en),er.subVectors(em,eo);let b=[0,-ep.z,ep.y,0,-eq.z,eq.y,0,-er.z,er.y,ep.z,0,-ep.x,eq.z,0,-eq.x,er.z,0,-er.x,-ep.y,ep.x,0,-eq.y,eq.x,0,-er.y,er.x,0];return!!(ew(b,em,en,eo,et)&&ew(b=[1,0,0,0,1,0,0,0,1],em,en,eo,et))&&(eu.crossVectors(ep,eq),ew(b=[eu.x,eu.y,eu.z],em,en,eo,et))}clampPoint(a,b){return b.copy(a).clamp(this.min,this.max)}distanceToPoint(a){let b=ek.copy(a).clamp(this.min,this.max);return b.sub(a).length()}getBoundingSphere(a){return this.getCenter(a.center),a.radius=.5*this.getSize(ek).length(),a}intersect(a){return this.min.max(a.min),this.max.min(a.max),this.isEmpty()&&this.makeEmpty(),this}union(a){return this.min.min(a.min),this.max.max(a.max),this}applyMatrix4(a){return this.isEmpty()||(ej[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(a),ej[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(a),ej[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(a),ej[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(a),ej[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(a),ej[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(a),ej[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(a),ej[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(a),this.setFromPoints(ej)),this}translate(a){return this.min.add(a),this.max.add(a),this}equals(a){return a.min.equals(this.min)&&a.max.equals(this.max)}}let ej=[new a,new a,new a,new a,new a,new a,new a,new a],ek=new a,el=new z,em=new a,en=new a,eo=new a,ep=new a,eq=new a,er=new a,es=new a,et=new a,eu=new a,ev=new a;function ew(c,g,h,i,a){for(let b=0,j=c.length-3;b<=j;b+=3){ev.fromArray(c,b);let k=a.x*Math.abs(ev.x)+a.y*Math.abs(ev.y)+a.z*Math.abs(ev.z),d=g.dot(ev),e=h.dot(ev),f=i.dot(ev);if(Math.max(-Math.max(d,e,f),Math.min(d,e,f))>k)return!1}return!0}let ex=new z,ey=new a,ez=new a,eA=new a;class C{constructor(b=new a,c=-1){this.center=b,this.radius=c}set(a,b){return this.center.copy(a),this.radius=b,this}setFromPoints(a,e){let b=this.center;void 0!==e?b.copy(e):ex.setFromPoints(a).getCenter(b);let c=0;for(let d=0,f=a.length;d<f;d++)c=Math.max(c,b.distanceToSquared(a[d]));return this.radius=Math.sqrt(c),this}copy(a){return this.center.copy(a.center),this.radius=a.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(a){return a.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(a){return a.distanceTo(this.center)-this.radius}intersectsSphere(a){let b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b}intersectsBox(a){return a.intersectsSphere(this)}intersectsPlane(a){return Math.abs(a.distanceToPoint(this.center))<=this.radius}clampPoint(b,a){let c=this.center.distanceToSquared(b);return a.copy(b),c>this.radius*this.radius&&(a.sub(this.center).normalize(),a.multiplyScalar(this.radius).add(this.center)),a}getBoundingBox(a){return this.isEmpty()?(a.makeEmpty(),a):(a.set(this.center,this.center),a.expandByScalar(this.radius),a)}applyMatrix4(a){return this.center.applyMatrix4(a),this.radius=this.radius*a.getMaxScaleOnAxis(),this}translate(a){return this.center.add(a),this}expandByPoint(d){eA.subVectors(d,this.center);let a=eA.lengthSq();if(a>this.radius*this.radius){let b=Math.sqrt(a),c=(b-this.radius)*.5;this.center.add(eA.multiplyScalar(c/b)),this.radius+=c}return this}union(a){return!0===this.center.equals(a.center)?ez.set(0,0,1).multiplyScalar(a.radius):ez.subVectors(a.center,this.center).normalize().multiplyScalar(a.radius),this.expandByPoint(ey.copy(a.center).add(ez)),this.expandByPoint(ey.copy(a.center).sub(ez)),this}equals(a){return a.center.equals(this.center)&&a.radius===this.radius}clone(){return new this.constructor().copy(this)}}let eB=new a,eC=new a,eD=new a,eE=new a,eF=new a,eG=new a,eH=new a;class G{constructor(b=new a,c=new a(0,0,-1)){this.origin=b,this.direction=c}set(a,b){return this.origin.copy(a),this.direction.copy(b),this}copy(a){return this.origin.copy(a.origin),this.direction.copy(a.direction),this}at(a,b){return b.copy(this.direction).multiplyScalar(a).add(this.origin)}lookAt(a){return this.direction.copy(a).sub(this.origin).normalize(),this}recast(a){return this.origin.copy(this.at(a,eB)),this}closestPointToPoint(c,a){a.subVectors(c,this.origin);let b=a.dot(this.direction);return b<0?a.copy(this.origin):a.copy(this.direction).multiplyScalar(b).add(this.origin)}distanceToPoint(a){return Math.sqrt(this.distanceSqToPoint(a))}distanceSqToPoint(a){let b=eB.subVectors(a,this.origin).dot(this.direction);return b<0?this.origin.distanceToSquared(a):(eB.copy(this.direction).multiplyScalar(b).add(this.origin),eB.distanceToSquared(a))}distanceSqToSegment(j,k,m,n){eC.copy(j).add(k).multiplyScalar(.5),eD.copy(k).sub(j).normalize(),eE.copy(this.origin).sub(eC);let c=.5*j.distanceTo(k),d=-this.direction.dot(eD),f=eE.dot(this.direction),e=-eE.dot(eD),h=eE.lengthSq(),l=Math.abs(1-d*d),b,a,g,i;if(l>0){if(b=d*e-f,a=d*f-e,i=c*l,b>=0){if(a>= -i){if(a<=i){let o=1/l;b*=o,a*=o,g=b*(b+d*a+2*f)+a*(d*b+a+2*e)+h}else g=-(b=Math.max(0,-(d*(a=c)+f)))*b+a*(a+2*e)+h}else g=-(b=Math.max(0,-(d*(a=-c)+f)))*b+a*(a+2*e)+h}else a<= -i?(a=(b=Math.max(0,-(-d*c+f)))>0?-c:Math.min(Math.max(-c,-e),c),g=-b*b+a*(a+2*e)+h):a<=i?(b=0,g=(a=Math.min(Math.max(-c,-e),c))*(a+2*e)+h):(a=(b=Math.max(0,-(d*c+f)))>0?c:Math.min(Math.max(-c,-e),c),g=-b*b+a*(a+2*e)+h)}else a=d>0?-c:c,b=Math.max(0,-(d*a+f)),g=-b*b+a*(a+2*e)+h;return m&&m.copy(this.direction).multiplyScalar(b).add(this.origin),n&&n.copy(eD).multiplyScalar(a).add(eC),g}intersectSphere(b,d){eB.subVectors(b.center,this.origin);let a=eB.dot(this.direction),e=eB.dot(eB)-a*a,f=b.radius*b.radius;if(e>f)return null;let g=Math.sqrt(f-e),c=a-g,h=a+g;return c<0&&h<0?null:c<0?this.at(h,d):this.at(c,d)}intersectsSphere(a){return this.distanceSqToPoint(a.center)<=a.radius*a.radius}distanceToPlane(a){let b=a.normal.dot(this.direction);if(0===b)return 0===a.distanceToPoint(this.origin)?0:null;let c=-(this.origin.dot(a.normal)+a.constant)/b;return c>=0?c:null}intersectPlane(b,c){let a=this.distanceToPlane(b);return null===a?null:this.at(a,c)}intersectsPlane(a){let b=a.distanceToPoint(this.origin);if(0===b)return!0;let c=a.normal.dot(this.direction);return c*b<0}intersectBox(c,l){let a,b,e,f,g,h,i=1/this.direction.x,j=1/this.direction.y,k=1/this.direction.z,d=this.origin;return(i>=0?(a=(c.min.x-d.x)*i,b=(c.max.x-d.x)*i):(a=(c.max.x-d.x)*i,b=(c.min.x-d.x)*i),j>=0?(e=(c.min.y-d.y)*j,f=(c.max.y-d.y)*j):(e=(c.max.y-d.y)*j,f=(c.min.y-d.y)*j),a>f||e>b)?null:((e>a||a!=a)&&(a=e),(f<b||b!=b)&&(b=f),k>=0?(g=(c.min.z-d.z)*k,h=(c.max.z-d.z)*k):(g=(c.max.z-d.z)*k,h=(c.min.z-d.z)*k),a>h||g>b)?null:((g>a||a!=a)&&(a=g),(h<b||b!=b)&&(b=h),b<0)?null:this.at(a>=0?a:b,l)}intersectsBox(a){return null!==this.intersectBox(a,eB)}intersectTriangle(c,g,h,i,j){eF.subVectors(g,c),eG.subVectors(h,c),eH.crossVectors(eF,eG);let a=this.direction.dot(eH),b;if(a>0){if(i)return null;b=1}else{if(!(a<0))return null;b=-1,a=-a}eE.subVectors(this.origin,c);let d=b*this.direction.dot(eG.crossVectors(eE,eG));if(d<0)return null;let e=b*this.direction.dot(eF.cross(eE));if(e<0||d+e>a)return null;let f=-b*eE.dot(eH);return f<0?null:this.at(f/a,j)}applyMatrix4(a){return this.origin.applyMatrix4(a),this.direction.transformDirection(a),this}equals(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class e{constructor(){e.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){let a=this.elements;return a[0]=b,a[4]=c,a[8]=d,a[12]=e,a[1]=f,a[5]=g,a[9]=h,a[13]=i,a[2]=j,a[6]=k,a[10]=l,a[14]=m,a[3]=n,a[7]=o,a[11]=p,a[15]=q,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new e().fromArray(this.elements)}copy(c){let a=this.elements,b=c.elements;return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],a[9]=b[9],a[10]=b[10],a[11]=b[11],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15],this}copyPosition(c){let a=this.elements,b=c.elements;return a[12]=b[12],a[13]=b[13],a[14]=b[14],this}setFromMatrix3(b){let a=b.elements;return this.set(a[0],a[3],a[6],0,a[1],a[4],a[7],0,a[2],a[5],a[8],0,0,0,0,1),this}extractBasis(a,b,c){return a.setFromMatrixColumn(this,0),b.setFromMatrixColumn(this,1),c.setFromMatrixColumn(this,2),this}makeBasis(a,b,c){return this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1),this}extractRotation(c){let a=this.elements,b=c.elements,d=1/eI.setFromMatrixColumn(c,0).length(),e=1/eI.setFromMatrixColumn(c,1).length(),f=1/eI.setFromMatrixColumn(c,2).length();return a[0]=b[0]*d,a[1]=b[1]*d,a[2]=b[2]*d,a[3]=0,a[4]=b[4]*e,a[5]=b[5]*e,a[6]=b[6]*e,a[7]=0,a[8]=b[8]*f,a[9]=b[9]*f,a[10]=b[10]*f,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,this}makeRotationFromEuler(h){let a=this.elements,i=h.x,j=h.y,k=h.z,e=Math.cos(i),b=Math.sin(i),f=Math.cos(j),c=Math.sin(j),g=Math.cos(k),d=Math.sin(k);if("XYZ"===h.order){let l=e*g,m=e*d,n=b*g,o=b*d;a[0]=f*g,a[4]=-f*d,a[8]=c,a[1]=m+n*c,a[5]=l-o*c,a[9]=-b*f,a[2]=o-l*c,a[6]=n+m*c,a[10]=e*f}else if("YXZ"===h.order){let p=f*g,q=f*d,r=c*g,s=c*d;a[0]=p+s*b,a[4]=r*b-q,a[8]=e*c,a[1]=e*d,a[5]=e*g,a[9]=-b,a[2]=q*b-r,a[6]=s+p*b,a[10]=e*f}else if("ZXY"===h.order){let t=f*g,u=f*d,v=c*g,w=c*d;a[0]=t-w*b,a[4]=-e*d,a[8]=v+u*b,a[1]=u+v*b,a[5]=e*g,a[9]=w-t*b,a[2]=-e*c,a[6]=b,a[10]=e*f}else if("ZYX"===h.order){let x=e*g,y=e*d,z=b*g,A=b*d;a[0]=f*g,a[4]=z*c-y,a[8]=x*c+A,a[1]=f*d,a[5]=A*c+x,a[9]=y*c-z,a[2]=-c,a[6]=b*f,a[10]=e*f}else if("YZX"===h.order){let B=e*f,C=e*c,D=b*f,E=b*c;a[0]=f*g,a[4]=E-B*d,a[8]=D*d+C,a[1]=d,a[5]=e*g,a[9]=-b*g,a[2]=-c*g,a[6]=C*d+D,a[10]=B-E*d}else if("XZY"===h.order){let F=e*f,G=e*c,H=b*f,I=b*c;a[0]=f*g,a[4]=-d,a[8]=c*g,a[1]=F*d+I,a[5]=e*g,a[9]=G*d-H,a[2]=H*d-G,a[6]=b*g,a[10]=I*d+F}return a[3]=0,a[7]=0,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,this}makeRotationFromQuaternion(a){return this.compose(eK,a,eL)}lookAt(c,d,b){let a=this.elements;return eO.subVectors(c,d),0===eO.lengthSq()&&(eO.z=1),eO.normalize(),eM.crossVectors(b,eO),0===eM.lengthSq()&&(1===Math.abs(b.z)?eO.x+=1e-4:eO.z+=1e-4,eO.normalize(),eM.crossVectors(b,eO)),eM.normalize(),eN.crossVectors(eO,eM),a[0]=eM.x,a[4]=eN.x,a[8]=eO.x,a[1]=eM.y,a[5]=eN.y,a[9]=eO.y,a[2]=eM.z,a[6]=eN.z,a[10]=eO.z,this}multiply(a){return this.multiplyMatrices(this,a)}premultiply(a){return this.multiplyMatrices(a,this)}multiplyMatrices(J,K){let a=J.elements,b=K.elements,c=this.elements,d=a[0],e=a[4],f=a[8],g=a[12],h=a[1],i=a[5],j=a[9],k=a[13],l=a[2],m=a[6],n=a[10],o=a[14],p=a[3],q=a[7],r=a[11],s=a[15],t=b[0],u=b[4],v=b[8],w=b[12],x=b[1],y=b[5],z=b[9],A=b[13],B=b[2],C=b[6],D=b[10],E=b[14],F=b[3],G=b[7],H=b[11],I=b[15];return c[0]=d*t+e*x+f*B+g*F,c[4]=d*u+e*y+f*C+g*G,c[8]=d*v+e*z+f*D+g*H,c[12]=d*w+e*A+f*E+g*I,c[1]=h*t+i*x+j*B+k*F,c[5]=h*u+i*y+j*C+k*G,c[9]=h*v+i*z+j*D+k*H,c[13]=h*w+i*A+j*E+k*I,c[2]=l*t+m*x+n*B+o*F,c[6]=l*u+m*y+n*C+o*G,c[10]=l*v+m*z+n*D+o*H,c[14]=l*w+m*A+n*E+o*I,c[3]=p*t+q*x+r*B+s*F,c[7]=p*u+q*y+r*C+s*G,c[11]=p*v+q*z+r*D+s*H,c[15]=p*w+q*A+r*E+s*I,this}multiplyScalar(a){let b=this.elements;return b[0]*=a,b[4]*=a,b[8]*=a,b[12]*=a,b[1]*=a,b[5]*=a,b[9]*=a,b[13]*=a,b[2]*=a,b[6]*=a,b[10]*=a,b[14]*=a,b[3]*=a,b[7]*=a,b[11]*=a,b[15]*=a,this}determinant(){let a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],j=a[2],k=a[6],l=a[10],m=a[14],n=a[3],o=a[7],p=a[11],q=a[15];return n*(+e*h*k-d*i*k-e*g*l+c*i*l+d*g*m-c*h*m)+o*(+b*h*m-b*i*l+e*f*l-d*f*m+d*i*j-e*h*j)+p*(+b*i*k-b*g*m-e*f*k+c*f*m+e*g*j-c*i*j)+q*(-d*g*j-b*h*k+b*g*l+d*f*k-c*f*l+c*h*j)}transpose(){let a=this.elements,b;return b=a[1],a[1]=a[4],a[4]=b,b=a[2],a[2]=a[8],a[8]=b,b=a[6],a[6]=a[9],a[9]=b,b=a[3],a[3]=a[12],a[12]=b,b=a[7],a[7]=a[13],a[13]=b,b=a[11],a[11]=a[14],a[14]=b,this}setPosition(b,c,d){let a=this.elements;return b.isVector3?(a[12]=b.x,a[13]=b.y,a[14]=b.z):(a[12]=b,a[13]=c,a[14]=d),this}invert(){let a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8],k=a[9],l=a[10],m=a[11],n=a[12],o=a[13],p=a[14],q=a[15],s=k*p*i-o*l*i+o*h*m-g*p*m-k*h*q+g*l*q,t=n*l*i-j*p*i-n*h*m+f*p*m+j*h*q-f*l*q,u=j*o*i-n*k*i+n*g*m-f*o*m-j*g*q+f*k*q,v=n*k*h-j*o*h-n*g*l+f*o*l+j*g*p-f*k*p,w=b*s+c*t+d*u+e*v;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let r=1/w;return a[0]=s*r,a[1]=(o*l*e-k*p*e-o*d*m+c*p*m+k*d*q-c*l*q)*r,a[2]=(g*p*e-o*h*e+o*d*i-c*p*i-g*d*q+c*h*q)*r,a[3]=(k*h*e-g*l*e-k*d*i+c*l*i+g*d*m-c*h*m)*r,a[4]=t*r,a[5]=(j*p*e-n*l*e+n*d*m-b*p*m-j*d*q+b*l*q)*r,a[6]=(n*h*e-f*p*e-n*d*i+b*p*i+f*d*q-b*h*q)*r,a[7]=(f*l*e-j*h*e+j*d*i-b*l*i-f*d*m+b*h*m)*r,a[8]=u*r,a[9]=(n*k*e-j*o*e-n*c*m+b*o*m+j*c*q-b*k*q)*r,a[10]=(f*o*e-n*g*e+n*c*i-b*o*i-f*c*q+b*g*q)*r,a[11]=(j*g*e-f*k*e-j*c*i+b*k*i+f*c*m-b*g*m)*r,a[12]=v*r,a[13]=(j*o*d-n*k*d+n*c*l-b*o*l-j*c*p+b*k*p)*r,a[14]=(n*g*d-f*o*d-n*c*h+b*o*h+f*c*p-b*g*p)*r,a[15]=(f*k*d-j*g*d+j*c*h-b*k*h-f*c*l+b*g*l)*r,this}scale(e){let a=this.elements,b=e.x,c=e.y,d=e.z;return a[0]*=b,a[4]*=c,a[8]*=d,a[1]*=b,a[5]*=c,a[9]*=d,a[2]*=b,a[6]*=c,a[10]*=d,a[3]*=b,a[7]*=c,a[11]*=d,this}getMaxScaleOnAxis(){let a=this.elements,b=a[0]*a[0]+a[1]*a[1]+a[2]*a[2],c=a[4]*a[4]+a[5]*a[5]+a[6]*a[6],d=a[8]*a[8]+a[9]*a[9]+a[10]*a[10];return Math.sqrt(Math.max(b,c,d))}makeTranslation(a,b,c){return this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1),this}makeRotationX(a){let b=Math.cos(a),c=Math.sin(a);return this.set(1,0,0,0,0,b,-c,0,0,c,b,0,0,0,0,1),this}makeRotationY(a){let b=Math.cos(a),c=Math.sin(a);return this.set(b,0,c,0,0,1,0,0,-c,0,b,0,0,0,0,1),this}makeRotationZ(a){let b=Math.cos(a),c=Math.sin(a);return this.set(b,-c,0,0,c,b,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(g,j){let e=Math.cos(j),b=Math.sin(j),h=1-e,f=g.x,c=g.y,a=g.z,d=h*f,i=h*c;return this.set(d*f+e,d*c-b*a,d*a+b*c,0,d*c+b*a,i*c+e,i*a-b*f,0,d*a-b*c,i*a+b*f,h*a*a+e,0,0,0,0,1),this}makeScale(a,b,c){return this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1),this}makeShear(a,b,c,d,e,f){return this.set(1,c,e,0,a,1,f,0,b,d,1,0,0,0,0,1),this}compose(f,c,g){let a=this.elements,b=c._x,d=c._y,h=c._z,i=c._w,n=b+b,j=d+d,e=h+h,o=b*n,p=b*j,q=b*e,r=d*j,s=d*e,t=h*e,u=i*n,v=i*j,w=i*e,k=g.x,l=g.y,m=g.z;return a[0]=(1-(r+t))*k,a[1]=(p+w)*k,a[2]=(q-v)*k,a[3]=0,a[4]=(p-w)*l,a[5]=(1-(o+t))*l,a[6]=(s+u)*l,a[7]=0,a[8]=(q+v)*m,a[9]=(s-u)*m,a[10]=(1-(o+r))*m,a[11]=0,a[12]=f.x,a[13]=f.y,a[14]=f.z,a[15]=1,this}decompose(c,j,d){let a=this.elements,b=eI.set(a[0],a[1],a[2]).length(),h=eI.set(a[4],a[5],a[6]).length(),i=eI.set(a[8],a[9],a[10]).length(),k=this.determinant();k<0&&(b=-b),c.x=a[12],c.y=a[13],c.z=a[14],eJ.copy(this);let e=1/b,f=1/h,g=1/i;return eJ.elements[0]*=e,eJ.elements[1]*=e,eJ.elements[2]*=e,eJ.elements[4]*=f,eJ.elements[5]*=f,eJ.elements[6]*=f,eJ.elements[8]*=g,eJ.elements[9]*=g,eJ.elements[10]*=g,j.setFromRotationMatrix(eJ),d.x=b,d.y=h,d.z=i,this}makePerspective(d,e,f,g,b,c){let a=this.elements;return a[0]=2*b/(e-d),a[4]=0,a[8]=(e+d)/(e-d),a[12]=0,a[1]=0,a[5]=2*b/(f-g),a[9]=(f+g)/(f-g),a[13]=0,a[2]=0,a[6]=0,a[10]=-(c+b)/(c-b),a[14]=-2*c*b/(c-b),a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(b,c,d,e,f,g){let a=this.elements,h=1/(c-b),i=1/(d-e),j=1/(g-f);return a[0]=2*h,a[4]=0,a[8]=0,a[12]=-((c+b)*h),a[1]=0,a[5]=2*i,a[9]=0,a[13]=-((d+e)*i),a[2]=0,a[6]=0,a[10]=-2*j,a[14]=-((g+f)*j),a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(b){let c=this.elements,d=b.elements;for(let a=0;a<16;a++)if(c[a]!==d[a])return!1;return!0}fromArray(b,c=0){for(let a=0;a<16;a++)this.elements[a]=b[a+c];return this}toArray(a=[],b=0){let c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a[b+9]=c[9],a[b+10]=c[10],a[b+11]=c[11],a[b+12]=c[12],a[b+13]=c[13],a[b+14]=c[14],a[b+15]=c[15],a}}let eI=new a,eJ=new e,eK=new a(0,0,0),eL=new a(1,1,1),eM=new a,eN=new a,eO=new a,eP=new e,eQ=new v;class Z{constructor(a=0,b=0,c=0,d=Z.DefaultOrder){this.isEuler=!0,this._x=a,this._y=b,this._z=c,this._order=d}get x(){return this._x}set x(a){this._x=a,this._onChangeCallback()}get y(){return this._y}set y(a){this._y=a,this._onChangeCallback()}get z(){return this._z}set z(a){this._z=a,this._onChangeCallback()}get order(){return this._order}set order(a){this._order=a,this._onChangeCallback()}set(a,b,c,d=this._order){return this._x=a,this._y=b,this._z=c,this._order=d,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(a){return this._x=a._x,this._y=a._y,this._z=a._z,this._order=a._order,this._onChangeCallback(),this}setFromRotationMatrix(l,k=this._order,m=!0){let a=l.elements,b=a[0],e=a[4],f=a[8],g=a[1],c=a[5],h=a[9],i=a[2],j=a[6],d=a[10];switch(k){case"XYZ":this._y=Math.asin(aI(f,-1,1)),.9999999>Math.abs(f)?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-e,b)):(this._x=Math.atan2(j,c),this._z=0);break;case"YXZ":this._x=Math.asin(-aI(h,-1,1)),.9999999>Math.abs(h)?(this._y=Math.atan2(f,d),this._z=Math.atan2(g,c)):(this._y=Math.atan2(-i,b),this._z=0);break;case"ZXY":this._x=Math.asin(aI(j,-1,1)),.9999999>Math.abs(j)?(this._y=Math.atan2(-i,d),this._z=Math.atan2(-e,c)):(this._y=0,this._z=Math.atan2(g,b));break;case"ZYX":this._y=Math.asin(-aI(i,-1,1)),.9999999>Math.abs(i)?(this._x=Math.atan2(j,d),this._z=Math.atan2(g,b)):(this._x=0,this._z=Math.atan2(-e,c));break;case"YZX":this._z=Math.asin(aI(g,-1,1)),.9999999>Math.abs(g)?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-i,b)):(this._x=0,this._y=Math.atan2(f,d));break;case"XZY":this._z=Math.asin(-aI(e,-1,1)),.9999999>Math.abs(e)?(this._x=Math.atan2(j,c),this._y=Math.atan2(f,b)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+k)}return this._order=k,!0===m&&this._onChangeCallback(),this}setFromQuaternion(a,b,c){return eP.makeRotationFromQuaternion(a),this.setFromRotationMatrix(eP,b,c)}setFromVector3(a,b=this._order){return this.set(a.x,a.y,a.z,b)}reorder(a){return eQ.setFromEuler(this),this.setFromQuaternion(eQ,a)}equals(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order}fromArray(a){return this._x=a[0],this._y=a[1],this._z=a[2],void 0!==a[3]&&(this._order=a[3]),this._onChangeCallback(),this}toArray(a=[],b=0){return a[b]=this._x,a[b+1]=this._y,a[b+2]=this._z,a[b+3]=this._order,a}_onChange(a){return this._onChangeCallback=a,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}Z.DefaultOrder="XYZ",Z.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class eR{constructor(){this.mask=1}set(a){this.mask=(1<<a|0)>>>0}enable(a){this.mask|=1<<a|0}enableAll(){this.mask=-1}toggle(a){this.mask^=1<<a|0}disable(a){this.mask&=~(1<<a|0)}disableAll(){this.mask=0}test(a){return(this.mask&a.mask)!=0}isEnabled(a){return(this.mask&(1<<a|0))!=0}}let eS=0,eT=new a,eU=new v,eV=new e,eW=new a,eX=new a,eY=new a,eZ=new v,e$=new a(1,0,0),e_=new a(0,1,0),e0=new a(0,0,1),e1={type:"added"},e2={type:"removed"};class f extends q{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:eS++}),this.uuid=aH(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=f.DefaultUp.clone();let d=new a,b=new Z,c=new v,g=new a(1,1,1);b._onChange(function(){c.setFromEuler(b,!1)}),c._onChange(function(){b.setFromQuaternion(c,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:d},rotation:{configurable:!0,enumerable:!0,value:b},quaternion:{configurable:!0,enumerable:!0,value:c},scale:{configurable:!0,enumerable:!0,value:g},modelViewMatrix:{value:new e},normalMatrix:{value:new u}}),this.matrix=new e,this.matrixWorld=new e,this.matrixAutoUpdate=f.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new eR,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(a){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(a),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(a){return this.quaternion.premultiply(a),this}setRotationFromAxisAngle(a,b){this.quaternion.setFromAxisAngle(a,b)}setRotationFromEuler(a){this.quaternion.setFromEuler(a,!0)}setRotationFromMatrix(a){this.quaternion.setFromRotationMatrix(a)}setRotationFromQuaternion(a){this.quaternion.copy(a)}rotateOnAxis(a,b){return eU.setFromAxisAngle(a,b),this.quaternion.multiply(eU),this}rotateOnWorldAxis(a,b){return eU.setFromAxisAngle(a,b),this.quaternion.premultiply(eU),this}rotateX(a){return this.rotateOnAxis(e$,a)}rotateY(a){return this.rotateOnAxis(e_,a)}rotateZ(a){return this.rotateOnAxis(e0,a)}translateOnAxis(a,b){return eT.copy(a).applyQuaternion(this.quaternion),this.position.add(eT.multiplyScalar(b)),this}translateX(a){return this.translateOnAxis(e$,a)}translateY(a){return this.translateOnAxis(e_,a)}translateZ(a){return this.translateOnAxis(e0,a)}localToWorld(a){return a.applyMatrix4(this.matrixWorld)}worldToLocal(a){return a.applyMatrix4(eV.copy(this.matrixWorld).invert())}lookAt(a,c,d){a.isVector3?eW.copy(a):eW.set(a,c,d);let b=this.parent;this.updateWorldMatrix(!0,!1),eX.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?eV.lookAt(eX,eW,this.up):eV.lookAt(eW,eX,this.up),this.quaternion.setFromRotationMatrix(eV),b&&(eV.extractRotation(b.matrixWorld),eU.setFromRotationMatrix(eV),this.quaternion.premultiply(eU.invert()))}add(a){if(arguments.length>1){for(let b=0;b<arguments.length;b++)this.add(arguments[b]);return this}return a===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",a),this):(a&&a.isObject3D?(null!==a.parent&&a.parent.remove(a),a.parent=this,this.children.push(a),a.dispatchEvent(e1)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",a),this)}remove(a){if(arguments.length>1){for(let b=0;b<arguments.length;b++)this.remove(arguments[b]);return this}let c=this.children.indexOf(a);return -1!==c&&(a.parent=null,this.children.splice(c,1),a.dispatchEvent(e2)),this}removeFromParent(){let a=this.parent;return null!==a&&a.remove(this),this}clear(){for(let a=0;a<this.children.length;a++){let b=this.children[a];b.parent=null,b.dispatchEvent(e2)}return this.children.length=0,this}attach(a){return this.updateWorldMatrix(!0,!1),eV.copy(this.matrixWorld).invert(),null!==a.parent&&(a.parent.updateWorldMatrix(!0,!1),eV.multiply(a.parent.matrixWorld)),a.applyMatrix4(eV),this.add(a),a.updateWorldMatrix(!1,!0),this}getObjectById(a){return this.getObjectByProperty("id",a)}getObjectByName(a){return this.getObjectByProperty("name",a)}getObjectByProperty(b,c){if(this[b]===c)return this;for(let a=0,e=this.children.length;a<e;a++){let f=this.children[a],d=f.getObjectByProperty(b,c);if(void 0!==d)return d}}getWorldPosition(a){return this.updateWorldMatrix(!0,!1),a.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(a){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(eX,a,eY),a}getWorldScale(a){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(eX,eZ,a),a}getWorldDirection(b){this.updateWorldMatrix(!0,!1);let a=this.matrixWorld.elements;return b.set(a[8],a[9],a[10]).normalize()}raycast(){}traverse(b){b(this);let c=this.children;for(let a=0,d=c.length;a<d;a++)c[a].traverse(b)}traverseVisible(b){if(!1===this.visible)return;b(this);let c=this.children;for(let a=0,d=c.length;a<d;a++)c[a].traverseVisible(b)}traverseAncestors(b){let a=this.parent;null!==a&&(b(a),a.traverseAncestors(b))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(a){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||a)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);let c=this.children;for(let b=0,d=c.length;b<d;b++)c[b].updateMatrixWorld(a)}updateWorldMatrix(d,e){let b=this.parent;if(!0===d&&null!==b&&b.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){let c=this.children;for(let a=0,f=c.length;a<f;a++)c[a].updateWorldMatrix(!1,!0)}}toJSON(b){let k=void 0===b||"string"==typeof b,c={};k&&(b={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},c.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});let a={};function d(c,a){return void 0===c[a.uuid]&&(c[a.uuid]=a.toJSON(b)),a.uuid}if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),!0===this.castShadow&&(a.castShadow=!0),!0===this.receiveShadow&&(a.receiveShadow=!0),!1===this.visible&&(a.visible=!1),!1===this.frustumCulled&&(a.frustumCulled=!1),0!==this.renderOrder&&(a.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),a.layers=this.layers.mask,a.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(a.matrixAutoUpdate=!1),this.isInstancedMesh&&(a.type="InstancedMesh",a.count=this.count,a.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(a.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?a.background=this.background.toJSON():this.background.isTexture&&(a.background=this.background.toJSON(b).uuid)),this.environment&&this.environment.isTexture&& !0!==this.environment.isRenderTargetTexture&&(a.environment=this.environment.toJSON(b).uuid);else if(this.isMesh||this.isLine||this.isPoints){a.geometry=d(b.geometries,this.geometry);let f=this.geometry.parameters;if(void 0!==f&& void 0!==f.shapes){let e=f.shapes;if(Array.isArray(e))for(let g=0,u=e.length;g<u;g++){let v=e[g];d(b.shapes,v)}else d(b.shapes,e)}}if(this.isSkinnedMesh&&(a.bindMode=this.bindMode,a.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(d(b.skeletons,this.skeleton),a.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let l=[];for(let h=0,w=this.material.length;h<w;h++)l.push(d(b.materials,this.material[h]));a.material=l}else a.material=d(b.materials,this.material)}if(this.children.length>0){a.children=[];for(let i=0;i<this.children.length;i++)a.children.push(this.children[i].toJSON(b).object)}if(this.animations.length>0){a.animations=[];for(let j=0;j<this.animations.length;j++){let x=this.animations[j];a.animations.push(d(b.animations,x))}}if(k){let m=y(b.geometries),n=y(b.materials),o=y(b.textures),p=y(b.images),q=y(b.shapes),r=y(b.skeletons),s=y(b.animations),t=y(b.nodes);m.length>0&&(c.geometries=m),n.length>0&&(c.materials=n),o.length>0&&(c.textures=o),p.length>0&&(c.images=p),q.length>0&&(c.shapes=q),r.length>0&&(c.skeletons=r),s.length>0&&(c.animations=s),t.length>0&&(c.nodes=t)}return c.object=a,c;function y(a){let b=[];for(let d in a){let c=a[d];delete c.metadata,b.push(c)}return b}}clone(a){return new this.constructor().copy(this,a)}copy(a,c=!0){if(this.name=a.name,this.up.copy(a.up),this.position.copy(a.position),this.rotation.order=a.rotation.order,this.quaternion.copy(a.quaternion),this.scale.copy(a.scale),this.matrix.copy(a.matrix),this.matrixWorld.copy(a.matrixWorld),this.matrixAutoUpdate=a.matrixAutoUpdate,this.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate,this.layers.mask=a.layers.mask,this.visible=a.visible,this.castShadow=a.castShadow,this.receiveShadow=a.receiveShadow,this.frustumCulled=a.frustumCulled,this.renderOrder=a.renderOrder,this.userData=JSON.parse(JSON.stringify(a.userData)),!0===c)for(let b=0;b<a.children.length;b++){let d=a.children[b];this.add(d.clone())}return this}}f.DefaultUp=new a(0,1,0),f.DefaultMatrixAutoUpdate=!0;let e3=new a,e4=new a,e5=new a,e6=new a,e7=new a,e8=new a,e9=new a,fa=new a,fb=new a,fc=new a;class aT{constructor(b=new a,c=new a,d=new a){this.a=b,this.b=c,this.c=d}static getNormal(d,b,e,a){a.subVectors(e,b),e3.subVectors(d,b),a.cross(e3);let c=a.lengthSq();return c>0?a.multiplyScalar(1/Math.sqrt(c)):a.set(0,0,0)}static getBarycoord(l,b,m,n,c){e3.subVectors(n,b),e4.subVectors(m,b),e5.subVectors(l,b);let d=e3.dot(e3),a=e3.dot(e4),e=e3.dot(e5),f=e4.dot(e4),g=e4.dot(e5),h=d*f-a*a;if(0===h)return c.set(-2,-1,-1);let i=1/h,j=(f*e-a*g)*i,k=(d*g-a*e)*i;return c.set(1-j-k,k,j)}static containsPoint(a,b,c,d){return this.getBarycoord(a,b,c,d,e6),e6.x>=0&&e6.y>=0&&e6.x+e6.y<=1}static getUV(b,c,d,e,f,g,h,a){return this.getBarycoord(b,c,d,e,e6),a.set(0,0),a.addScaledVector(f,e6.x),a.addScaledVector(g,e6.y),a.addScaledVector(h,e6.z),a}static isFrontFacing(b,a,c,d){return e3.subVectors(c,a),e4.subVectors(b,a),0>e3.cross(e4).dot(d)}set(a,b,c){return this.a.copy(a),this.b.copy(b),this.c.copy(c),this}setFromPointsAndIndices(a,b,c,d){return this.a.copy(a[b]),this.b.copy(a[c]),this.c.copy(a[d]),this}setFromAttributeAndIndices(a,b,c,d){return this.a.fromBufferAttribute(a,b),this.b.fromBufferAttribute(a,c),this.c.fromBufferAttribute(a,d),this}clone(){return new this.constructor().copy(this)}copy(a){return this.a.copy(a.a),this.b.copy(a.b),this.c.copy(a.c),this}getArea(){return e3.subVectors(this.c,this.b),e4.subVectors(this.a,this.b),.5*e3.cross(e4).length()}getMidpoint(a){return a.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(a){return aT.getNormal(this.a,this.b,this.c,a)}getPlane(a){return a.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(a,b){return aT.getBarycoord(a,this.a,this.b,this.c,b)}getUV(a,b,c,d,e){return aT.getUV(a,this.a,this.b,this.c,b,c,d,e)}containsPoint(a){return aT.containsPoint(a,this.a,this.b,this.c)}isFrontFacing(a){return aT.isFrontFacing(this.a,this.b,this.c,a)}intersectsBox(a){return a.intersectsTriangle(this)}closestPointToPoint(m,c){let d=this.a,i=this.b,k=this.c,l,e;e7.subVectors(i,d),e8.subVectors(k,d),fa.subVectors(m,d);let f=e7.dot(fa),g=e8.dot(fa);if(f<=0&&g<=0)return c.copy(d);fb.subVectors(m,i);let a=e7.dot(fb),h=e8.dot(fb);if(a>=0&&h<=a)return c.copy(i);let n=f*h-a*g;if(n<=0&&f>=0&&a<=0)return l=f/(f-a),c.copy(d).addScaledVector(e7,l);fc.subVectors(m,k);let j=e7.dot(fc),b=e8.dot(fc);if(b>=0&&j<=b)return c.copy(k);let o=j*g-f*b;if(o<=0&&g>=0&&b<=0)return e=g/(g-b),c.copy(d).addScaledVector(e8,e);let p=a*b-j*h;if(p<=0&&h-a>=0&&j-b>=0)return e9.subVectors(k,i),e=(h-a)/(h-a+(j-b)),c.copy(i).addScaledVector(e9,e);let q=1/(p+o+n);return l=o*q,e=n*q,c.copy(d).addScaledVector(e7,l).addScaledVector(e8,e)}equals(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)}}let fd=0;class k extends q{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:fd++}),this.uuid=aH(),this.name="",this.type="Material",this.blending=bM,this.side=bG,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=b$,this.blendDst=b_,this.blendEquation=bR,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=b8,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=dK,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=dw,this.stencilZFail=dw,this.stencilZPass=dw,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(a){this._alphaTest>0!=a>0&&this.version++,this._alphaTest=a}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(d){if(void 0!==d)for(let c in d){let a=d[c];if(void 0===a){console.warn("THREE.Material: '"+c+"' parameter is undefined.");continue}if("shading"===c){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=a===bJ;continue}let b=this[c];if(void 0===b){console.warn("THREE."+this.type+": '"+c+"' is not a property of this material.");continue}b&&b.isColor?b.set(a):b&&b.isVector3&&a&&a.isVector3?b.copy(a):this[c]=a}}toJSON(b){let c=void 0===b||"string"==typeof b;c&&(b={textures:{},images:{}});let a={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function d(a){let b=[];for(let d in a){let c=a[d];delete c.metadata,b.push(c)}return b}if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),this.color&&this.color.isColor&&(a.color=this.color.getHex()),void 0!==this.roughness&&(a.roughness=this.roughness),void 0!==this.metalness&&(a.metalness=this.metalness),void 0!==this.sheen&&(a.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(a.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(a.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(a.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(a.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(a.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(a.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(a.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(a.shininess=this.shininess),void 0!==this.clearcoat&&(a.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(a.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(a.clearcoatMap=this.clearcoatMap.toJSON(b).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(a.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(b).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(a.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(b).uuid,a.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(a.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(a.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(a.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(a.iridescenceMap=this.iridescenceMap.toJSON(b).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(a.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(b).uuid),this.map&&this.map.isTexture&&(a.map=this.map.toJSON(b).uuid),this.matcap&&this.matcap.isTexture&&(a.matcap=this.matcap.toJSON(b).uuid),this.alphaMap&&this.alphaMap.isTexture&&(a.alphaMap=this.alphaMap.toJSON(b).uuid),this.lightMap&&this.lightMap.isTexture&&(a.lightMap=this.lightMap.toJSON(b).uuid,a.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(a.aoMap=this.aoMap.toJSON(b).uuid,a.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(a.bumpMap=this.bumpMap.toJSON(b).uuid,a.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(a.normalMap=this.normalMap.toJSON(b).uuid,a.normalMapType=this.normalMapType,a.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(a.displacementMap=this.displacementMap.toJSON(b).uuid,a.displacementScale=this.displacementScale,a.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(a.roughnessMap=this.roughnessMap.toJSON(b).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(a.metalnessMap=this.metalnessMap.toJSON(b).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(a.emissiveMap=this.emissiveMap.toJSON(b).uuid),this.specularMap&&this.specularMap.isTexture&&(a.specularMap=this.specularMap.toJSON(b).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(a.specularIntensityMap=this.specularIntensityMap.toJSON(b).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(a.specularColorMap=this.specularColorMap.toJSON(b).uuid),this.envMap&&this.envMap.isTexture&&(a.envMap=this.envMap.toJSON(b).uuid,void 0!==this.combine&&(a.combine=this.combine)),void 0!==this.envMapIntensity&&(a.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(a.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(a.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(a.gradientMap=this.gradientMap.toJSON(b).uuid),void 0!==this.transmission&&(a.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(a.transmissionMap=this.transmissionMap.toJSON(b).uuid),void 0!==this.thickness&&(a.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(a.thicknessMap=this.thicknessMap.toJSON(b).uuid),void 0!==this.attenuationDistance&&(a.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(a.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(a.size=this.size),null!==this.shadowSide&&(a.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(a.sizeAttenuation=this.sizeAttenuation),this.blending!==bM&&(a.blending=this.blending),this.side!==bG&&(a.side=this.side),this.vertexColors&&(a.vertexColors=!0),this.opacity<1&&(a.opacity=this.opacity),!0===this.transparent&&(a.transparent=this.transparent),a.depthFunc=this.depthFunc,a.depthTest=this.depthTest,a.depthWrite=this.depthWrite,a.colorWrite=this.colorWrite,a.stencilWrite=this.stencilWrite,a.stencilWriteMask=this.stencilWriteMask,a.stencilFunc=this.stencilFunc,a.stencilRef=this.stencilRef,a.stencilFuncMask=this.stencilFuncMask,a.stencilFail=this.stencilFail,a.stencilZFail=this.stencilZFail,a.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(a.rotation=this.rotation),!0===this.polygonOffset&&(a.polygonOffset=!0),0!==this.polygonOffsetFactor&&(a.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(a.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(a.linewidth=this.linewidth),void 0!==this.dashSize&&(a.dashSize=this.dashSize),void 0!==this.gapSize&&(a.gapSize=this.gapSize),void 0!==this.scale&&(a.scale=this.scale),!0===this.dithering&&(a.dithering=!0),this.alphaTest>0&&(a.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(a.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(a.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(a.wireframe=this.wireframe),this.wireframeLinewidth>1&&(a.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(a.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(a.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(a.flatShading=this.flatShading),!1===this.visible&&(a.visible=!1),!1===this.toneMapped&&(a.toneMapped=!1),!1===this.fog&&(a.fog=!1),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),c){let e=d(b.textures),f=d(b.images);e.length>0&&(a.textures=e),f.length>0&&(a.images=f)}return a}clone(){return new this.constructor().copy(this)}copy(a){this.name=a.name,this.blending=a.blending,this.side=a.side,this.vertexColors=a.vertexColors,this.opacity=a.opacity,this.transparent=a.transparent,this.blendSrc=a.blendSrc,this.blendDst=a.blendDst,this.blendEquation=a.blendEquation,this.blendSrcAlpha=a.blendSrcAlpha,this.blendDstAlpha=a.blendDstAlpha,this.blendEquationAlpha=a.blendEquationAlpha,this.depthFunc=a.depthFunc,this.depthTest=a.depthTest,this.depthWrite=a.depthWrite,this.stencilWriteMask=a.stencilWriteMask,this.stencilFunc=a.stencilFunc,this.stencilRef=a.stencilRef,this.stencilFuncMask=a.stencilFuncMask,this.stencilFail=a.stencilFail,this.stencilZFail=a.stencilZFail,this.stencilZPass=a.stencilZPass,this.stencilWrite=a.stencilWrite;let c=a.clippingPlanes,d=null;if(null!==c){let e=c.length;d=Array(e);for(let b=0;b!==e;++b)d[b]=c[b].clone()}return this.clippingPlanes=d,this.clipIntersection=a.clipIntersection,this.clipShadows=a.clipShadows,this.shadowSide=a.shadowSide,this.colorWrite=a.colorWrite,this.precision=a.precision,this.polygonOffset=a.polygonOffset,this.polygonOffsetFactor=a.polygonOffsetFactor,this.polygonOffsetUnits=a.polygonOffsetUnits,this.dithering=a.dithering,this.alphaTest=a.alphaTest,this.alphaToCoverage=a.alphaToCoverage,this.premultipliedAlpha=a.premultipliedAlpha,this.visible=a.visible,this.toneMapped=a.toneMapped,this.userData=JSON.parse(JSON.stringify(a.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(a){!0===a&&this.version++}}class fe extends k{constructor(a){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new h(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=cd,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.fog=a.fog,this}}let ff=new a,fg=new j;class n{constructor(a,b,c){if(Array.isArray(a))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=a,this.itemSize=b,this.count=void 0!==a?a.length/b:0,this.normalized=!0===c,this.usage=dL,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(a){!0===a&&this.version++}setUsage(a){return this.usage=a,this}copy(a){return this.name=a.name,this.array=new a.array.constructor(a.array),this.itemSize=a.itemSize,this.count=a.count,this.normalized=a.normalized,this.usage=a.usage,this}copyAt(b,c,d){b*=this.itemSize,d*=c.itemSize;for(let a=0,e=this.itemSize;a<e;a++)this.array[b+a]=c.array[d+a];return this}copyArray(a){return this.array.set(a),this}copyColorsArray(e){let c=this.array,d=0;for(let b=0,f=e.length;b<f;b++){let a=e[b];void 0===a&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",b),a=new h),c[d++]=a.r,c[d++]=a.g,c[d++]=a.b}return this}copyVector2sArray(c){let d=this.array,e=0;for(let a=0,f=c.length;a<f;a++){let b=c[a];void 0===b&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",a),b=new j),d[e++]=b.x,d[e++]=b.y}return this}copyVector3sArray(f){let d=this.array,e=0;for(let c=0,g=f.length;c<g;c++){let b=f[c];void 0===b&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",c),b=new a),d[e++]=b.x,d[e++]=b.y,d[e++]=b.z}return this}copyVector4sArray(e){let b=this.array,c=0;for(let d=0,f=e.length;d<f;d++){let a=e[d];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",d),a=new W),b[c++]=a.x,b[c++]=a.y,b[c++]=a.z,b[c++]=a.w}return this}applyMatrix3(c){if(2===this.itemSize)for(let a=0,d=this.count;a<d;a++)fg.fromBufferAttribute(this,a),fg.applyMatrix3(c),this.setXY(a,fg.x,fg.y);else if(3===this.itemSize)for(let b=0,e=this.count;b<e;b++)ff.fromBufferAttribute(this,b),ff.applyMatrix3(c),this.setXYZ(b,ff.x,ff.y,ff.z);return this}applyMatrix4(b){for(let a=0,c=this.count;a<c;a++)ff.fromBufferAttribute(this,a),ff.applyMatrix4(b),this.setXYZ(a,ff.x,ff.y,ff.z);return this}applyNormalMatrix(b){for(let a=0,c=this.count;a<c;a++)ff.fromBufferAttribute(this,a),ff.applyNormalMatrix(b),this.setXYZ(a,ff.x,ff.y,ff.z);return this}transformDirection(b){for(let a=0,c=this.count;a<c;a++)ff.fromBufferAttribute(this,a),ff.transformDirection(b),this.setXYZ(a,ff.x,ff.y,ff.z);return this}set(a,b=0){return this.array.set(a,b),this}getX(a){return this.array[a*this.itemSize]}setX(a,b){return this.array[a*this.itemSize]=b,this}getY(a){return this.array[a*this.itemSize+1]}setY(a,b){return this.array[a*this.itemSize+1]=b,this}getZ(a){return this.array[a*this.itemSize+2]}setZ(a,b){return this.array[a*this.itemSize+2]=b,this}getW(a){return this.array[a*this.itemSize+3]}setW(a,b){return this.array[a*this.itemSize+3]=b,this}setXY(a,b,c){return a*=this.itemSize,this.array[a+0]=b,this.array[a+1]=c,this}setXYZ(a,b,c,d){return a*=this.itemSize,this.array[a+0]=b,this.array[a+1]=c,this.array[a+2]=d,this}setXYZW(a,b,c,d,e){return a*=this.itemSize,this.array[a+0]=b,this.array[a+1]=c,this.array[a+2]=d,this.array[a+3]=e,this}onUpload(a){return this.onUploadCallback=a,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let a={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(a.name=this.name),this.usage!==dL&&(a.usage=this.usage),(0!==this.updateRange.offset|| -1!==this.updateRange.count)&&(a.updateRange=this.updateRange),a}}class fh extends n{constructor(a,b,c){super(new Int8Array(a),b,c)}}class fi extends n{constructor(a,b,c){super(new Uint8Array(a),b,c)}}class fj extends n{constructor(a,b,c){super(new Uint8ClampedArray(a),b,c)}}class fk extends n{constructor(a,b,c){super(new Int16Array(a),b,c)}}class fl extends n{constructor(a,b,c){super(new Uint16Array(a),b,c)}}class fm extends n{constructor(a,b,c){super(new Int32Array(a),b,c)}}class fn extends n{constructor(a,b,c){super(new Uint32Array(a),b,c)}}class fo extends n{constructor(a,b,c){super(new Uint16Array(a),b,c),this.isFloat16BufferAttribute=!0}}class fp extends n{constructor(a,b,c){super(new Float32Array(a),b,c)}}class fq extends n{constructor(a,b,c){super(new Float64Array(a),b,c)}}let fr=0,fs=new e,ft=new f,fu=new a,fv=new z,fw=new z,fx=new a;class g extends q{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:fr++}),this.uuid=aH(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(a){return Array.isArray(a)?this.index=new(d$(a)?fn:fl)(a,1):this.index=a,this}getAttribute(a){return this.attributes[a]}setAttribute(a,b){return this.attributes[a]=b,this}deleteAttribute(a){return delete this.attributes[a],this}hasAttribute(a){return void 0!==this.attributes[a]}addGroup(a,b,c=0){this.groups.push({start:a,count:b,materialIndex:c})}clearGroups(){this.groups=[]}setDrawRange(a,b){this.drawRange.start=a,this.drawRange.count=b}applyMatrix4(a){let b=this.attributes.position;void 0!==b&&(b.applyMatrix4(a),b.needsUpdate=!0);let c=this.attributes.normal;if(void 0!==c){let e=new u().getNormalMatrix(a);c.applyNormalMatrix(e),c.needsUpdate=!0}let d=this.attributes.tangent;return void 0!==d&&(d.transformDirection(a),d.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(a){return fs.makeRotationFromQuaternion(a),this.applyMatrix4(fs),this}rotateX(a){return fs.makeRotationX(a),this.applyMatrix4(fs),this}rotateY(a){return fs.makeRotationY(a),this.applyMatrix4(fs),this}rotateZ(a){return fs.makeRotationZ(a),this.applyMatrix4(fs),this}translate(a,b,c){return fs.makeTranslation(a,b,c),this.applyMatrix4(fs),this}scale(a,b,c){return fs.makeScale(a,b,c),this.applyMatrix4(fs),this}lookAt(a){return ft.lookAt(a),ft.updateMatrix(),this.applyMatrix4(ft.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(fu).negate(),this.translate(fu.x,fu.y,fu.z),this}setFromPoints(c){let d=[];for(let a=0,e=c.length;a<e;a++){let b=c[a];d.push(b.x,b.y,b.z||0)}return this.setAttribute("position",new fp(d,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new z);let b=this.attributes.position,c=this.morphAttributes.position;if(b&&b.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new a(-1/0,-1/0,-1/0),new a(Infinity,Infinity,Infinity));return}if(void 0!==b){if(this.boundingBox.setFromBufferAttribute(b),c)for(let d=0,e=c.length;d<e;d++){let f=c[d];fv.setFromBufferAttribute(f),this.morphTargetsRelative?(fx.addVectors(this.boundingBox.min,fv.min),this.boundingBox.expandByPoint(fx),fx.addVectors(this.boundingBox.max,fv.max),this.boundingBox.expandByPoint(fx)):(this.boundingBox.expandByPoint(fv.min),this.boundingBox.expandByPoint(fv.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new C);let b=this.attributes.position,c=this.morphAttributes.position;if(b&&b.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new a,1/0);return}if(b){let f=this.boundingSphere.center;if(fv.setFromBufferAttribute(b),c)for(let g=0,k=c.length;g<k;g++){let l=c[g];fw.setFromBufferAttribute(l),this.morphTargetsRelative?(fx.addVectors(fv.min,fw.min),fv.expandByPoint(fx),fx.addVectors(fv.max,fw.max),fv.expandByPoint(fx)):(fv.expandByPoint(fw.min),fv.expandByPoint(fw.max))}fv.getCenter(f);let d=0;for(let h=0,m=b.count;h<m;h++)fx.fromBufferAttribute(b,h),d=Math.max(d,f.distanceToSquared(fx));if(c)for(let i=0,n=c.length;i<n;i++){let j=c[i],o=this.morphTargetsRelative;for(let e=0,p=j.count;e<p;e++)fx.fromBufferAttribute(j,e),o&&(fu.fromBufferAttribute(b,e),fx.add(fu)),d=Math.max(d,f.distanceToSquared(fx))}this.boundingSphere.radius=Math.sqrt(d),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let l=this.index,c=this.attributes;if(null===l|| void 0===c.position|| void 0===c.normal|| void 0===c.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let b=l.array,s=c.position.array,C=c.normal.array,D=c.uv.array,m=s.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new n(new Float32Array(4*m),4));let E=this.getAttribute("tangent").array,t=[],u=[];for(let g=0;g<m;g++)t[g]=new a,u[g]=new a;let F=new a,G=new a,H=new a,I=new j,J=new j,K=new j,L=new a,M=new a;function v(a,b,c){F.fromArray(s,3*a),G.fromArray(s,3*b),H.fromArray(s,3*c),I.fromArray(D,2*a),J.fromArray(D,2*b),K.fromArray(D,2*c),G.sub(F),H.sub(F),J.sub(I),K.sub(I);let d=1/(J.x*K.y-K.x*J.y);isFinite(d)&&(L.copy(G).multiplyScalar(K.y).addScaledVector(H,-J.y).multiplyScalar(d),M.copy(H).multiplyScalar(J.x).addScaledVector(G,-K.x).multiplyScalar(d),t[a].add(L),t[b].add(L),t[c].add(L),u[a].add(M),u[b].add(M),u[c].add(M))}let d=this.groups;0===d.length&&(d=[{start:0,count:b.length}]);for(let h=0,w=d.length;h<w;++h){let o=d[h],p=o.start,x=o.count;for(let e=p,y=p+x;e<y;e+=3)v(b[e+0],b[e+1],b[e+2])}let N=new a,O=new a,P=new a,Q=new a;function i(a){P.fromArray(C,3*a),Q.copy(P);let b=t[a];N.copy(b),N.sub(P.multiplyScalar(P.dot(b))).normalize(),O.crossVectors(Q,b);let c=O.dot(u[a]);E[4*a]=N.x,E[4*a+1]=N.y,E[4*a+2]=N.z,E[4*a+3]=c<0?-1:1}for(let k=0,z=d.length;k<z;++k){let q=d[k],r=q.start,A=q.count;for(let f=r,B=r+A;f<B;f+=3)i(b[f+0]),i(b[f+1]),i(b[f+2])}}computeVertexNormals(){let g=this.index,d=this.getAttribute("position");if(void 0!==d){let c=this.getAttribute("normal");if(void 0===c)c=new n(new Float32Array(3*d.count),3),this.setAttribute("normal",c);else for(let p=0,t=c.count;p<t;p++)c.setXYZ(p,0,0,0);let l=new a,f=new a,m=new a,h=new a,i=new a,j=new a,b=new a,o=new a;if(g)for(let k=0,u=g.count;k<u;k+=3){let q=g.getX(k+0),r=g.getX(k+1),s=g.getX(k+2);l.fromBufferAttribute(d,q),f.fromBufferAttribute(d,r),m.fromBufferAttribute(d,s),b.subVectors(m,f),o.subVectors(l,f),b.cross(o),h.fromBufferAttribute(c,q),i.fromBufferAttribute(c,r),j.fromBufferAttribute(c,s),h.add(b),i.add(b),j.add(b),c.setXYZ(q,h.x,h.y,h.z),c.setXYZ(r,i.x,i.y,i.z),c.setXYZ(s,j.x,j.y,j.z)}else for(let e=0,v=d.count;e<v;e+=3)l.fromBufferAttribute(d,e+0),f.fromBufferAttribute(d,e+1),m.fromBufferAttribute(d,e+2),b.subVectors(m,f),o.subVectors(l,f),b.cross(o),c.setXYZ(e+0,b.x,b.y,b.z),c.setXYZ(e+1,b.x,b.y,b.z),c.setXYZ(e+2,b.x,b.y,b.z);this.normalizeNormals(),c.needsUpdate=!0}}merge(a,b){if(!(a&&a.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",a);return}void 0===b&&(b=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));let e=this.attributes;for(let c in e){if(void 0===a.attributes[c])continue;let k=e[c],f=k.array,g=a.attributes[c],h=g.array,i=g.itemSize*b,l=Math.min(h.length,f.length-i);for(let d=0,j=i;d<l;d++,j++)f[j]=h[d]}return this}normalizeNormals(){let b=this.attributes.normal;for(let a=0,c=b.count;a<c;a++)fx.fromBufferAttribute(b,a),fx.normalize(),b.setXYZ(a,fx.x,fx.y,fx.z)}toNonIndexed(){function e(a,b){let e=a.array,c=a.itemSize,i=a.normalized,f=new e.constructor(b.length*c),g=0,j=0;for(let d=0,k=b.length;d<k;d++){g=a.isInterleavedBufferAttribute?b[d]*a.data.stride+a.offset:b[d]*c;for(let h=0;h<c;h++)f[j++]=e[g++]}return new n(f,c,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let a=new g,f=this.index.array,h=this.attributes;for(let i in h){let p=h[i],q=e(p,f);a.setAttribute(i,q)}let j=this.morphAttributes;for(let k in j){let l=[],m=j[k];for(let b=0,r=m.length;b<r;b++){let s=m[b],t=e(s,f);l.push(t)}a.morphAttributes[k]=l}a.morphTargetsRelative=this.morphTargetsRelative;let o=this.groups;for(let c=0,u=o.length;c<u;c++){let d=o[c];a.addGroup(d.start,d.count,d.materialIndex)}return a}toJSON(){let a={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),Object.keys(this.userData).length>0&&(a.userData=this.userData),void 0!==this.parameters){let b=this.parameters;for(let c in b)void 0!==b[c]&&(a[c]=b[c]);return a}a.data={attributes:{}};let d=this.index;null!==d&&(a.data.index={type:d.array.constructor.name,array:Array.prototype.slice.call(d.array)});let h=this.attributes;for(let i in h){let o=h[i];a.data.attributes[i]=o.toJSON(a.data)}let j={},k=!1;for(let l in this.morphAttributes){let m=this.morphAttributes[l],e=[];for(let f=0,p=m.length;f<p;f++){let q=m[f];e.push(q.toJSON(a.data))}e.length>0&&(j[l]=e,k=!0)}k&&(a.data.morphAttributes=j,a.data.morphTargetsRelative=this.morphTargetsRelative);let n=this.groups;n.length>0&&(a.data.groups=JSON.parse(JSON.stringify(n)));let g=this.boundingSphere;return null!==g&&(a.data.boundingSphere={center:g.center.toArray(),radius:g.radius}),a}clone(){return new this.constructor().copy(this)}copy(a){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let b={};this.name=a.name;let f=a.index;null!==f&&this.setIndex(f.clone(b));let g=a.attributes;for(let h in g){let p=g[h];this.setAttribute(h,p.clone(b))}let i=a.morphAttributes;for(let j in i){let k=[],l=i[j];for(let c=0,q=l.length;c<q;c++)k.push(l[c].clone(b));this.morphAttributes[j]=k}this.morphTargetsRelative=a.morphTargetsRelative;let m=a.groups;for(let d=0,r=m.length;d<r;d++){let e=m[d];this.addGroup(e.start,e.count,e.materialIndex)}let n=a.boundingBox;null!==n&&(this.boundingBox=n.clone());let o=a.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=a.drawRange.start,this.drawRange.count=a.drawRange.count,this.userData=a.userData,void 0!==a.parameters&&(this.parameters=Object.assign({},a.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}let fy=new e,fz=new G,fA=new C,fB=new a,fC=new a,fD=new a,fE=new a,fF=new a,fG=new a,fH=new a,fI=new a,fJ=new a,fK=new j,fL=new j,fM=new j,fN=new a,fO=new a;class D extends f{constructor(a=new g,b=new fe){super(),this.isMesh=!0,this.type="Mesh",this.geometry=a,this.material=b,this.updateMorphTargets()}copy(a,b){return super.copy(a,b),void 0!==a.morphTargetInfluences&&(this.morphTargetInfluences=a.morphTargetInfluences.slice()),void 0!==a.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},a.morphTargetDictionary)),this.material=a.material,this.geometry=a.geometry,this}updateMorphTargets(){let e=this.geometry,c=e.morphAttributes,d=Object.keys(c);if(d.length>0){let b=c[d[0]];if(void 0!==b){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,f=b.length;a<f;a++){let g=b[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[g]=a}}}}raycast(g,n){let b=this.geometry,e=this.material,v=this.matrixWorld;if(void 0===e||(null===b.boundingSphere&&b.computeBoundingSphere(),fA.copy(b.boundingSphere),fA.applyMatrix4(v),!1===g.ray.intersectsSphere(fA))||(fy.copy(v).invert(),fz.copy(g.ray).applyMatrix4(fy),null!==b.boundingBox&& !1===fz.intersectsBox(b.boundingBox)))return;let a,d=b.index,f=b.attributes.position,o=b.morphAttributes.position,p=b.morphTargetsRelative,q=b.attributes.uv,r=b.attributes.uv2,s=b.groups,c=b.drawRange;if(null!==d){if(Array.isArray(e))for(let t=0,w=s.length;t<w;t++){let l=s[t],x=e[l.materialIndex],y=Math.max(l.start,c.start),z=Math.min(d.count,Math.min(l.start+l.count,c.start+c.count));for(let h=y,A=z;h<A;h+=3){let B=d.getX(h),C=d.getX(h+1),D=d.getX(h+2);(a=fP(this,x,g,fz,f,o,p,q,r,B,C,D))&&(a.faceIndex=Math.floor(h/3),a.face.materialIndex=l.materialIndex,n.push(a))}}else{let E=Math.max(0,c.start),F=Math.min(d.count,c.start+c.count);for(let i=E,G=F;i<G;i+=3){let H=d.getX(i),I=d.getX(i+1),J=d.getX(i+2);(a=fP(this,e,g,fz,f,o,p,q,r,H,I,J))&&(a.faceIndex=Math.floor(i/3),n.push(a))}}}else if(void 0!==f){if(Array.isArray(e))for(let u=0,K=s.length;u<K;u++){let m=s[u],L=e[m.materialIndex],M=Math.max(m.start,c.start),N=Math.min(f.count,Math.min(m.start+m.count,c.start+c.count));for(let j=M,O=N;j<O;j+=3){let P=j,Q=j+1,R=j+2;(a=fP(this,L,g,fz,f,o,p,q,r,P,Q,R))&&(a.faceIndex=Math.floor(j/3),a.face.materialIndex=m.materialIndex,n.push(a))}}else{let S=Math.max(0,c.start),T=Math.min(f.count,c.start+c.count);for(let k=S,U=T;k<U;k+=3){let V=k,W=k+1,X=k+2;(a=fP(this,e,g,fz,f,o,p,q,r,V,W,X))&&(a.faceIndex=Math.floor(k/3),n.push(a))}}}}}function fP(c,q,r,s,l,m,t,h,i,d,e,f){fB.fromBufferAttribute(l,d),fC.fromBufferAttribute(l,e),fD.fromBufferAttribute(l,f);let o=c.morphTargetInfluences;if(m&&o){fH.set(0,0,0),fI.set(0,0,0),fJ.set(0,0,0);for(let k=0,u=m.length;k<u;k++){let b=o[k],n=m[k];0!==b&&(fE.fromBufferAttribute(n,d),fF.fromBufferAttribute(n,e),fG.fromBufferAttribute(n,f),t?(fH.addScaledVector(fE,b),fI.addScaledVector(fF,b),fJ.addScaledVector(fG,b)):(fH.addScaledVector(fE.sub(fB),b),fI.addScaledVector(fF.sub(fC),b),fJ.addScaledVector(fG.sub(fD),b)))}fB.add(fH),fC.add(fI),fD.add(fJ)}c.isSkinnedMesh&&(c.boneTransform(d,fB),c.boneTransform(e,fC),c.boneTransform(f,fD));let g=function(d,e,a,f,g,h,i,b){let j;if(null===(e.side===bH?f.intersectTriangle(i,h,g,!0,b):f.intersectTriangle(g,h,i,e.side!==bI,b)))return null;fO.copy(b),fO.applyMatrix4(d.matrixWorld);let c=a.ray.origin.distanceTo(fO);return c<a.near||c>a.far?null:{distance:c,point:fO.clone(),object:d}}(c,q,r,s,fB,fC,fD,fN);if(g){h&&(fK.fromBufferAttribute(h,d),fL.fromBufferAttribute(h,e),fM.fromBufferAttribute(h,f),g.uv=aT.getUV(fN,fB,fC,fD,fK,fL,fM,new j)),i&&(fK.fromBufferAttribute(i,d),fL.fromBufferAttribute(i,e),fM.fromBufferAttribute(i,f),g.uv2=aT.getUV(fN,fB,fC,fD,fK,fL,fM,new j));let p={a:d,b:e,c:f,normal:new a,materialIndex:0};aT.getNormal(fB,fC,fD,p.normal),g.face=p}return g}class $ extends g{constructor(b=1,c=1,d=1,e=1,f=1,g=1){super(),this.type="BoxGeometry",this.parameters={width:b,height:c,depth:d,widthSegments:e,heightSegments:f,depthSegments:g};let m=this;e=Math.floor(e),f=Math.floor(f),g=Math.floor(g);let i=[],j=[],k=[],l=[],n=0,o=0;function h(r,s,t,A,B,u,v,w,f,g,C){let D=u/f,E=v/g,F=u/2,G=v/2,H=w/2,e=f+1,I=g+1,x=0,q=0,b=new a;for(let h=0;h<I;h++){let J=h*E-G;for(let p=0;p<e;p++){let K=p*D-F;b[r]=K*A,b[s]=J*B,b[t]=H,j.push(b.x,b.y,b.z),b[r]=0,b[s]=0,b[t]=w>0?1:-1,k.push(b.x,b.y,b.z),l.push(p/f),l.push(1-h/g),x+=1}}for(let c=0;c<g;c++)for(let d=0;d<f;d++){let L=n+d+e*c,y=n+d+e*(c+1),M=n+(d+1)+e*(c+1),z=n+(d+1)+e*c;i.push(L,y,z),i.push(y,M,z),q+=6}m.addGroup(o,q,C),o+=q,n+=x}h("z","y","x",-1,-1,d,c,b,g,f,0),h("z","y","x",1,-1,d,c,-b,g,f,1),h("x","z","y",1,1,b,d,c,e,g,2),h("x","z","y",1,-1,b,d,-c,e,g,3),h("x","y","z",1,-1,b,c,d,e,f,4),h("x","y","z",-1,-1,b,c,-d,e,f,5),this.setIndex(i),this.setAttribute("position",new fp(j,3)),this.setAttribute("normal",new fp(k,3)),this.setAttribute("uv",new fp(l,2))}static fromJSON(a){return new $(a.width,a.height,a.depth,a.widthSegments,a.heightSegments,a.depthSegments)}}function aU(e){let c={};for(let b in e)for(let d in c[b]={},e[b]){let a=e[b][d];a&&(a.isColor||a.isMatrix3||a.isMatrix4||a.isVector2||a.isVector3||a.isVector4||a.isTexture||a.isQuaternion)?c[b][d]=a.clone():Array.isArray(a)?c[b][d]=a.slice():c[b][d]=a}return c}function i(b){let c={};for(let a=0;a<b.length;a++){let d=aU(b[a]);for(let e in d)c[e]=d[e]}return c}let fQ={clone:aU,merge:i};class aV extends k{constructor(a){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==a&&(void 0!==a.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(a))}copy(a){return super.copy(a),this.fragmentShader=a.fragmentShader,this.vertexShader=a.vertexShader,this.uniforms=aU(a.uniforms),this.uniformsGroups=function(b){let c=[];for(let a=0;a<b.length;a++)c.push(b[a].clone());return c}(a.uniformsGroups),this.defines=Object.assign({},a.defines),this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.fog=a.fog,this.lights=a.lights,this.clipping=a.clipping,this.extensions=Object.assign({},a.extensions),this.glslVersion=a.glslVersion,this}toJSON(e){let b=super.toJSON(e);for(let c in b.glslVersion=this.glslVersion,b.uniforms={},this.uniforms){let g=this.uniforms[c],a=g.value;a&&a.isTexture?b.uniforms[c]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?b.uniforms[c]={type:"c",value:a.getHex()}:a&&a.isVector2?b.uniforms[c]={type:"v2",value:a.toArray()}:a&&a.isVector3?b.uniforms[c]={type:"v3",value:a.toArray()}:a&&a.isVector4?b.uniforms[c]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?b.uniforms[c]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?b.uniforms[c]={type:"m4",value:a.toArray()}:b.uniforms[c]={value:a}}Object.keys(this.defines).length>0&&(b.defines=this.defines),b.vertexShader=this.vertexShader,b.fragmentShader=this.fragmentShader;let d={};for(let f in this.extensions)!0===this.extensions[f]&&(d[f]=!0);return Object.keys(d).length>0&&(b.extensions=d),b}}class H extends f{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new e,this.projectionMatrix=new e,this.projectionMatrixInverse=new e}copy(a,b){return super.copy(a,b),this.matrixWorldInverse.copy(a.matrixWorldInverse),this.projectionMatrix.copy(a.projectionMatrix),this.projectionMatrixInverse.copy(a.projectionMatrixInverse),this}getWorldDirection(b){this.updateWorldMatrix(!0,!1);let a=this.matrixWorld.elements;return b.set(-a[8],-a[9],-a[10]).normalize()}updateMatrixWorld(a){super.updateMatrixWorld(a),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(a,b){super.updateWorldMatrix(a,b),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class aW extends H{constructor(a=50,b=1,c=.1,d=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=a,this.zoom=1,this.near=c,this.far=d,this.focus=10,this.aspect=b,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(a,b){return super.copy(a,b),this.fov=a.fov,this.zoom=a.zoom,this.near=a.near,this.far=a.far,this.focus=a.focus,this.aspect=a.aspect,this.view=null===a.view?null:Object.assign({},a.view),this.filmGauge=a.filmGauge,this.filmOffset=a.filmOffset,this}setFocalLength(a){let b=.5*this.getFilmHeight()/a;this.fov=2*aG*Math.atan(b),this.updateProjectionMatrix()}getFocalLength(){let a=Math.tan(.5*aF*this.fov);return .5*this.getFilmHeight()/a}getEffectiveFOV(){return 2*aG*Math.atan(Math.tan(.5*aF*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(a,b,c,d,e,f){this.aspect=a/b,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=a,this.view.fullHeight=b,this.view.offsetX=c,this.view.offsetY=d,this.view.width=e,this.view.height=f,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let f=this.near,b=f*Math.tan(.5*aF*this.fov)/this.zoom,c=2*b,d=this.aspect*c,e=-0.5*d,a=this.view;if(null!==this.view&&this.view.enabled){let g=a.fullWidth,h=a.fullHeight;e+=a.offsetX*d/g,b-=a.offsetY*c/h,d*=a.width/g,c*=a.height/h}let i=this.filmOffset;0!==i&&(e+=f*i/this.getFilmWidth()),this.projectionMatrix.makePerspective(e,e+d,b,b-c,f,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(b){let a=super.toJSON(b);return a.object.fov=this.fov,a.object.zoom=this.zoom,a.object.near=this.near,a.object.far=this.far,a.object.focus=this.focus,a.object.aspect=this.aspect,null!==this.view&&(a.object.view=Object.assign({},this.view)),a.object.filmGauge=this.filmGauge,a.object.filmOffset=this.filmOffset,a}}class fR extends f{constructor(b,c,j){if(super(),this.type="CubeCamera",!0!==j.isWebGLCubeRenderTarget){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=j;let d=new aW(90,1,b,c);d.layers=this.layers,d.up.set(0,-1,0),d.lookAt(new a(1,0,0)),this.add(d);let e=new aW(90,1,b,c);e.layers=this.layers,e.up.set(0,-1,0),e.lookAt(new a(-1,0,0)),this.add(e);let f=new aW(90,1,b,c);f.layers=this.layers,f.up.set(0,0,1),f.lookAt(new a(0,1,0)),this.add(f);let g=new aW(90,1,b,c);g.layers=this.layers,g.up.set(0,0,-1),g.lookAt(new a(0,-1,0)),this.add(g);let h=new aW(90,1,b,c);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new a(0,0,1)),this.add(h);let i=new aW(90,1,b,c);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new a(0,0,-1)),this.add(i)}update(a,c){null===this.parent&&this.updateMatrixWorld();let b=this.renderTarget,[d,e,f,g,h,i]=this.children,j=a.getRenderTarget(),k=a.toneMapping,l=a.xr.enabled;a.toneMapping=cg,a.xr.enabled=!1;let m=b.texture.generateMipmaps;b.texture.generateMipmaps=!1,a.setRenderTarget(b,0),a.render(c,d),a.setRenderTarget(b,1),a.render(c,e),a.setRenderTarget(b,2),a.render(c,f),a.setRenderTarget(b,3),a.render(c,g),a.setRenderTarget(b,4),a.render(c,h),b.texture.generateMipmaps=m,a.setRenderTarget(b,5),a.render(c,i),a.setRenderTarget(j),a.toneMapping=k,a.xr.enabled=l,b.texture.needsPMREMUpdate=!0}}class aX extends l{constructor(a,b,c,d,e,f,g,h,i,j){super(a=void 0!==a?a:[],b=void 0!==b?b:ar,c,d,e,f,g,h,i,j),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(a){this.image=a}}class fS extends y{constructor(c,a={}){super(c,c,a),this.isWebGLCubeRenderTarget=!0;let b={width:c,height:c,depth:1};this.texture=new aX([b,b,b,b,b,b],a.mapping,a.wrapS,a.wrapT,a.magFilter,a.minFilter,a.format,a.type,a.anisotropy,a.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==a.generateMipmaps&&a.generateMipmaps,this.texture.minFilter=void 0!==a.minFilter?a.minFilter:aC}fromEquirectangularTexture(e,a){this.texture.type=a.type,this.texture.encoding=a.encoding,this.texture.generateMipmaps=a.generateMipmaps,this.texture.minFilter=a.minFilter,this.texture.magFilter=a.magFilter;let b={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},f=new $(5,5,5),d=new aV({name:"CubemapFromEquirect",uniforms:aU(b.uniforms),vertexShader:b.vertexShader,fragmentShader:b.fragmentShader,side:bH,blending:bL});d.uniforms.tEquirect.value=a;let c=new D(f,d),g=a.minFilter;a.minFilter===aE&&(a.minFilter=aC);let h=new fR(1,10,this);return h.update(e,c),a.minFilter=g,c.geometry.dispose(),c.material.dispose(),this}clear(a,c,d,e){let f=a.getRenderTarget();for(let b=0;b<6;b++)a.setRenderTarget(this,b),a.clear(c,d,e);a.setRenderTarget(f)}}let fT=new a,fU=new a,fV=new u;class fW{constructor(b=new a(1,0,0),c=0){this.isPlane=!0,this.normal=b,this.constant=c}set(a,b){return this.normal.copy(a),this.constant=b,this}setComponents(a,b,c,d){return this.normal.set(a,b,c),this.constant=d,this}setFromNormalAndCoplanarPoint(a,b){return this.normal.copy(a),this.constant=-b.dot(this.normal),this}setFromCoplanarPoints(a,b,c){let d=fT.subVectors(c,b).cross(fU.subVectors(a,b)).normalize();return this.setFromNormalAndCoplanarPoint(d,a),this}copy(a){return this.normal.copy(a.normal),this.constant=a.constant,this}normalize(){let a=1/this.normal.length();return this.normal.multiplyScalar(a),this.constant*=a,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(a){return this.normal.dot(a)+this.constant}distanceToSphere(a){return this.distanceToPoint(a.center)-a.radius}projectPoint(a,b){return b.copy(this.normal).multiplyScalar(-this.distanceToPoint(a)).add(a)}intersectLine(a,c){let d=a.delta(fT),e=this.normal.dot(d);if(0===e)return 0===this.distanceToPoint(a.start)?c.copy(a.start):null;let b=-(a.start.dot(this.normal)+this.constant)/e;return b<0||b>1?null:c.copy(d).multiplyScalar(b).add(a.start)}intersectsLine(a){let b=this.distanceToPoint(a.start),c=this.distanceToPoint(a.end);return b<0&&c>0||c<0&&b>0}intersectsBox(a){return a.intersectsPlane(this)}intersectsSphere(a){return a.intersectsPlane(this)}coplanarPoint(a){return a.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(a,b){let c=b||fV.getNormalMatrix(a),d=this.coplanarPoint(fT).applyMatrix4(a),e=this.normal.applyMatrix3(c).normalize();return this.constant=-d.dot(e),this}translate(a){return this.constant-=a.dot(this.normal),this}equals(a){return a.normal.equals(this.normal)&&a.constant===this.constant}clone(){return new this.constructor().copy(this)}}let fX=new C,fY=new a;class fZ{constructor(a=new fW,b=new fW,c=new fW,d=new fW,e=new fW,f=new fW){this.planes=[a,b,c,d,e,f]}set(b,c,d,e,f,g){let a=this.planes;return a[0].copy(b),a[1].copy(c),a[2].copy(d),a[3].copy(e),a[4].copy(f),a[5].copy(g),this}copy(b){let c=this.planes;for(let a=0;a<6;a++)c[a].copy(b.planes[a]);return this}setFromProjectionMatrix(s){let b=this.planes,a=s.elements,g=a[0],h=a[1],i=a[2],c=a[3],j=a[4],k=a[5],l=a[6],d=a[7],m=a[8],n=a[9],o=a[10],e=a[11],p=a[12],q=a[13],r=a[14],f=a[15];return b[0].setComponents(c-g,d-j,e-m,f-p).normalize(),b[1].setComponents(c+g,d+j,e+m,f+p).normalize(),b[2].setComponents(c+h,d+k,e+n,f+q).normalize(),b[3].setComponents(c-h,d-k,e-n,f-q).normalize(),b[4].setComponents(c-i,d-l,e-o,f-r).normalize(),b[5].setComponents(c+i,d+l,e+o,f+r).normalize(),this}intersectsObject(b){let a=b.geometry;return null===a.boundingSphere&&a.computeBoundingSphere(),fX.copy(a.boundingSphere).applyMatrix4(b.matrixWorld),this.intersectsSphere(fX)}intersectsSprite(a){return fX.center.set(0,0,0),fX.radius=.7071067811865476,fX.applyMatrix4(a.matrixWorld),this.intersectsSphere(fX)}intersectsSphere(b){let c=this.planes,d=b.center,e=-b.radius;for(let a=0;a<6;a++){let f=c[a].distanceToPoint(d);if(f<e)return!1}return!0}intersectsBox(a){let d=this.planes;for(let c=0;c<6;c++){let b=d[c];if(fY.x=b.normal.x>0?a.max.x:a.min.x,fY.y=b.normal.y>0?a.max.y:a.min.y,fY.z=b.normal.z>0?a.max.z:a.min.z,0>b.distanceToPoint(fY))return!1}return!0}containsPoint(b){let c=this.planes;for(let a=0;a<6;a++)if(0>c[a].distanceToPoint(b))return!1;return!0}clone(){return new this.constructor().copy(this)}}function f$(){let a=null,b=!1,c=null,d=null;function e(b,f){c(b,f),d=a.requestAnimationFrame(e)}return{start:function(){!0!==b&&null!==c&&(d=a.requestAnimationFrame(e),b=!0)},stop:function(){a.cancelAnimationFrame(d),b=!1},setAnimationLoop:function(a){c=a},setContext:function(b){a=b}}}function f_(b,a){let c=a.isWebGL2,d=new WeakMap;return{get:function(a){return a.isInterleavedBufferAttribute&&(a=a.data),d.get(a)},remove:function(a){a.isInterleavedBufferAttribute&&(a=a.data);let c=d.get(a);c&&(b.deleteBuffer(c.buffer),d.delete(a))},update:function(a,f){if(a.isGLBufferAttribute){let g=d.get(a);(!g||g.version<a.version)&&d.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}a.isInterleavedBufferAttribute&&(a=a.data);let e=d.get(a);void 0===e?d.set(a,function(e,f){let a=e.array,h=e.usage,g=b.createBuffer();b.bindBuffer(f,g),b.bufferData(f,a,h),e.onUploadCallback();let d;if(a instanceof Float32Array)d=5126;else if(a instanceof Uint16Array){if(e.isFloat16BufferAttribute){if(c)d=5131;else throw Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.")}else d=5123}else if(a instanceof Int16Array)d=5122;else if(a instanceof Uint32Array)d=5125;else if(a instanceof Int32Array)d=5124;else if(a instanceof Int8Array)d=5120;else if(a instanceof Uint8Array)d=5121;else if(a instanceof Uint8ClampedArray)d=5121;else throw Error("THREE.WebGLAttributes: Unsupported buffer data format: "+a);return{buffer:g,type:d,bytesPerElement:a.BYTES_PER_ELEMENT,version:e.version}}(a,f)):e.version<a.version&&(!function(g,f,e){let d=f.array,a=f.updateRange;b.bindBuffer(e,g),-1===a.count?b.bufferSubData(e,0,d):(c?b.bufferSubData(e,a.offset*d.BYTES_PER_ELEMENT,d,a.offset,a.count):b.bufferSubData(e,a.offset*d.BYTES_PER_ELEMENT,d.subarray(a.offset,a.offset+a.count)),a.count=-1)}(e.buffer,a,f),e.version=a.version)}}}class _ extends g{constructor(h=1,i=1,l=1,m=1){super(),this.type="PlaneGeometry",this.parameters={width:h,height:i,widthSegments:l,heightSegments:m};let r=h/2,s=i/2,d=Math.floor(l),e=Math.floor(m),c=d+1,t=e+1,u=h/d,v=i/e,j=[],n=[],o=[],k=[];for(let f=0;f<t;f++){let w=f*v-s;for(let g=0;g<c;g++){let x=g*u-r;n.push(x,-w,0),o.push(0,0,1),k.push(g/d),k.push(1-f/e)}}for(let a=0;a<e;a++)for(let b=0;b<d;b++){let y=b+c*a,p=b+c*(a+1),z=b+1+c*(a+1),q=b+1+c*a;j.push(y,p,q),j.push(p,z,q)}this.setIndex(j),this.setAttribute("position",new fp(n,3)),this.setAttribute("normal",new fp(o,3)),this.setAttribute("uv",new fp(k,2))}static fromJSON(a){return new _(a.width,a.height,a.widthSegments,a.heightSegments)}}let c={alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n	if ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\n	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n		float alpha = pow2( roughness );\n		vec3 halfDir = normalize( lightDir + viewDir );\n		float dotNL = saturate( dot( normal, lightDir ) );\n		float dotNV = saturate( dot( normal, viewDir ) );\n		float dotNH = saturate( dot( normal, halfDir ) );\n		float dotVH = saturate( dot( viewDir, halfDir ) );\n		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n		return F * ( V * D );\n	}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n	const mat3 XYZ_TO_REC709 = mat3(\n		 3.2404542, -0.9692660,  0.0556434,\n		-1.5371385,  1.8760108, -0.2040259,\n		-0.4985314,  0.0415560,  1.0572252\n	);\n	vec3 Fresnel0ToIor( vec3 fresnel0 ) {\n		vec3 sqrtF0 = sqrt( fresnel0 );\n		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n	}\n	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n	}\n	float IorToFresnel0( float transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n	}\n	vec3 evalSensitivity( float OPD, vec3 shift ) {\n		float phase = 2.0 * PI * OPD * 1.0e-9;\n		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n		xyz /= 1.0685e-7;\n		vec3 rgb = XYZ_TO_REC709 * xyz;\n		return rgb;\n	}\n	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n		vec3 I;\n		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n		float cosTheta2Sq = 1.0 - sinTheta2Sq;\n		if ( cosTheta2Sq < 0.0 ) {\n			 return vec3( 1.0 );\n		}\n		float cosTheta2 = sqrt( cosTheta2Sq );\n		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n		float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n		float R21 = R12;\n		float T121 = 1.0 - R12;\n		float phi12 = 0.0;\n		if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n		float phi21 = PI - phi12;\n		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n		vec3 phi23 = vec3( 0.0 );\n		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n		vec3 phi = vec3( phi21 ) + phi23;\n		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n		vec3 r123 = sqrt( R123 );\n		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n		vec3 C0 = R12 + Rs;\n		I = C0;\n		vec3 Cm = Rs - T121;\n		for ( int m = 1; m <= 2; ++ m ) {\n			Cm *= r123;\n			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n			I += Cm * Sm;\n		}\n		return max( I, vec3( 0.0 ) );\n	}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = dFdx( surf_pos.xyz );\n		vec3 vSigmaY = dFdy( surf_pos.xyz );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n	return dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		uv.x += filterInt * 3.0 * cubeUV_minTileSize;\n		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n		uv.x *= CUBEUV_TEXEL_WIDTH;\n		uv.y *= CUBEUV_TEXEL_HEIGHT;\n		#ifdef texture2DGradEXT\n			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n		#else\n			return texture2D( envMap, uv ).rgb;\n		#endif\n	}\n	#define r0 1.0\n	#define v0 0.339\n	#define m0 - 2.0\n	#define r1 0.8\n	#define v1 0.276\n	#define m1 - 1.0\n	#define r4 0.4\n	#define v4 0.046\n	#define m4 2.0\n	#define r5 0.305\n	#define v5 0.016\n	#define m5 3.0\n	#define r6 0.21\n	#define v6 0.0038\n	#define m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= r1 ) {\n			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n		} else if ( roughness >= r4 ) {\n			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n		} else if ( roughness >= r5 ) {\n			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n		} else if ( roughness >= r6 ) {\n			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 reflectVec = reflect( - viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n	#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n	reflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n	vIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointLightInfo( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotLightInfo( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		#ifdef DOUBLE_SIDED\n			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		if ( cutoffDistance > 0.0 ) {\n			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		}\n		return distanceFalloff;\n	#else\n		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n		}\n		return 1.0;\n	#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )	(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	#ifdef SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULARINTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n		#endif\n		#ifdef USE_SPECULARCOLORMAP\n			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n	material.iridescence = iridescence;\n	material.iridescenceIOR = iridescenceIOR;\n	#ifdef USE_IRIDESCENCEMAP\n		material.iridescence *= texture2D( iridescenceMap, vUv ).r;\n	#endif\n	#ifdef USE_IRIDESCENCE_THICKNESSMAP\n		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n	#else\n		material.iridescenceThickness = iridescenceThicknessMaximum;\n	#endif\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEENCOLORMAP\n		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEENROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n	#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_IRIDESCENCE\n		float iridescence;\n		float iridescenceIOR;\n		float iridescenceThickness;\n		vec3 iridescenceFresnel;\n		vec3 iridescenceF0;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	#ifdef USE_IRIDESCENCE\n		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n	#else\n		vec3 Fr = specularColor;\n	#endif\n	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n	#endif\n	#ifdef USE_IRIDESCENCE\n		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n	#else\n		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	#ifdef USE_IRIDESCENCE\n		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n	#else\n		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	#endif\n	vec3 totalScattering = singleScattering + multiScattering;\n	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n	float dotNVi = saturate( dot( normal, geometry.viewDir ) );\n	if ( material.iridescenceThickness == 0.0 ) {\n		material.iridescence = 0.0;\n	} else {\n		material.iridescence = saturate( material.iridescence );\n	}\n	if ( material.iridescence > 0.0 ) {\n		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n	}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometry.normal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 sampledDiffuseColor = texture2D( map, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n	#endif\n	diffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n	diffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	uniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n	vColor *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		#if defined( USE_COLOR_ALPHA )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n		#elif defined( USE_COLOR )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n		#endif\n	}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n	#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n		uniform sampler2DArray morphTargetsTexture;\n		uniform ivec2 morphTargetsTextureSize;\n		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n			int y = texelIndex / morphTargetsTextureSize.x;\n			int x = texelIndex - y * morphTargetsTextureSize.x;\n			ivec3 morphUV = ivec3( x, y, morphTargetIndex );\n			return texelFetch( morphTargetsTexture, morphUV, 0 );\n		}\n	#else\n		#ifndef USE_MORPHNORMALS\n			uniform float morphTargetInfluences[ 8 ];\n		#else\n			uniform float morphTargetInfluences[ 4 ];\n		#endif\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n		}\n	#else\n		transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n		transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n		transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n		transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n		#ifndef USE_MORPHNORMALS\n			transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n			transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n			transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n			transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n		#endif\n	#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	#ifdef USE_TANGENT\n		vec3 tangent = normalize( vTangent );\n		vec3 bitangent = normalize( vBitangent );\n		#ifdef DOUBLE_SIDED\n			tangent = tangent * faceDirection;\n			bitangent = bitangent * faceDirection;\n		#endif\n		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n			mat3 vTBN = mat3( tangent, bitangent, normal );\n		#endif\n	#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	#ifdef USE_TANGENT\n		normal = normalize( vTBN * mapN );\n	#else\n		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n	#endif\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	#ifdef USE_TANGENT\n		clearcoatNormal = normalize( vTBN * clearcoatMapN );\n	#else\n		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n	#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n	uniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		vec4 shadowWorldPosition;\n	#endif\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	uniform highp sampler2D boneTexture;\n	uniform int boneTextureSize;\n	mat4 getBoneMatrix( const in float i ) {\n		float j = i * 4.0;\n		float x = mod( j, float( boneTextureSize ) );\n		float y = floor( j / float( boneTextureSize ) );\n		float dx = 1.0 / float( boneTextureSize );\n		float dy = 1.0 / float( boneTextureSize );\n		y = dy * ( y + 0.5 );\n		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n		mat4 bone = mat4( v1, v2, v3, v4 );\n		return bone;\n	}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	float transmissionAlpha = 1.0;\n	float transmissionFactor = transmission;\n	float thicknessFactor = thickness;\n	#ifdef USE_TRANSMISSIONMAP\n		transmissionFactor *= texture2D( transmissionMap, vUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		thicknessFactor *= texture2D( thicknessMap, vUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmission = getIBLVolumeRefraction(\n		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n		attenuationColor, attenuationDistance );\n	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( const in float roughness, const in float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		#ifdef texture2DLodEXT\n			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#else\n			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#endif\n	}\n	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n		if ( attenuationDistance == 0.0 ) {\n			return radiance;\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n		const in vec3 attenuationColor, const in float attenuationDistance ) {\n		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n	}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n	varying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n	#ifdef UVS_VERTEX_ONLY\n		vec2 vUv;\n	#else\n		varying vec2 vUv;\n	#endif\n	uniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n	uniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n	gl_FragColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n	#endif\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	vec3 vReflect = vWorldDirection;\n	#include <envmap_fragment>\n	gl_FragColor = envColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	#ifdef DOUBLE_SIDED\n		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n	#else\n		reflectedLight.indirectDiffuse += vIndirectFront;\n	#endif\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULARINTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n	#ifdef USE_SPECULARCOLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n	uniform float iridescence;\n	uniform float iridescenceIOR;\n	uniform float iridescenceThicknessMinimum;\n	uniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEENCOLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEENROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n	#endif\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}"},b={common:{diffuse:{value:new h(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new u},uv2Transform:{value:new u},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new j(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new h(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new h(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new u}},sprite:{diffuse:{value:new h(16777215)},opacity:{value:1},center:{value:new j(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new u}}},aa={basic:{uniforms:i([b.common,b.specularmap,b.envmap,b.aomap,b.lightmap,b.fog]),vertexShader:c.meshbasic_vert,fragmentShader:c.meshbasic_frag},lambert:{uniforms:i([b.common,b.specularmap,b.envmap,b.aomap,b.lightmap,b.emissivemap,b.fog,b.lights,{emissive:{value:new h(0)}}]),vertexShader:c.meshlambert_vert,fragmentShader:c.meshlambert_frag},phong:{uniforms:i([b.common,b.specularmap,b.envmap,b.aomap,b.lightmap,b.emissivemap,b.bumpmap,b.normalmap,b.displacementmap,b.fog,b.lights,{emissive:{value:new h(0)},specular:{value:new h(1118481)},shininess:{value:30}}]),vertexShader:c.meshphong_vert,fragmentShader:c.meshphong_frag},standard:{uniforms:i([b.common,b.envmap,b.aomap,b.lightmap,b.emissivemap,b.bumpmap,b.normalmap,b.displacementmap,b.roughnessmap,b.metalnessmap,b.fog,b.lights,{emissive:{value:new h(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:c.meshphysical_vert,fragmentShader:c.meshphysical_frag},toon:{uniforms:i([b.common,b.aomap,b.lightmap,b.emissivemap,b.bumpmap,b.normalmap,b.displacementmap,b.gradientmap,b.fog,b.lights,{emissive:{value:new h(0)}}]),vertexShader:c.meshtoon_vert,fragmentShader:c.meshtoon_frag},matcap:{uniforms:i([b.common,b.bumpmap,b.normalmap,b.displacementmap,b.fog,{matcap:{value:null}}]),vertexShader:c.meshmatcap_vert,fragmentShader:c.meshmatcap_frag},points:{uniforms:i([b.points,b.fog]),vertexShader:c.points_vert,fragmentShader:c.points_frag},dashed:{uniforms:i([b.common,b.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:c.linedashed_vert,fragmentShader:c.linedashed_frag},depth:{uniforms:i([b.common,b.displacementmap]),vertexShader:c.depth_vert,fragmentShader:c.depth_frag},normal:{uniforms:i([b.common,b.bumpmap,b.normalmap,b.displacementmap,{opacity:{value:1}}]),vertexShader:c.meshnormal_vert,fragmentShader:c.meshnormal_frag},sprite:{uniforms:i([b.sprite,b.fog]),vertexShader:c.sprite_vert,fragmentShader:c.sprite_frag},background:{uniforms:{uvTransform:{value:new u},t2D:{value:null}},vertexShader:c.background_vert,fragmentShader:c.background_frag},cube:{uniforms:i([b.envmap,{opacity:{value:1}}]),vertexShader:c.cube_vert,fragmentShader:c.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:c.equirect_vert,fragmentShader:c.equirect_frag},distanceRGBA:{uniforms:i([b.common,b.displacementmap,{referencePosition:{value:new a},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:c.distanceRGBA_vert,fragmentShader:c.distanceRGBA_frag},shadow:{uniforms:i([b.lights,b.fog,{color:{value:new h(0)},opacity:{value:1}},]),vertexShader:c.shadow_vert,fragmentShader:c.shadow_frag}};function f0(b,c,d,e,a,f){let g=new h(0),i=!0===a?0:1,j,k,l=null,m=0,n=null;function o(a,b){d.buffers.color.setClear(a.r,a.g,a.b,b,f)}return{getClearColor:function(){return g},setClearColor:function(a,b=1){g.set(a),o(g,i=b)},getClearAlpha:function(){return i},setClearAlpha:function(a){o(g,i=a)},render:function(d,f){let h=!1,a=!0===f.isScene?f.background:null;a&&a.isTexture&&(a=c.get(a));let p=b.xr,q=p.getSession&&p.getSession();q&&"additive"===q.environmentBlendMode&&(a=null),null===a?o(g,i):a&&a.isColor&&(o(a,1),h=!0),(b.autoClear||h)&&b.clear(b.autoClearColor,b.autoClearDepth,b.autoClearStencil),a&&(a.isCubeTexture||a.mapping===av)?(void 0===k&&((k=new D(new $(1,1,1),new aV({name:"BackgroundCubeMaterial",uniforms:aU(aa.cube.uniforms),vertexShader:aa.cube.vertexShader,fragmentShader:aa.cube.fragmentShader,side:bH,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),k.geometry.deleteAttribute("uv"),k.onBeforeRender=function(b,c,a){this.matrixWorld.copyPosition(a.matrixWorld)},Object.defineProperty(k.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),e.update(k)),k.material.uniforms.envMap.value=a,k.material.uniforms.flipEnvMap.value=a.isCubeTexture&& !1===a.isRenderTargetTexture?-1:1,(l!==a||m!==a.version||n!==b.toneMapping)&&(k.material.needsUpdate=!0,l=a,m=a.version,n=b.toneMapping),k.layers.enableAll(),d.unshift(k,k.geometry,k.material,0,0,null)):a&&a.isTexture&&(void 0===j&&((j=new D(new _(2,2),new aV({name:"BackgroundMaterial",uniforms:aU(aa.background.uniforms),vertexShader:aa.background.vertexShader,fragmentShader:aa.background.fragmentShader,side:bG,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(j.material,"map",{get:function(){return this.uniforms.t2D.value}}),e.update(j)),j.material.uniforms.t2D.value=a,!0===a.matrixAutoUpdate&&a.updateMatrix(),j.material.uniforms.uvTransform.value.copy(a.matrix),(l!==a||m!==a.version||n!==b.toneMapping)&&(j.material.needsUpdate=!0,l=a,m=a.version,n=b.toneMapping),j.layers.enableAll(),d.unshift(j,j.geometry,j.material,0,0,null))}}}function f1(b,c,k,a){let l=b.getParameter(34921),d=a.isWebGL2?null:c.get("OES_vertex_array_object"),m=a.isWebGL2||null!==d,n={},e=s(null),o=e,p=!1;function q(c){return a.isWebGL2?b.bindVertexArray(c):d.bindVertexArrayOES(c)}function r(c){return a.isWebGL2?b.deleteVertexArray(c):d.deleteVertexArrayOES(c)}function s(e){let b=[],c=[],d=[];for(let a=0;a<l;a++)b[a]=0,c[a]=0,d[a]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:b,enabledAttributes:c,attributeDivisors:d,object:e,attributes:{},index:null}}function f(){let b=o.newAttributes;for(let a=0,c=b.length;a<c;a++)b[a]=0}function g(a){t(a,0)}function t(d,e){let h=o.newAttributes,f=o.enabledAttributes,g=o.attributeDivisors;if(h[d]=1,0===f[d]&&(b.enableVertexAttribArray(d),f[d]=1),g[d]!==e){let i=a.isWebGL2?b:c.get("ANGLE_instanced_arrays");i[a.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](d,e),g[d]=e}}function h(){let d=o.newAttributes,c=o.enabledAttributes;for(let a=0,e=c.length;a<e;a++)c[a]!==d[a]&&(b.disableVertexAttribArray(a),c[a]=0)}function u(d,e,c,h,f,g){!0===a.isWebGL2&&(5124===c||5125===c)?b.vertexAttribIPointer(d,e,c,f,g):b.vertexAttribPointer(d,e,c,h,f,g)}function i(){j(),p=!0,o!==e&&q((o=e).object)}function j(){e.geometry=null,e.program=null,e.wireframe=!1}return{setup:function(l,r,e,i,j){let v=!1;if(m){let w=function k(g,h,j){let i=!0===j.wireframe,c=n[g.id];void 0===c&&(c={},n[g.id]=c);let e=c[h.id];void 0===e&&(e={},c[h.id]=e);let f=e[i];return void 0===f&&(f=s(a.isWebGL2?b.createVertexArray():d.createVertexArrayOES()),e[i]=f),f}(i,e,r);o!==w&&q((o=w).object),(v=function m(c,g,h,i){let j=o.attributes,k=g.attributes,e=0,f=h.getAttributes();for(let b in f){let l=f[b];if(l.location>=0){let d=j[b],a=k[b];if(void 0===a&&("instanceMatrix"===b&&c.instanceMatrix&&(a=c.instanceMatrix),"instanceColor"===b&&c.instanceColor&&(a=c.instanceColor)),void 0===d||d.attribute!==a||a&&d.data!==a.data)return!0;e++}}return o.attributesNum!==e||o.index!==i}(l,i,e,j))&&function m(c,h,i,j){let e={},k=h.attributes,f=0,g=i.getAttributes();for(let b in g){let l=g[b];if(l.location>=0){let a=k[b];void 0===a&&("instanceMatrix"===b&&c.instanceMatrix&&(a=c.instanceMatrix),"instanceColor"===b&&c.instanceColor&&(a=c.instanceColor));let d={};d.attribute=a,a&&a.data&&(d.data=a.data),e[b]=d,f++}}o.attributes=e,o.attributesNum=f,o.index=j}(l,i,e,j)}else{let x=!0===r.wireframe;(o.geometry!==i.id||o.program!==e.id||o.wireframe!==x)&&(o.geometry=i.id,o.program=e.id,o.wireframe=x,v=!0)}null!==j&&k.update(j,34963),(v||p)&&(p=!1,function J(i,E,F,j){if(!1===a.isWebGL2&&(i.isInstancedMesh||j.isInstancedBufferGeometry)&&null===c.get("ANGLE_instanced_arrays"))return;f();let G=j.attributes,z=F.getAttributes(),A=E.defaultAttributeValues;for(let m in z){let d=z[m];if(d.location>=0){let e=G[m];if(void 0===e&&("instanceMatrix"===m&&i.instanceMatrix&&(e=i.instanceMatrix),"instanceColor"===m&&i.instanceColor&&(e=i.instanceColor)),void 0!==e){let B=e.normalized,n=e.itemSize,p=k.get(e);if(void 0===p)continue;let C=p.buffer,D=p.type,q=p.bytesPerElement;if(e.isInterleavedBufferAttribute){let o=e.data,H=o.stride,I=e.offset;if(o.isInstancedInterleavedBuffer){for(let v=0;v<d.locationSize;v++)t(d.location+v,o.meshPerAttribute);!0!==i.isInstancedMesh&& void 0===j._maxInstanceCount&&(j._maxInstanceCount=o.meshPerAttribute*o.count)}else for(let w=0;w<d.locationSize;w++)g(d.location+w);b.bindBuffer(34962,C);for(let r=0;r<d.locationSize;r++)u(d.location+r,n/d.locationSize,D,B,H*q,(I+n/d.locationSize*r)*q)}else{if(e.isInstancedBufferAttribute){for(let x=0;x<d.locationSize;x++)t(d.location+x,e.meshPerAttribute);!0!==i.isInstancedMesh&& void 0===j._maxInstanceCount&&(j._maxInstanceCount=e.meshPerAttribute*e.count)}else for(let y=0;y<d.locationSize;y++)g(d.location+y);b.bindBuffer(34962,C);for(let s=0;s<d.locationSize;s++)u(d.location+s,n/d.locationSize,D,B,n*q,n/d.locationSize*s*q)}}else if(void 0!==A){let l=A[m];if(void 0!==l)switch(l.length){case 2:b.vertexAttrib2fv(d.location,l);break;case 3:b.vertexAttrib3fv(d.location,l);break;case 4:b.vertexAttrib4fv(d.location,l);break;default:b.vertexAttrib1fv(d.location,l)}}}}h()}(l,r,e,i),null!==j&&b.bindBuffer(34963,k.get(j).buffer))},reset:i,resetDefaultState:j,dispose:function(){for(let c in i(),n){let a=n[c];for(let d in a){let b=a[d];for(let e in b)r(b[e].object),delete b[e];delete a[d]}delete n[c]}},releaseStatesOfGeometry:function(a){if(void 0===n[a.id])return;let b=n[a.id];for(let d in b){let c=b[d];for(let e in c)r(c[e].object),delete c[e];delete b[d]}delete n[a.id]},releaseStatesOfProgram:function(a){for(let e in n){let b=n[e];if(void 0===b[a.id])continue;let c=b[a.id];for(let d in c)r(c[d].object),delete c[d];delete b[a.id]}},initAttributes:f,enableAttribute:g,disableUnusedAttributes:h}}function f2(c,d,e,a){let f=a.isWebGL2,g;function b(a){g=a}this.setMode=b,this.render=function(b,a){c.drawArrays(g,b,a),e.update(a,g,1)},this.renderInstances=function(j,i,b){if(0===b)return;let a,h;if(f)a=c,h="drawArraysInstanced";else if(a=d.get("ANGLE_instanced_arrays"),h="drawArraysInstancedANGLE",null===a){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}a[h](g,j,i,b),e.update(i,g,b)}}function f3(a,f,d){let u;function g(b){if("highp"===b){if(a.getShaderPrecisionFormat(35633,36338).precision>0&&a.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";b="mediump"}return"mediump"===b&&a.getShaderPrecisionFormat(35633,36337).precision>0&&a.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}let c="undefined"!=typeof WebGL2RenderingContext&&a instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&a instanceof WebGL2ComputeRenderingContext,b=void 0!==d.precision?d.precision:"highp",e=g(b);e!==b&&(console.warn("THREE.WebGLRenderer:",b,"not supported, using",e,"instead."),b=e);let k=c||f.has("WEBGL_draw_buffers"),l=!0===d.logarithmicDepthBuffer,m=a.getParameter(34930),h=a.getParameter(35660),n=a.getParameter(3379),o=a.getParameter(34076),p=a.getParameter(34921),q=a.getParameter(36347),r=a.getParameter(36348),s=a.getParameter(36349),i=h>0,j=c||f.has("OES_texture_float"),t=c?a.getParameter(36183):0;return{isWebGL2:c,drawBuffers:k,getMaxAnisotropy:function(){if(void 0!==u)return u;if(!0===f.has("EXT_texture_filter_anisotropic")){let b=f.get("EXT_texture_filter_anisotropic");u=a.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else u=0;return u},getMaxPrecision:g,precision:b,logarithmicDepthBuffer:l,maxTextures:m,maxVertexTextures:h,maxTextureSize:n,maxCubemapSize:o,maxAttributes:p,maxVertexUniforms:q,maxVaryings:r,maxFragmentUniforms:s,vertexTextures:i,floatFragmentTextures:j,floatVertexTextures:i&&j,maxSamples:t}}function f4(b){let c=this,d=null,e=0,f=!1,g=!1,h=new fW,i=new u,a={value:null,needsUpdate:!1};function j(){a.value!==d&&(a.value=d,a.needsUpdate=e>0),c.numPlanes=e,c.numIntersection=0}function k(e,m,j,n){let d=null!==e?e.length:0,b=null;if(0!==d){if(b=a.value,!0!==n||null===b){let k=j+4*d,l=m.matrixWorldInverse;i.getNormalMatrix(l),(null===b||b.length<k)&&(b=new Float32Array(k));for(let f=0,g=j;f!==d;++f,g+=4)h.copy(e[f]).applyMatrix4(l,i),h.normal.toArray(b,g),b[g+3]=h.constant}a.value=b,a.needsUpdate=!0}return c.numPlanes=d,c.numIntersection=0,b}this.uniform=a,this.numPlanes=0,this.numIntersection=0,this.init=function(a,b,c){let g=0!==a.length||b||0!==e||f;return f=b,d=k(a,c,0),e=a.length,g},this.beginShadows=function(){g=!0,k(null)},this.endShadows=function(){g=!1,j()},this.setState=function(c,p,q){let l=c.clippingPlanes,r=c.clipIntersection,s=c.clipShadows,m=b.get(c);if(f&&null!==l&&0!==l.length&&(!g||s)){let n=g?0:e,o=4*n,h=m.clippingState||null;a.value=h,h=k(l,p,o,q);for(let i=0;i!==o;++i)h[i]=d[i];m.clippingState=h,this.numIntersection=r?this.numPlanes:0,this.numPlanes+=n}else g?k(null):j()}}function f5(a){let b=new WeakMap;function c(a,b){return b===at?a.mapping=ar:b===au&&(a.mapping=as),a}function d(e){let a=e.target;a.removeEventListener("dispose",d);let c=b.get(a);void 0!==c&&(b.delete(a),c.dispose())}return{get:function(e){if(e&&e.isTexture&& !1===e.isRenderTargetTexture){let h=e.mapping;if(h===at||h===au){if(b.has(e)){let i=b.get(e).texture;return c(i,e.mapping)}{let f=e.image;if(!f||!(f.height>0))return null;{let g=new fS(f.height/2);return g.fromEquirectangularTexture(a,e),b.set(e,g),e.addEventListener("dispose",d),c(g.texture,e.mapping)}}}}return e},dispose:function(){b=new WeakMap}}}aa.physical={uniforms:i([aa.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new j(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new h(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new j},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new h(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new h(1,1,1)},specularColorMap:{value:null}}]),vertexShader:c.meshphysical_vert,fragmentShader:c.meshphysical_frag};class aY extends H{constructor(a=-1,b=1,c=1,d=-1,e=.1,f=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=a,this.right=b,this.top=c,this.bottom=d,this.near=e,this.far=f,this.updateProjectionMatrix()}copy(a,b){return super.copy(a,b),this.left=a.left,this.right=a.right,this.top=a.top,this.bottom=a.bottom,this.near=a.near,this.far=a.far,this.zoom=a.zoom,this.view=null===a.view?null:Object.assign({},a.view),this}setViewOffset(a,b,c,d,e,f){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=a,this.view.fullHeight=b,this.view.offsetX=c,this.view.offsetY=d,this.view.width=e,this.view.height=f,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let c=(this.right-this.left)/(2*this.zoom),d=(this.top-this.bottom)/(2*this.zoom),e=(this.right+this.left)/2,f=(this.top+this.bottom)/2,a=e-c,g=e+c,b=f+d,h=f-d;if(null!==this.view&&this.view.enabled){let i=(this.right-this.left)/this.view.fullWidth/this.zoom,j=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a+=i*this.view.offsetX,g=a+i*this.view.width,b-=j*this.view.offsetY,h=b-j*this.view.height}this.projectionMatrix.makeOrthographic(a,g,b,h,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(b){let a=super.toJSON(b);return a.object.zoom=this.zoom,a.object.left=this.left,a.object.right=this.right,a.object.top=this.top,a.object.bottom=this.bottom,a.object.near=this.near,a.object.far=this.far,null!==this.view&&(a.object.view=Object.assign({},this.view)),a}}let f6=[.125,.215,.35,.446,.526,.582],f7=new aY,f8=new h,f9=null,r=(1+Math.sqrt(5))/2,w=1/r,ga=[new a(1,1,1),new a(-1,1,1),new a(1,1,-1),new a(-1,1,-1),new a(0,r,w),new a(0,r,-w),new a(w,0,r),new a(-w,0,r),new a(r,w,0),new a(-r,w,0)];class gb{constructor(a){this._renderer=a,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(c,b=0,d=.1,e=100){f9=this._renderer.getRenderTarget(),this._setSize(256);let a=this._allocateTargets();return a.depthBuffer=!0,this._sceneToCubeUV(c,d,e,a),b>0&&this._blur(a,0,0,b),this._applyPMREM(a),this._cleanup(a),a}fromEquirectangular(a,b=null){return this._fromTexture(a,b)}fromCubemap(a,b=null){return this._fromTexture(a,b)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=gh(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=gg(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(a){this._lodMax=Math.floor(Math.log2(a)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let a=0;a<this._lodPlanes.length;a++)this._lodPlanes[a].dispose()}_cleanup(a){this._renderer.setRenderTarget(f9),a.scissorTest=!1,ge(a,0,0,a.width,a.height)}_fromTexture(a,c){a.mapping===ar||a.mapping===as?this._setSize(0===a.image.length?16:a.image[0].width||a.image[0].image.width):this._setSize(a.image.width/4),f9=this._renderer.getRenderTarget();let b=c||this._allocateTargets();return this._textureToCubeUV(a,b),this._applyPMREM(b),this._cleanup(b),b}_allocateTargets(){let a=3*Math.max(this._cubeSize,112),b=4*this._cubeSize,c={magFilter:aC,minFilter:aC,generateMipmaps:!1,type:cx,format:cD,encoding:dn,depthBuffer:!1},e=gd(a,b,c);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==a){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=gd(a,b,c);let{_lodMax:d}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=gc(d)),this._blurMaterial=gf(d,a,b)}return e}_compileMaterial(a){let b=new D(this._lodPlanes[0],a);this._renderer.compile(b,f7)}_sceneToCubeUV(d,n,o,m){let c=new aW(90,1,n,o),g=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],a=this._renderer,p=a.autoClear,q=a.toneMapping;a.getClearColor(f8),a.toneMapping=cg,a.autoClear=!1;let i=new fe({name:"PMREM.Background",side:bH,depthWrite:!1,depthTest:!1}),j=new D(new $,i),k=!1,e=d.background;e?e.isColor&&(i.color.copy(e),d.background=null,k=!0):(i.color.copy(f8),k=!0);for(let b=0;b<6;b++){let l=b%3;0===l?(c.up.set(0,g[b],0),c.lookAt(h[b],0,0)):1===l?(c.up.set(0,0,g[b]),c.lookAt(0,h[b],0)):(c.up.set(0,g[b],0),c.lookAt(0,0,h[b]));let f=this._cubeSize;ge(m,l*f,b>2?f:0,f,f),a.setRenderTarget(m),k&&a.render(j,c),a.render(d,c)}j.geometry.dispose(),j.material.dispose(),a.toneMapping=q,a.autoClear=p,d.background=e}_textureToCubeUV(a,b){let c=this._renderer,d=a.mapping===ar||a.mapping===as;d?(null===this._cubemapMaterial&&(this._cubemapMaterial=gh()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===a.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=gg());let e=d?this._cubemapMaterial:this._equirectMaterial,g=new D(this._lodPlanes[0],e),h=e.uniforms;h.envMap.value=a;let f=this._cubeSize;ge(b,0,0,3*f,2*f),c.setRenderTarget(b),c.render(g,f7)}_applyPMREM(c){let b=this._renderer,d=b.autoClear;b.autoClear=!1;for(let a=1;a<this._lodPlanes.length;a++){let e=Math.sqrt(this._sigmas[a]*this._sigmas[a]-this._sigmas[a-1]*this._sigmas[a-1]),f=ga[(a-1)%ga.length];this._blur(c,a-1,a,e,f)}b.autoClear=d}_blur(b,f,a,c,d){let e=this._pingPongRenderTarget;this._halfBlur(b,e,f,a,c,"latitudinal",d),this._halfBlur(e,b,a,a,c,"longitudinal",d)}_halfBlur(u,m,n,d,e,i,o){let p=this._renderer,q=this._blurMaterial;"latitudinal"!==i&&"longitudinal"!==i&&console.error("blur direction must be either latitudinal or longitudinal!");let v=new D(this._lodPlanes[d],q),a=q.uniforms,w=this._sizeLods[n]-1,r=isFinite(e)?Math.PI/(2*w):2*Math.PI/39,s=e/r,f=isFinite(e)?1+Math.floor(3*s):20;f>20&&console.warn(`sigmaRadians, ${e}, is too large and will clip, as it requested ${f} samples when the maximum is set to 20`);let b=[],j=0;for(let c=0;c<20;++c){let t=c/s,k=Math.exp(-t*t/2);b.push(k),0===c?j+=k:c<f&&(j+=2*k)}for(let g=0;g<b.length;g++)b[g]=b[g]/j;a.envMap.value=u.texture,a.samples.value=f,a.weights.value=b,a.latitudinal.value="latitudinal"===i,o&&(a.poleAxis.value=o);let{_lodMax:l}=this;a.dTheta.value=r,a.mipInt.value=l-n;let h=this._sizeLods[d],x=4*(this._cubeSize-h);ge(m,3*h*(d>l-4?d-l+4:0),x,3*h,2*h),p.setRenderTarget(m),p.render(v,f7)}}function gc(i){let s=[],t=[],u=[],l=i,z=i-4+1+f6.length;for(let h=0;h<z;h++){let m=Math.pow(2,l);t.push(m);let o=1/m;h>i-4?o=f6[h-i+4-1]:0===h&&(o=0),u.push(o);let v=1/(m-2),b=-v,c=1+v,A=[b,b,c,b,c,c,b,b,c,c,b,c],j=6,d=6,p=3,q=2,r=1,w=new Float32Array(p*d*j),x=new Float32Array(q*d*j),y=new Float32Array(r*d*j);for(let a=0;a<j;a++){let e=a%3*2/3-1,f=a>2?0:-1,B=[e,f,0,e+2/3,f,0,e+2/3,f+1,0,e,f,0,e+2/3,f+1,0,e,f+1,0];w.set(B,p*d*a),x.set(A,q*d*a);let C=[a,a,a,a,a,a];y.set(C,r*d*a)}let k=new g;k.setAttribute("position",new n(w,p)),k.setAttribute("uv",new n(x,q)),k.setAttribute("faceIndex",new n(y,r)),s.push(k),l>4&&l--}return{lodPlanes:s,sizeLods:t,sigmas:u}}function gd(b,c,d){let a=new y(b,c,d);return a.texture.mapping=av,a.texture.name="PMREM.cubeUv",a.scissorTest=!0,a}function ge(a,b,c,d,e){a.viewport.set(b,c,d,e),a.scissor.set(b,c,d,e)}function gf(b,c,d){let e=new Float32Array(20),f=new a(0,1,0),g=new aV({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/c,CUBEUV_TEXEL_HEIGHT:1/d,CUBEUV_MAX_MIP:`${b}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:f}},vertexShader:gi(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:bL,depthTest:!1,depthWrite:!1});return g}function gg(){return new aV({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:gi(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:bL,depthTest:!1,depthWrite:!1})}function gh(){return new aV({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:gi(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:bL,depthTest:!1,depthWrite:!1})}function gi(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function gj(a){let b=new WeakMap,c=null;function d(e){let a=e.target;a.removeEventListener("dispose",d);let c=b.get(a);void 0!==c&&(b.delete(a),c.dispose())}return{get:function(e){if(e&&e.isTexture){let g=e.mapping,h=g===at||g===au,j=g===ar||g===as;if(h||j){if(e.isRenderTargetTexture&& !0===e.needsPMREMUpdate){e.needsPMREMUpdate=!1;let f=b.get(e);return null===c&&(c=new gb(a)),f=h?c.fromEquirectangular(e,f):c.fromCubemap(e,f),b.set(e,f),f.texture}if(b.has(e))return b.get(e).texture;{let i=e.image;if(!(h&&i&&i.height>0||j&&i&&function d(c){let b=0;for(let a=0;a<6;a++)void 0!==c[a]&&b++;return 6===b}(i)))return null;{null===c&&(c=new gb(a));let k=h?c.fromEquirectangular(e):c.fromCubemap(e);return b.set(e,k),e.addEventListener("dispose",d),k.texture}}}}return e},dispose:function(){b=new WeakMap,null!==c&&(c.dispose(),c=null)}}}function gk(a){let b={};function c(d){if(void 0!==b[d])return b[d];let c;switch(d){case"WEBGL_depth_texture":c=a.getExtension("WEBGL_depth_texture")||a.getExtension("MOZ_WEBGL_depth_texture")||a.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":c=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":c=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":c=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:c=a.getExtension(d)}return b[d]=c,c}return{has:function(a){return null!==c(a)},init:function(a){a.isWebGL2?c("EXT_color_buffer_float"):(c("WEBGL_depth_texture"),c("OES_texture_float"),c("OES_texture_half_float"),c("OES_texture_half_float_linear"),c("OES_standard_derivatives"),c("OES_element_index_uint"),c("OES_vertex_array_object"),c("ANGLE_instanced_arrays")),c("OES_texture_float_linear"),c("EXT_color_buffer_half_float"),c("WEBGL_multisampled_render_to_texture")},get:function(a){let b=c(a);return null===b&&console.warn("THREE.WebGLRenderer: "+a+" extension not supported."),b}}}function gl(a,b,c,d){let e={},f=new WeakMap;function g(i){let a=i.target;for(let j in null!==a.index&&b.remove(a.index),a.attributes)b.remove(a.attributes[j]);a.removeEventListener("dispose",g),delete e[a.id];let h=f.get(a);h&&(b.remove(h),f.delete(a)),d.releaseStatesOfGeometry(a),!0===a.isInstancedBufferGeometry&&delete a._maxInstanceCount,c.memory.geometries--}function h(d){let e=[],h=d.index,j=d.attributes.position,i=0;if(null!==h){let g=h.array;i=h.version;for(let a=0,s=g.length;a<s;a+=3){let k=g[a+0],l=g[a+1],m=g[a+2];e.push(k,l,l,m,m,k)}}else{let t=j.array;i=j.version;for(let c=0,u=t.length/3-1;c<u;c+=3){let n=c+0,o=c+1,p=c+2;e.push(n,o,o,p,p,n)}}let q=new(d$(e)?fn:fl)(e,1);q.version=i;let r=f.get(d);r&&b.remove(r),f.set(d,q)}return{get:function(b,a){return!0===e[a.id]||(a.addEventListener("dispose",g),e[a.id]=!0,c.memory.geometries++),a},update:function(c){let d=c.attributes;for(let g in d)b.update(d[g],34962);let e=c.morphAttributes;for(let h in e){let f=e[h];for(let a=0,i=f.length;a<i;a++)b.update(f[a],34962)}},getWireframeAttribute:function(a){let b=f.get(a);if(b){let c=a.index;null!==c&&b.version<c.version&&h(a)}else h(a);return f.get(a)}}}function gm(c,d,e,a){let f=a.isWebGL2,g;function b(a){g=a}let h,i;this.setMode=b,this.setIndex=function(a){h=a.type,i=a.bytesPerElement},this.render=function(b,a){c.drawElements(g,a,h,b*i),e.update(a,g,1)},this.renderInstances=function(l,k,b){if(0===b)return;let a,j;if(f)a=c,j="drawElementsInstanced";else if(a=d.get("ANGLE_instanced_arrays"),j="drawElementsInstancedANGLE",null===a){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}a[j](g,k,h,l*i,b),e.update(k,g,b)}}function gn(b){let a={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:a,programs:null,autoReset:!0,reset:function(){a.frame++,a.calls=0,a.triangles=0,a.points=0,a.lines=0},update:function(b,d,c){switch(a.calls++,d){case 4:a.triangles+=c*(b/3);break;case 1:a.lines+=c*(b/2);break;case 3:a.lines+=c*(b-1);break;case 2:a.lines+=c*b;break;case 0:a.points+=c*b;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",d)}}}}function go(a,b){return a[0]-b[0]}function gp(a,b){return Math.abs(b[1])-Math.abs(a[1])}function gq(d,c){let a=1,b=c.isInterleavedBufferAttribute?c.data.array:c.array;b instanceof Int8Array?a=127:b instanceof Uint8Array?a=255:b instanceof Uint16Array?a=65535:b instanceof Int16Array?a=32767:b instanceof Int32Array?a=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",b),d.divideScalar(a)}function gr(c,d,e){let f={},g=new Float32Array(8),h=new WeakMap,i=new W,b=[];for(let a=0;a<8;a++)b[a]=[a,0];return{update:function(T,a,aa,s){let t=T.morphTargetInfluences;if(!0===d.isWebGL2){let L=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,w=void 0!==L?L.length:0,q=h.get(a);if(void 0===q||q.count!==w){void 0!==q&&q.texture.dispose();let M=void 0!==a.morphAttributes.position,N=void 0!==a.morphAttributes.normal,O=void 0!==a.morphAttributes.color,U=a.morphAttributes.position||[],V=a.morphAttributes.normal||[],W=a.morphAttributes.color||[],x=0;!0===M&&(x=1),!0===N&&(x=2),!0===O&&(x=3);let r=a.attributes.position.count*x,y=1;r>d.maxTextureSize&&(y=Math.ceil(r/d.maxTextureSize),r=d.maxTextureSize);let k=new Float32Array(r*y*4*w),H=new X(k,r,y,w);H.type=cw,H.needsUpdate=!0;let Y=4*x;for(let u=0;u<w;u++){let B=U[u],I=V[u],C=W[u],m=r*y*4*u;for(let v=0;v<B.count;v++){let n=v*Y;!0===M&&(i.fromBufferAttribute(B,v),!0===B.normalized&&gq(i,B),k[m+n+0]=i.x,k[m+n+1]=i.y,k[m+n+2]=i.z,k[m+n+3]=0),!0===N&&(i.fromBufferAttribute(I,v),!0===I.normalized&&gq(i,I),k[m+n+4]=i.x,k[m+n+5]=i.y,k[m+n+6]=i.z,k[m+n+7]=0),!0===O&&(i.fromBufferAttribute(C,v),!0===C.normalized&&gq(i,C),k[m+n+8]=i.x,k[m+n+9]=i.y,k[m+n+10]=i.z,k[m+n+11]=4===C.itemSize?i.w:1)}}function Z(){H.dispose(),h.delete(a),a.removeEventListener("dispose",Z)}q={count:w,texture:H,size:new j(r,y)},h.set(a,q),a.addEventListener("dispose",Z)}let P=0;for(let J=0;J<t.length;J++)P+=t[J];let $=a.morphTargetsRelative?1:1-P;s.getUniforms().setValue(c,"morphTargetBaseInfluence",$),s.getUniforms().setValue(c,"morphTargetInfluences",t),s.getUniforms().setValue(c,"morphTargetsTexture",q.texture,e),s.getUniforms().setValue(c,"morphTargetsTextureSize",q.size)}else{let D=void 0===t?0:t.length,o=f[a.id];if(void 0===o||o.length!==D){o=[];for(let E=0;E<D;E++)o[E]=[E,0];f[a.id]=o}for(let z=0;z<D;z++){let Q=o[z];Q[0]=z,Q[1]=t[z]}o.sort(gp);for(let p=0;p<8;p++)p<D&&o[p][1]?(b[p][0]=o[p][0],b[p][1]=o[p][1]):(b[p][0]=Number.MAX_SAFE_INTEGER,b[p][1]=0);b.sort(go);let F=a.morphAttributes.position,G=a.morphAttributes.normal,R=0;for(let l=0;l<8;l++){let S=b[l],A=S[0],K=S[1];A!==Number.MAX_SAFE_INTEGER&&K?(F&&a.getAttribute("morphTarget"+l)!==F[A]&&a.setAttribute("morphTarget"+l,F[A]),G&&a.getAttribute("morphNormal"+l)!==G[A]&&a.setAttribute("morphNormal"+l,G[A]),g[l]=K,R+=K):(F&& !0===a.hasAttribute("morphTarget"+l)&&a.deleteAttribute("morphTarget"+l),G&& !0===a.hasAttribute("morphNormal"+l)&&a.deleteAttribute("morphNormal"+l),g[l]=0)}let _=a.morphTargetsRelative?1:1-R;s.getUniforms().setValue(c,"morphTargetBaseInfluence",_),s.getUniforms().setValue(c,"morphTargetInfluences",g)}}}}function gs(a,b,c,d){let e=new WeakMap;function f(b){let a=b.target;a.removeEventListener("dispose",f),c.remove(a.instanceMatrix),null!==a.instanceColor&&c.remove(a.instanceColor)}return{update:function(a){let h=d.render.frame,i=a.geometry,g=b.get(a,i);return e.get(g)!==h&&(b.update(g),e.set(g,h)),a.isInstancedMesh&&(!1===a.hasEventListener("dispose",f)&&a.addEventListener("dispose",f),c.update(a.instanceMatrix,34962),null!==a.instanceColor&&c.update(a.instanceColor,34962)),g},dispose:function(){e=new WeakMap}}}let gt=new l,gu=new X,gv=new Y,gw=new aX,gx=[],gy=[],gz=new Float32Array(16),gA=new Float32Array(9),gB=new Float32Array(4);function gC(b,c,g){let d=b[0];if(d<=0||d>0)return b;let e=c*g,a=gx[e];if(void 0===a&&(a=new Float32Array(e),gx[e]=a),0!==c){d.toArray(a,0);for(let f=1,h=0;f!==c;++f)h+=g,b[f].toArray(a,h)}return a}function gD(b,c){if(b.length!==c.length)return!1;for(let a=0,d=b.length;a<d;a++)if(b[a]!==c[a])return!1;return!0}function gE(c,b){for(let a=0,d=b.length;a<d;a++)c[a]=b[a]}function gF(d,b){let a=gy[b];void 0===a&&(a=new Int32Array(b),gy[b]=a);for(let c=0;c!==b;++c)a[c]=d.allocateTextureUnit();return a}function gG(c,a){let b=this.cache;b[0]!==a&&(c.uniform1f(this.addr,a),b[0]=a)}function gH(c,a){let b=this.cache;if(void 0!==a.x)(b[0]!==a.x||b[1]!==a.y)&&(c.uniform2f(this.addr,a.x,a.y),b[0]=a.x,b[1]=a.y);else{if(gD(b,a))return;c.uniform2fv(this.addr,a),gE(b,a)}}function gI(c,a){let b=this.cache;if(void 0!==a.x)(b[0]!==a.x||b[1]!==a.y||b[2]!==a.z)&&(c.uniform3f(this.addr,a.x,a.y,a.z),b[0]=a.x,b[1]=a.y,b[2]=a.z);else if(void 0!==a.r)(b[0]!==a.r||b[1]!==a.g||b[2]!==a.b)&&(c.uniform3f(this.addr,a.r,a.g,a.b),b[0]=a.r,b[1]=a.g,b[2]=a.b);else{if(gD(b,a))return;c.uniform3fv(this.addr,a),gE(b,a)}}function gJ(c,a){let b=this.cache;if(void 0!==a.x)(b[0]!==a.x||b[1]!==a.y||b[2]!==a.z||b[3]!==a.w)&&(c.uniform4f(this.addr,a.x,a.y,a.z,a.w),b[0]=a.x,b[1]=a.y,b[2]=a.z,b[3]=a.w);else{if(gD(b,a))return;c.uniform4fv(this.addr,a),gE(b,a)}}function gK(d,a){let b=this.cache,c=a.elements;if(void 0===c){if(gD(b,a))return;d.uniformMatrix2fv(this.addr,!1,a),gE(b,a)}else{if(gD(b,c))return;gB.set(c),d.uniformMatrix2fv(this.addr,!1,gB),gE(b,c)}}function gL(d,a){let b=this.cache,c=a.elements;if(void 0===c){if(gD(b,a))return;d.uniformMatrix3fv(this.addr,!1,a),gE(b,a)}else{if(gD(b,c))return;gA.set(c),d.uniformMatrix3fv(this.addr,!1,gA),gE(b,c)}}function gM(d,a){let b=this.cache,c=a.elements;if(void 0===c){if(gD(b,a))return;d.uniformMatrix4fv(this.addr,!1,a),gE(b,a)}else{if(gD(b,c))return;gz.set(c),d.uniformMatrix4fv(this.addr,!1,gz),gE(b,c)}}function gN(c,a){let b=this.cache;b[0]!==a&&(c.uniform1i(this.addr,a),b[0]=a)}function gO(c,a){let b=this.cache;gD(b,a)||(c.uniform2iv(this.addr,a),gE(b,a))}function gP(c,a){let b=this.cache;gD(b,a)||(c.uniform3iv(this.addr,a),gE(b,a))}function gQ(c,a){let b=this.cache;gD(b,a)||(c.uniform4iv(this.addr,a),gE(b,a))}function gR(c,a){let b=this.cache;b[0]!==a&&(c.uniform1ui(this.addr,a),b[0]=a)}function gS(c,a){let b=this.cache;gD(b,a)||(c.uniform2uiv(this.addr,a),gE(b,a))}function gT(c,a){let b=this.cache;gD(b,a)||(c.uniform3uiv(this.addr,a),gE(b,a))}function gU(c,a){let b=this.cache;gD(b,a)||(c.uniform4uiv(this.addr,a),gE(b,a))}function gV(d,e,b){let c=this.cache,a=b.allocateTextureUnit();c[0]!==a&&(d.uniform1i(this.addr,a),c[0]=a),b.setTexture2D(e||gt,a)}function gW(d,e,b){let c=this.cache,a=b.allocateTextureUnit();c[0]!==a&&(d.uniform1i(this.addr,a),c[0]=a),b.setTexture3D(e||gv,a)}function gX(d,e,b){let c=this.cache,a=b.allocateTextureUnit();c[0]!==a&&(d.uniform1i(this.addr,a),c[0]=a),b.setTextureCube(e||gw,a)}function gY(d,e,b){let c=this.cache,a=b.allocateTextureUnit();c[0]!==a&&(d.uniform1i(this.addr,a),c[0]=a),b.setTexture2DArray(e||gu,a)}function gZ(a,b){a.uniform1fv(this.addr,b)}function g$(a,b){let c=gC(b,this.size,2);a.uniform2fv(this.addr,c)}function g_(a,b){let c=gC(b,this.size,3);a.uniform3fv(this.addr,c)}function g0(a,b){let c=gC(b,this.size,4);a.uniform4fv(this.addr,c)}function g1(a,b){let c=gC(b,this.size,4);a.uniformMatrix2fv(this.addr,!1,c)}function g2(a,b){let c=gC(b,this.size,9);a.uniformMatrix3fv(this.addr,!1,c)}function g3(a,b){let c=gC(b,this.size,16);a.uniformMatrix4fv(this.addr,!1,c)}function g4(a,b){a.uniform1iv(this.addr,b)}function g5(a,b){a.uniform2iv(this.addr,b)}function g6(a,b){a.uniform3iv(this.addr,b)}function g7(a,b){a.uniform4iv(this.addr,b)}function g8(a,b){a.uniform1uiv(this.addr,b)}function g9(a,b){a.uniform2uiv(this.addr,b)}function ha(a,b){a.uniform3uiv(this.addr,b)}function hb(a,b){a.uniform4uiv(this.addr,b)}function hc(f,b,c){let d=b.length,e=gF(c,d);f.uniform1iv(this.addr,e);for(let a=0;a!==d;++a)c.setTexture2D(b[a]||gt,e[a])}function hd(f,b,c){let d=b.length,e=gF(c,d);f.uniform1iv(this.addr,e);for(let a=0;a!==d;++a)c.setTexture3D(b[a]||gv,e[a])}function he(f,b,c){let d=b.length,e=gF(c,d);f.uniform1iv(this.addr,e);for(let a=0;a!==d;++a)c.setTextureCube(b[a]||gw,e[a])}function hf(f,b,c){let d=b.length,e=gF(c,d);f.uniform1iv(this.addr,e);for(let a=0;a!==d;++a)c.setTexture2DArray(b[a]||gu,e[a])}class hg{constructor(a,b,c){this.id=a,this.addr=c,this.cache=[],this.setValue=function(a){switch(a){case 5126:return gG;case 35664:return gH;case 35665:return gI;case 35666:return gJ;case 35674:return gK;case 35675:return gL;case 35676:return gM;case 5124:case 35670:return gN;case 35667:case 35671:return gO;case 35668:case 35672:return gP;case 35669:case 35673:return gQ;case 5125:return gR;case 36294:return gS;case 36295:return gT;case 36296:return gU;case 35678:case 36198:case 36298:case 36306:case 35682:return gV;case 35679:case 36299:case 36307:return gW;case 35680:case 36300:case 36308:case 36293:return gX;case 36289:case 36303:case 36311:case 36292:return gY}}(b.type)}}class hh{constructor(b,a,c){this.id=b,this.addr=c,this.cache=[],this.size=a.size,this.setValue=function(a){switch(a){case 5126:return gZ;case 35664:return g$;case 35665:return g_;case 35666:return g0;case 35674:return g1;case 35675:return g2;case 35676:return g3;case 5124:case 35670:return g4;case 35667:case 35671:return g5;case 35668:case 35672:return g6;case 35669:case 35673:return g7;case 5125:return g8;case 36294:return g9;case 36295:return ha;case 36296:return hb;case 35678:case 36198:case 36298:case 36306:case 35682:return hc;case 35679:case 36299:case 36307:return hd;case 35680:case 36300:case 36308:case 36293:return he;case 36289:case 36303:case 36311:case 36292:return hf}}(a.type)}}class hi{constructor(a){this.id=a,this.seq=[],this.map={}}setValue(d,e,f){let b=this.seq;for(let a=0,g=b.length;a!==g;++a){let c=b[a];c.setValue(d,e[c.id],f)}}}let hj=/(\w+)(\])?(\[|\.)?/g;function hk(b,a){b.seq.push(a),b.map[a.id]=a}function hl(d,g,b){let h=d.name,i=h.length;for(hj.lastIndex=0;;){let e=hj.exec(h),j=hj.lastIndex,a=e[1],k="]"===e[2],f=e[3];if(k&&(a|=0),void 0===f||"["===f&&j+2===i){hk(b,void 0===f?new hg(a,d,g):new hh(a,d,g));break}{let l=b.map,c=l[a];void 0===c&&(c=new hi(a),hk(b,c)),b=c}}}class hm{constructor(a,b){this.seq=[],this.map={};let e=a.getProgramParameter(b,35718);for(let c=0;c<e;++c){let d=a.getActiveUniform(b,c),f=a.getUniformLocation(b,d.name);hl(d,f,this)}}setValue(b,c,d,e){let a=this.map[c];void 0!==a&&a.setValue(b,d,e)}setOptional(c,d,a){let b=d[a];void 0!==b&&this.setValue(c,a,b)}static upload(e,b,f,g){for(let a=0,h=b.length;a!==h;++a){let c=b[a],d=f[c.id];!1!==d.needsUpdate&&c.setValue(e,d.value,g)}}static seqWithValue(b,e){let c=[];for(let a=0,f=b.length;a!==f;++a){let d=b[a];d.id in e&&c.push(d)}return c}}function hn(a,c,d){let b=a.createShader(c);return a.shaderSource(b,d),a.compileShader(b),b}let ho=0;function hp(b,c,e){let f=b.getShaderParameter(c,35713),a=b.getShaderInfoLog(c).trim();if(f&&""===a)return"";let d=/ERROR: 0:(\d+)/.exec(a);if(!d)return a;{let g=parseInt(d[1]);return e.toUpperCase()+"\n\n"+a+"\n\n"+function(f,b){let c=f.split("\n"),d=[],g=Math.max(b-6,0),h=Math.min(b+6,c.length);for(let a=g;a<h;a++){let e=a+1;d.push(`${e===b?">":" "} ${e}: ${c[a]}`)}return d.join("\n")}(b.getShaderSource(c),g)}}function hq(a){return""!==a}function hr(b,a){return b.replace(/NUM_DIR_LIGHTS/g,a.numDirLights).replace(/NUM_SPOT_LIGHTS/g,a.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,a.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,a.numPointLights).replace(/NUM_HEMI_LIGHTS/g,a.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,a.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,a.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,a.numPointLightShadows)}function hs(b,a){return b.replace(/NUM_CLIPPING_PLANES/g,a.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,a.numClippingPlanes-a.numClipIntersection)}let ht=/^[ \t]*#include +<([\w\d./]+)>/gm;function hu(a){return a.replace(ht,hv)}function hv(d,a){let b=c[a];if(void 0===b)throw Error("Can not resolve #include <"+a+">");return hu(b)}let hw=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,hx=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function hy(a){return a.replace(hx,hA).replace(hw,hz)}function hz(a,b,c,d){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),hA(a,b,c,d)}function hA(f,c,d,e){let b="";for(let a=parseInt(c);a<parseInt(d);a++)b+=e.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return b}function hB(a){let b="precision "+a.precision+" float;\nprecision "+a.precision+" int;";return"highp"===a.precision?b+="\n#define HIGH_PRECISION":"mediump"===a.precision?b+="\n#define MEDIUM_PRECISION":"lowp"===a.precision&&(b+="\n#define LOW_PRECISION"),b}function hC(r,A,a,I){var o,s;let b=r.getContext(),B=a.defines,d=a.vertexShader,e=a.fragmentShader,j,t=(j="SHADOWMAP_TYPE_BASIC",(o=a).shadowMapType===bD?j="SHADOWMAP_TYPE_PCF":o.shadowMapType===bE?j="SHADOWMAP_TYPE_PCF_SOFT":o.shadowMapType===bF&&(j="SHADOWMAP_TYPE_VSM"),j),C=function(b){let a="ENVMAP_TYPE_CUBE";if(b.envMap)switch(b.envMapMode){case ar:case as:a="ENVMAP_TYPE_CUBE";break;case av:a="ENVMAP_TYPE_CUBE_UV"}return a}(a),p,u=(p="ENVMAP_MODE_REFLECTION",(s=a).envMap&&s.envMapMode===as&&(p="ENVMAP_MODE_REFRACTION"),p),D=function(b){let a="ENVMAP_BLENDING_NONE";if(b.envMap)switch(b.combine){case cd:a="ENVMAP_BLENDING_MULTIPLY";break;case ce:a="ENVMAP_BLENDING_MIX";break;case cf:a="ENVMAP_BLENDING_ADD"}return a}(a),i=function(c){let a=c.envMapCubeUVHeight;if(null===a)return null;let b=Math.log2(a)-2,d=1/a,e=1/(3*Math.max(Math.pow(2,b),112));return{texelWidth:e,texelHeight:d,maxMip:b}}(a),v=a.isWebGL2?"":function(a){let b=[a.extensionDerivatives||a.envMapCubeUVHeight||a.bumpMap||a.tangentSpaceNormalMap||a.clearcoatNormalMap||a.flatShading||"physical"===a.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(a.extensionFragDepth||a.logarithmicDepthBuffer)&&a.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",a.extensionDrawBuffers&&a.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(a.extensionShaderTextureLOD||a.envMap||a.transmission)&&a.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return b.filter(hq).join("\n")}(a),m=function(a){let b=[];for(let c in a){let d=a[c];!1!==d&&b.push("#define "+c+" "+d)}return b.join("\n")}(B),f=b.createProgram(),g,h,q=a.glslVersion?"#version "+a.glslVersion+"\n":"";a.isRawShaderMaterial?((g=[m].filter(hq).join("\n")).length>0&&(g+="\n"),(h=[v,m].filter(hq).join("\n")).length>0&&(h+="\n")):(g=[hB(a),"#define SHADER_NAME "+a.shaderName,m,a.instancing?"#define USE_INSTANCING":"",a.instancingColor?"#define USE_INSTANCING_COLOR":"",a.supportsVertexTextures?"#define VERTEX_TEXTURES":"",a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp2?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+u:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.normalMap&&a.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",a.normalMap&&a.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",a.clearcoatMap?"#define USE_CLEARCOATMAP":"",a.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",a.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",a.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",a.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",a.displacementMap&&a.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",a.specularColorMap?"#define USE_SPECULARCOLORMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.transmission?"#define USE_TRANSMISSION":"",a.transmissionMap?"#define USE_TRANSMISSIONMAP":"",a.thicknessMap?"#define USE_THICKNESSMAP":"",a.sheenColorMap?"#define USE_SHEENCOLORMAP":"",a.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",a.vertexTangents?"#define USE_TANGENT":"",a.vertexColors?"#define USE_COLOR":"",a.vertexAlphas?"#define USE_COLOR_ALPHA":"",a.vertexUvs?"#define USE_UV":"",a.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",a.flatShading?"#define FLAT_SHADED":"",a.skinning?"#define USE_SKINNING":"",a.morphTargets?"#define USE_MORPHTARGETS":"",a.morphNormals&& !1===a.flatShading?"#define USE_MORPHNORMALS":"",a.morphColors&&a.isWebGL2?"#define USE_MORPHCOLORS":"",a.morphTargetsCount>0&&a.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",a.morphTargetsCount>0&&a.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+a.morphTextureStride:"",a.morphTargetsCount>0&&a.isWebGL2?"#define MORPHTARGETS_COUNT "+a.morphTargetsCount:"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+t:"",a.sizeAttenuation?"#define USE_SIZEATTENUATION":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&a.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(hq).join("\n"),h=[v,hB(a),"#define SHADER_NAME "+a.shaderName,m,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp2?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.matcap?"#define USE_MATCAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+C:"",a.envMap?"#define "+u:"",a.envMap?"#define "+D:"",i?"#define CUBEUV_TEXEL_WIDTH "+i.texelWidth:"",i?"#define CUBEUV_TEXEL_HEIGHT "+i.texelHeight:"",i?"#define CUBEUV_MAX_MIP "+i.maxMip+".0":"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.normalMap&&a.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",a.normalMap&&a.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",a.clearcoat?"#define USE_CLEARCOAT":"",a.clearcoatMap?"#define USE_CLEARCOATMAP":"",a.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",a.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",a.iridescence?"#define USE_IRIDESCENCE":"",a.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",a.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",a.specularColorMap?"#define USE_SPECULARCOLORMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.alphaTest?"#define USE_ALPHATEST":"",a.sheen?"#define USE_SHEEN":"",a.sheenColorMap?"#define USE_SHEENCOLORMAP":"",a.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",a.transmission?"#define USE_TRANSMISSION":"",a.transmissionMap?"#define USE_TRANSMISSIONMAP":"",a.thicknessMap?"#define USE_THICKNESSMAP":"",a.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",a.vertexTangents?"#define USE_TANGENT":"",a.vertexColors||a.instancingColor?"#define USE_COLOR":"",a.vertexAlphas?"#define USE_COLOR_ALPHA":"",a.vertexUvs?"#define USE_UV":"",a.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",a.gradientMap?"#define USE_GRADIENTMAP":"",a.flatShading?"#define FLAT_SHADED":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+t:"",a.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",a.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&a.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",a.toneMapping!==cg?"#define TONE_MAPPING":"",a.toneMapping!==cg?c.tonemapping_pars_fragment:"",a.toneMapping!==cg?function(c,b){let a;switch(b){case ch:a="Linear";break;case ci:a="Reinhard";break;case cj:a="OptimizedCineon";break;case ck:a="ACESFilmic";break;case cl:a="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",b),a="Linear"}return"vec3 "+c+"( vec3 color ) { return "+a+"ToneMapping( color ); }"}("toneMapping",a.toneMapping):"",a.dithering?"#define DITHERING":"",a.opaque?"#define OPAQUE":"",c.encodings_pars_fragment,function(b,c){let a=function(a){switch(a){case dn:return["Linear","( value )"];case dp:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",a),["Linear","( value )"]}}(c);return"vec4 "+b+"( vec4 value ) { return LinearTo"+a[0]+a[1]+"; }"}("linearToOutputTexel",a.outputEncoding),a.useDepthPacking?"#define DEPTH_PACKING "+a.depthPacking:"","\n"].filter(hq).join("\n")),d=hu(d),d=hr(d,a),d=hs(d,a),e=hu(e),e=hr(e,a),e=hs(e,a),d=hy(d),e=hy(e),a.isWebGL2&& !0!==a.isRawShaderMaterial&&(q="#version 300 es\n",g="precision mediump sampler2DArray;\n#define attribute in\n#define varying out\n#define texture2D texture\n"+g,h=["#define varying in",a.glslVersion===dV?"":"layout(location = 0) out highp vec4 pc_fragColor;",a.glslVersion===dV?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+h);let E=q+g+d,F=q+h+e,k=hn(b,35633,E),l=hn(b,35632,F);if(b.attachShader(f,k),b.attachShader(f,l),void 0!==a.index0AttributeName?b.bindAttribLocation(f,0,a.index0AttributeName):!0===a.morphTargets&&b.bindAttribLocation(f,0,"position"),b.linkProgram(f),r.debug.checkShaderErrors){let n=b.getProgramInfoLog(f).trim(),w=b.getShaderInfoLog(k).trim(),x=b.getShaderInfoLog(l).trim(),y=!0,z=!0;if(!1===b.getProgramParameter(f,35714)){y=!1;let G=hp(b,k,"vertex"),H=hp(b,l,"fragment");console.error("THREE.WebGLProgram: Shader Error "+b.getError()+" - VALIDATE_STATUS "+b.getProgramParameter(f,35715)+"\n\nProgram Info Log: "+n+"\n"+G+"\n"+H)}else""!==n?console.warn("THREE.WebGLProgram: Program Info Log:",n):(""===w||""===x)&&(z=!1);z&&(this.diagnostics={runnable:y,programLog:n,vertexShader:{log:w,prefix:g},fragmentShader:{log:x,prefix:h}})}b.deleteShader(k),b.deleteShader(l);let J;this.getUniforms=function(){return void 0===J&&(J=new hm(b,f)),J};let K;return this.getAttributes=function(){return void 0===K&&(K=function(c,d){let f={},h=c.getProgramParameter(d,35721);for(let e=0;e<h;e++){let a=c.getActiveAttrib(d,e),g=a.name,b=1;35674===a.type&&(b=2),35675===a.type&&(b=3),35676===a.type&&(b=4),f[g]={type:a.type,location:c.getAttribLocation(d,g),locationSize:b}}return f}(b,f)),K},this.destroy=function(){I.releaseStatesOfProgram(this),b.deleteProgram(f),this.program=void 0},this.name=a.shaderName,this.id=ho++,this.cacheKey=A,this.usedTimes=1,this.program=f,this.vertexShader=k,this.fragmentShader=l,this}let hD=0;class hE{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(b){let e=b.vertexShader,f=b.fragmentShader,c=this._getShaderStage(e),d=this._getShaderStage(f),a=this._getShaderCacheForMaterial(b);return!1===a.has(c)&&(a.add(c),c.usedTimes++),!1===a.has(d)&&(a.add(d),d.usedTimes++),this}remove(b){let c=this.materialCache.get(b);for(let a of c)a.usedTimes--,0===a.usedTimes&&this.shaderCache.delete(a.code);return this.materialCache.delete(b),this}getVertexShaderID(a){return this._getShaderStage(a.vertexShader).id}getFragmentShaderID(a){return this._getShaderStage(a.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(a){let b=this.materialCache;return!1===b.has(a)&&b.set(a,new Set),b.get(a)}_getShaderStage(a){let b=this.shaderCache;if(!1===b.has(a)){let c=new hF(a);b.set(a,c)}return b.get(a)}}class hF{constructor(a){this.id=hD++,this.code=a,this.usedTimes=0}}function hG(c,d,e,f,a,g,h){let i=new eR,j=new hE,b=[],k=a.isWebGL2,l=a.logarithmicDepthBuffer,m=a.vertexTextures,n=a.precision,o={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(b,i,E,z,q){let t=z.fog,g=q.geometry,F=b.isMeshStandardMaterial?z.environment:null,p=(b.isMeshStandardMaterial?e:d).get(b.envMap||F),G=p&&p.mapping===av?p.image.height:null,u=o[b.type];null!==b.precision&&(n=a.getMaxPrecision(b.precision))!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",n,"instead.");let A=g.morphAttributes.position||g.morphAttributes.normal||g.morphAttributes.color,H=void 0!==A?A.length:0,r=0;void 0!==g.morphAttributes.position&&(r=1),void 0!==g.morphAttributes.normal&&(r=2),void 0!==g.morphAttributes.color&&(r=3);let v,w,B,C;if(u){let D=aa[u];v=D.vertexShader,w=D.fragmentShader}else v=b.vertexShader,w=b.fragmentShader,j.update(b),B=j.getVertexShaderID(b),C=j.getFragmentShaderID(b);let x=c.getRenderTarget(),I=b.alphaTest>0,s=b.clearcoat>0,y=b.iridescence>0,J={isWebGL2:k,shaderID:u,shaderName:b.type,vertexShader:v,fragmentShader:w,defines:b.defines,customVertexShaderID:B,customFragmentShaderID:C,isRawShaderMaterial:!0===b.isRawShaderMaterial,glslVersion:b.glslVersion,precision:n,instancing:!0===q.isInstancedMesh,instancingColor:!0===q.isInstancedMesh&&null!==q.instanceColor,supportsVertexTextures:m,outputEncoding:null===x?c.outputEncoding:!0===x.isXRRenderTarget?x.texture.encoding:dn,map:!!b.map,matcap:!!b.matcap,envMap:!!p,envMapMode:p&&p.mapping,envMapCubeUVHeight:G,lightMap:!!b.lightMap,aoMap:!!b.aoMap,emissiveMap:!!b.emissiveMap,bumpMap:!!b.bumpMap,normalMap:!!b.normalMap,objectSpaceNormalMap:b.normalMapType===dt,tangentSpaceNormalMap:b.normalMapType===ds,decodeVideoTexture:!!b.map&& !0===b.map.isVideoTexture&&b.map.encoding===dp,clearcoat:s,clearcoatMap:s&&!!b.clearcoatMap,clearcoatRoughnessMap:s&&!!b.clearcoatRoughnessMap,clearcoatNormalMap:s&&!!b.clearcoatNormalMap,iridescence:y,iridescenceMap:y&&!!b.iridescenceMap,iridescenceThicknessMap:y&&!!b.iridescenceThicknessMap,displacementMap:!!b.displacementMap,roughnessMap:!!b.roughnessMap,metalnessMap:!!b.metalnessMap,specularMap:!!b.specularMap,specularIntensityMap:!!b.specularIntensityMap,specularColorMap:!!b.specularColorMap,opaque:!1===b.transparent&&b.blending===bM,alphaMap:!!b.alphaMap,alphaTest:I,gradientMap:!!b.gradientMap,sheen:b.sheen>0,sheenColorMap:!!b.sheenColorMap,sheenRoughnessMap:!!b.sheenRoughnessMap,transmission:b.transmission>0,transmissionMap:!!b.transmissionMap,thicknessMap:!!b.thicknessMap,combine:b.combine,vertexTangents:!!b.normalMap&&!!g.attributes.tangent,vertexColors:b.vertexColors,vertexAlphas:!0===b.vertexColors&&!!g.attributes.color&&4===g.attributes.color.itemSize,vertexUvs:!!b.map||!!b.bumpMap||!!b.normalMap||!!b.specularMap||!!b.alphaMap||!!b.emissiveMap||!!b.roughnessMap||!!b.metalnessMap||!!b.clearcoatMap||!!b.clearcoatRoughnessMap||!!b.clearcoatNormalMap||!!b.iridescenceMap||!!b.iridescenceThicknessMap||!!b.displacementMap||!!b.transmissionMap||!!b.thicknessMap||!!b.specularIntensityMap||!!b.specularColorMap||!!b.sheenColorMap||!!b.sheenRoughnessMap,uvsVertexOnly:!(b.map||b.bumpMap||b.normalMap||b.specularMap||b.alphaMap||b.emissiveMap||b.roughnessMap||b.metalnessMap||b.clearcoatNormalMap||b.iridescenceMap||b.iridescenceThicknessMap||b.transmission>0||b.transmissionMap||b.thicknessMap||b.specularIntensityMap||b.specularColorMap||b.sheen>0||b.sheenColorMap||b.sheenRoughnessMap)&&!!b.displacementMap,fog:!!t,useFog:!0===b.fog,fogExp2:t&&t.isFogExp2,flatShading:!!b.flatShading,sizeAttenuation:b.sizeAttenuation,logarithmicDepthBuffer:l,skinning:!0===q.isSkinnedMesh,morphTargets:void 0!==g.morphAttributes.position,morphNormals:void 0!==g.morphAttributes.normal,morphColors:void 0!==g.morphAttributes.color,morphTargetsCount:H,morphTextureStride:r,numDirLights:i.directional.length,numPointLights:i.point.length,numSpotLights:i.spot.length,numRectAreaLights:i.rectArea.length,numHemiLights:i.hemi.length,numDirLightShadows:i.directionalShadowMap.length,numPointLightShadows:i.pointShadowMap.length,numSpotLightShadows:i.spotShadowMap.length,numClippingPlanes:h.numPlanes,numClipIntersection:h.numIntersection,dithering:b.dithering,shadowMapEnabled:c.shadowMap.enabled&&E.length>0,shadowMapType:c.shadowMap.type,toneMapping:b.toneMapped?c.toneMapping:cg,physicallyCorrectLights:c.physicallyCorrectLights,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===bI,flipSided:b.side===bH,useDepthPacking:!!b.depthPacking,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionDerivatives:b.extensions&&b.extensions.derivatives,extensionFragDepth:b.extensions&&b.extensions.fragDepth,extensionDrawBuffers:b.extensions&&b.extensions.drawBuffers,extensionShaderTextureLOD:b.extensions&&b.extensions.shaderTextureLOD,rendererExtensionFragDepth:k||f.has("EXT_frag_depth"),rendererExtensionDrawBuffers:k||f.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:k||f.has("EXT_shader_texture_lod"),customProgramCacheKey:b.customProgramCacheKey()};return J},getProgramCacheKey:function(e){var b,d,g,a;let f=[];if(e.shaderID?f.push(e.shaderID):(f.push(e.customVertexShaderID),f.push(e.customFragmentShaderID)),void 0!==e.defines)for(let h in e.defines)f.push(h),f.push(e.defines[h]);return!1===e.isRawShaderMaterial&&(b=f,d=e,b.push(d.precision),b.push(d.outputEncoding),b.push(d.envMapMode),b.push(d.envMapCubeUVHeight),b.push(d.combine),b.push(d.vertexUvs),b.push(d.fogExp2),b.push(d.sizeAttenuation),b.push(d.morphTargetsCount),b.push(d.morphAttributeCount),b.push(d.numDirLights),b.push(d.numPointLights),b.push(d.numSpotLights),b.push(d.numHemiLights),b.push(d.numRectAreaLights),b.push(d.numDirLightShadows),b.push(d.numPointLightShadows),b.push(d.numSpotLightShadows),b.push(d.shadowMapType),b.push(d.toneMapping),b.push(d.numClippingPlanes),b.push(d.numClipIntersection),b.push(d.depthPacking),g=f,a=e,i.disableAll(),a.isWebGL2&&i.enable(0),a.supportsVertexTextures&&i.enable(1),a.instancing&&i.enable(2),a.instancingColor&&i.enable(3),a.map&&i.enable(4),a.matcap&&i.enable(5),a.envMap&&i.enable(6),a.lightMap&&i.enable(7),a.aoMap&&i.enable(8),a.emissiveMap&&i.enable(9),a.bumpMap&&i.enable(10),a.normalMap&&i.enable(11),a.objectSpaceNormalMap&&i.enable(12),a.tangentSpaceNormalMap&&i.enable(13),a.clearcoat&&i.enable(14),a.clearcoatMap&&i.enable(15),a.clearcoatRoughnessMap&&i.enable(16),a.clearcoatNormalMap&&i.enable(17),a.iridescence&&i.enable(18),a.iridescenceMap&&i.enable(19),a.iridescenceThicknessMap&&i.enable(20),a.displacementMap&&i.enable(21),a.specularMap&&i.enable(22),a.roughnessMap&&i.enable(23),a.metalnessMap&&i.enable(24),a.gradientMap&&i.enable(25),a.alphaMap&&i.enable(26),a.alphaTest&&i.enable(27),a.vertexColors&&i.enable(28),a.vertexAlphas&&i.enable(29),a.vertexUvs&&i.enable(30),a.vertexTangents&&i.enable(31),a.uvsVertexOnly&&i.enable(32),a.fog&&i.enable(33),g.push(i.mask),i.disableAll(),a.useFog&&i.enable(0),a.flatShading&&i.enable(1),a.logarithmicDepthBuffer&&i.enable(2),a.skinning&&i.enable(3),a.morphTargets&&i.enable(4),a.morphNormals&&i.enable(5),a.morphColors&&i.enable(6),a.premultipliedAlpha&&i.enable(7),a.shadowMapEnabled&&i.enable(8),a.physicallyCorrectLights&&i.enable(9),a.doubleSided&&i.enable(10),a.flipSided&&i.enable(11),a.useDepthPacking&&i.enable(12),a.dithering&&i.enable(13),a.specularIntensityMap&&i.enable(14),a.specularColorMap&&i.enable(15),a.transmission&&i.enable(16),a.transmissionMap&&i.enable(17),a.thicknessMap&&i.enable(18),a.sheen&&i.enable(19),a.sheenColorMap&&i.enable(20),a.sheenRoughnessMap&&i.enable(21),a.decodeVideoTexture&&i.enable(22),a.opaque&&i.enable(23),g.push(i.mask),f.push(c.outputEncoding)),f.push(e.customProgramCacheKey),f.join()},getUniforms:function(b){let c=o[b.type],a;if(c){let d=aa[c];a=fQ.clone(d.uniforms)}else a=b.uniforms;return a},acquireProgram:function(h,e){let a;for(let d=0,i=b.length;d<i;d++){let f=b[d];if(f.cacheKey===e){a=f,++a.usedTimes;break}}return void 0===a&&(a=new hC(c,e,h,g),b.push(a)),a},releaseProgram:function(a){if(0== --a.usedTimes){let c=b.indexOf(a);b[c]=b[b.length-1],b.pop(),a.destroy()}},releaseShaderCache:function(a){j.remove(a)},programs:b,dispose:function(){j.dispose()}}}function hH(){let a=new WeakMap;return{get:function(c){let b=a.get(c);return void 0===b&&(b={},a.set(c,b)),b},remove:function(b){a.delete(b)},update:function(b,c,d){a.get(b)[c]=d},dispose:function(){a=new WeakMap}}}function hI(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function hJ(a,b){return a.groupOrder!==b.groupOrder?a.groupOrder-b.groupOrder:a.renderOrder!==b.renderOrder?a.renderOrder-b.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function hK(){let d=[],e=0,a=[],b=[],c=[];function f(b,c,f,g,h,i){let a=d[e];return void 0===a?(a={id:b.id,object:b,geometry:c,material:f,groupOrder:g,renderOrder:b.renderOrder,z:h,group:i},d[e]=a):(a.id=b.id,a.object=b,a.geometry=c,a.material=f,a.groupOrder=g,a.renderOrder=b.renderOrder,a.z=h,a.group=i),e++,a}return{opaque:a,transmissive:b,transparent:c,init:function(){e=0,a.length=0,b.length=0,c.length=0},push:function(g,h,d,i,j,k){let e=f(g,h,d,i,j,k);d.transmission>0?b.push(e):!0===d.transparent?c.push(e):a.push(e)},unshift:function(g,h,d,i,j,k){let e=f(g,h,d,i,j,k);d.transmission>0?b.unshift(e):!0===d.transparent?c.unshift(e):a.unshift(e)},finish:function(){for(let b=e,c=d.length;b<c;b++){let a=d[b];if(null===a.id)break;a.id=null,a.object=null,a.geometry=null,a.material=null,a.group=null}},sort:function(e,d){a.length>1&&a.sort(e||hI),b.length>1&&b.sort(d||hJ),c.length>1&&c.sort(d||hJ)}}}function hL(){let a=new WeakMap;return{get:function(c,d){let b;return!1===a.has(c)?(b=new hK,a.set(c,[b])):d>=a.get(c).length?(b=new hK,a.get(c).push(b)):b=a.get(c)[d],b},dispose:function(){a=new WeakMap}}}function hM(){let b={};return{get:function(d){if(void 0!==b[d.id])return b[d.id];let c;switch(d.type){case"DirectionalLight":c={direction:new a,color:new h};break;case"SpotLight":c={position:new a,direction:new a,color:new h,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":c={position:new a,color:new h,distance:0,decay:0};break;case"HemisphereLight":c={direction:new a,skyColor:new h,groundColor:new h};break;case"RectAreaLight":c={color:new h,position:new a,halfWidth:new a,halfHeight:new a}}return b[d.id]=c,c}}}let hN=0;function hO(a,b){return(b.castShadow?1:0)-(a.castShadow?1:0)}function hP(f,g){let h=new hM,i=function(){let a={};return{get:function(b){if(void 0!==a[b.id])return a[b.id];let c;switch(b.type){case"DirectionalLight":case"SpotLight":c={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new j};break;case"PointLight":c={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new j,shadowCameraNear:1,shadowCameraFar:1e3}}return a[b.id]=c,c}}}(),c={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let d=0;d<9;d++)c.probe.push(new a);let k=new a,l=new e,m=new e;return{setup:function(D,M){let I=0,J=0,K=0;for(let E=0;E<9;E++)c.probe[E].set(0,0,0);let e=0,j=0,k=0,p=0,u=0,q=0,r=0,s=0;D.sort(hO);let l=!0!==M?Math.PI:1;for(let F=0,N=D.length;F<N;F++){let a=D[F],v=a.color,m=a.intensity,O=a.distance,G=a.shadow&&a.shadow.map?a.shadow.map.texture:null;if(a.isAmbientLight)I+=v.r*m*l,J+=v.g*m*l,K+=v.b*m*l;else if(a.isLightProbe)for(let y=0;y<9;y++)c.probe[y].addScaledVector(a.sh.coefficients[y],m);else if(a.isDirectionalLight){let L=h.get(a);if(L.color.copy(a.color).multiplyScalar(a.intensity*l),a.castShadow){let z=a.shadow,w=i.get(a);w.shadowBias=z.bias,w.shadowNormalBias=z.normalBias,w.shadowRadius=z.radius,w.shadowMapSize=z.mapSize,c.directionalShadow[e]=w,c.directionalShadowMap[e]=G,c.directionalShadowMatrix[e]=a.shadow.matrix,q++}c.directional[e]=L,e++}else if(a.isSpotLight){let n=h.get(a);if(n.position.setFromMatrixPosition(a.matrixWorld),n.color.copy(v).multiplyScalar(m*l),n.distance=O,n.coneCos=Math.cos(a.angle),n.penumbraCos=Math.cos(a.angle*(1-a.penumbra)),n.decay=a.decay,a.castShadow){let A=a.shadow,x=i.get(a);x.shadowBias=A.bias,x.shadowNormalBias=A.normalBias,x.shadowRadius=A.radius,x.shadowMapSize=A.mapSize,c.spotShadow[k]=x,c.spotShadowMap[k]=G,c.spotShadowMatrix[k]=a.shadow.matrix,s++}c.spot[k]=n,k++}else if(a.isRectAreaLight){let B=h.get(a);B.color.copy(v).multiplyScalar(m),B.halfWidth.set(.5*a.width,0,0),B.halfHeight.set(0,.5*a.height,0),c.rectArea[p]=B,p++}else if(a.isPointLight){let C=h.get(a);if(C.color.copy(a.color).multiplyScalar(a.intensity*l),C.distance=a.distance,C.decay=a.decay,a.castShadow){let t=a.shadow,o=i.get(a);o.shadowBias=t.bias,o.shadowNormalBias=t.normalBias,o.shadowRadius=t.radius,o.shadowMapSize=t.mapSize,o.shadowCameraNear=t.camera.near,o.shadowCameraFar=t.camera.far,c.pointShadow[j]=o,c.pointShadowMap[j]=G,c.pointShadowMatrix[j]=a.shadow.matrix,r++}c.point[j]=C,j++}else if(a.isHemisphereLight){let H=h.get(a);H.skyColor.copy(a.color).multiplyScalar(m*l),H.groundColor.copy(a.groundColor).multiplyScalar(m*l),c.hemi[u]=H,u++}}p>0&&(g.isWebGL2?(c.rectAreaLTC1=b.LTC_FLOAT_1,c.rectAreaLTC2=b.LTC_FLOAT_2):!0===f.has("OES_texture_float_linear")?(c.rectAreaLTC1=b.LTC_FLOAT_1,c.rectAreaLTC2=b.LTC_FLOAT_2):!0===f.has("OES_texture_half_float_linear")?(c.rectAreaLTC1=b.LTC_HALF_1,c.rectAreaLTC2=b.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),c.ambient[0]=I,c.ambient[1]=J,c.ambient[2]=K;let d=c.hash;(d.directionalLength!==e||d.pointLength!==j||d.spotLength!==k||d.rectAreaLength!==p||d.hemiLength!==u||d.numDirectionalShadows!==q||d.numPointShadows!==r||d.numSpotShadows!==s)&&(c.directional.length=e,c.spot.length=k,c.rectArea.length=p,c.point.length=j,c.hemi.length=u,c.directionalShadow.length=q,c.directionalShadowMap.length=q,c.pointShadow.length=r,c.pointShadowMap.length=r,c.spotShadow.length=s,c.spotShadowMap.length=s,c.directionalShadowMatrix.length=q,c.pointShadowMatrix.length=r,c.spotShadowMatrix.length=s,d.directionalLength=e,d.pointLength=j,d.spotLength=k,d.rectAreaLength=p,d.hemiLength=u,d.numDirectionalShadows=q,d.numPointShadows=r,d.numSpotShadows=s,c.version=hN++)},setupView:function(h,s){let i=0,j=0,n=0,o=0,p=0,b=s.matrixWorldInverse;for(let f=0,t=h.length;f<t;f++){let a=h[f];if(a.isDirectionalLight){let g=c.directional[i];g.direction.setFromMatrixPosition(a.matrixWorld),k.setFromMatrixPosition(a.target.matrixWorld),g.direction.sub(k),g.direction.transformDirection(b),i++}else if(a.isSpotLight){let e=c.spot[n];e.position.setFromMatrixPosition(a.matrixWorld),e.position.applyMatrix4(b),e.direction.setFromMatrixPosition(a.matrixWorld),k.setFromMatrixPosition(a.target.matrixWorld),e.direction.sub(k),e.direction.transformDirection(b),n++}else if(a.isRectAreaLight){let d=c.rectArea[o];d.position.setFromMatrixPosition(a.matrixWorld),d.position.applyMatrix4(b),m.identity(),l.copy(a.matrixWorld),l.premultiply(b),m.extractRotation(l),d.halfWidth.set(.5*a.width,0,0),d.halfHeight.set(0,.5*a.height,0),d.halfWidth.applyMatrix4(m),d.halfHeight.applyMatrix4(m),o++}else if(a.isPointLight){let q=c.point[j];q.position.setFromMatrixPosition(a.matrixWorld),q.position.applyMatrix4(b),j++}else if(a.isHemisphereLight){let r=c.hemi[p];r.direction.setFromMatrixPosition(a.matrixWorld),r.direction.transformDirection(b),p++}}},state:c}}function hQ(a,b){let c=new hP(a,b),d=[],e=[];return{init:function(){d.length=0,e.length=0},state:{lightsArray:d,shadowsArray:e,lights:c},setupLights:function(a){c.setup(d,a)},setupLightsView:function(a){c.setupView(d,a)},pushLight:function(a){d.push(a)},pushShadow:function(a){e.push(a)}}}function hR(a,b){let c=new WeakMap;return{get:function(e,f=0){let d;return!1===c.has(e)?(d=new hQ(a,b),c.set(e,[d])):f>=c.get(e).length?(d=new hQ(a,b),c.get(e).push(d)):d=c.get(e)[f],d},dispose:function(){c=new WeakMap}}}class hS extends k{constructor(a){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=dq,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(a)}copy(a){return super.copy(a),this.depthPacking=a.depthPacking,this.map=a.map,this.alphaMap=a.alphaMap,this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this}}class hT extends k{constructor(b){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new a,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(b)}copy(a){return super.copy(a),this.referencePosition.copy(a.referencePosition),this.nearDistance=a.nearDistance,this.farDistance=a.farDistance,this.map=a.map,this.alphaMap=a.alphaMap,this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this}}function hU(e,f,c){let h=new fZ,i=new j,k=new j,l=new W,m=new hS({depthPacking:dr}),o=new hT,p={},q=c.maxTextureSize,r={0:bH,1:bG,2:bI},a=new aV({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new j},radius:{value:4}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),d=a.clone();d.defines.HORIZONTAL_PASS=1;let b=new g;b.setAttribute("position",new n(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let s=new D(b,a),t=this;function u(b,c){let g=f.update(s);a.defines.VSM_SAMPLES!==b.blurSamples&&(a.defines.VSM_SAMPLES=b.blurSamples,d.defines.VSM_SAMPLES=b.blurSamples,a.needsUpdate=!0,d.needsUpdate=!0),null===b.mapPass&&(b.mapPass=new y(i.x,i.y)),a.uniforms.shadow_pass.value=b.map.texture,a.uniforms.resolution.value=b.mapSize,a.uniforms.radius.value=b.radius,e.setRenderTarget(b.mapPass),e.clear(),e.renderBufferDirect(c,null,g,a,s,null),d.uniforms.shadow_pass.value=b.mapPass.texture,d.uniforms.resolution.value=b.mapSize,d.uniforms.radius.value=b.radius,e.setRenderTarget(b.map),e.clear(),e.renderBufferDirect(c,null,g,d,s,null)}function v(g,a,d,k,l,n){let b=null,h=!0===d.isPointLight?g.customDistanceMaterial:g.customDepthMaterial;if(b=void 0!==h?h:!0===d.isPointLight?o:m,e.localClippingEnabled&& !0===a.clipShadows&&Array.isArray(a.clippingPlanes)&&0!==a.clippingPlanes.length||a.displacementMap&&0!==a.displacementScale||a.alphaMap&&a.alphaTest>0){let i=b.uuid,j=a.uuid,c=p[i];void 0===c&&(c={},p[i]=c);let f=c[j];void 0===f&&(f=b.clone(),c[j]=f),b=f}return b.visible=a.visible,b.wireframe=a.wireframe,n===bF?b.side=null!==a.shadowSide?a.shadowSide:a.side:b.side=null!==a.shadowSide?a.shadowSide:r[a.side],b.alphaMap=a.alphaMap,b.alphaTest=a.alphaTest,b.clipShadows=a.clipShadows,b.clippingPlanes=a.clippingPlanes,b.clipIntersection=a.clipIntersection,b.displacementMap=a.displacementMap,b.displacementScale=a.displacementScale,b.displacementBias=a.displacementBias,b.wireframeLinewidth=a.wireframeLinewidth,b.linewidth=a.linewidth,!0===d.isPointLight&& !0===b.isMeshDistanceMaterial&&(b.referencePosition.setFromMatrixPosition(d.matrixWorld),b.nearDistance=k,b.farDistance=l),b}function w(a,m,b,g,c){if(!1===a.visible)return;let q=a.layers.test(m.layers);if(q&&(a.isMesh||a.isLine||a.isPoints)&&(a.castShadow||a.receiveShadow&&c===bF)&&(!a.frustumCulled||h.intersectsObject(a))){a.modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld);let i=f.update(a),d=a.material;if(Array.isArray(d)){let n=i.groups;for(let j=0,r=n.length;j<r;j++){let o=n[j],k=d[o.materialIndex];if(k&&k.visible){let s=v(a,k,g,b.near,b.far,c);e.renderBufferDirect(b,null,i,s,a,o)}}}else if(d.visible){let t=v(a,d,g,b.near,b.far,c);e.renderBufferDirect(b,null,i,t,a,null)}}let p=a.children;for(let l=0,u=p.length;l<u;l++)w(p[l],m,b,g,c)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=bD,this.render=function(j,o,n){if(!1===t.enabled|| !1===t.autoUpdate&& !1===t.needsUpdate||0===j.length)return;let p=e.getRenderTarget(),r=e.getActiveCubeFace(),s=e.getActiveMipmapLevel(),b=e.state;b.setBlending(bL),b.buffers.color.setClear(1,1,1,1),b.buffers.depth.setTest(!0),b.setScissorTest(!1);for(let m=0,v=j.length;m<v;m++){let c=j[m],a=c.shadow;if(void 0===a){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===a.autoUpdate&& !1===a.needsUpdate)continue;i.copy(a.mapSize);let d=a.getFrameExtents();if(i.multiply(d),k.copy(a.mapSize),(i.x>q||i.y>q)&&(i.x>q&&(k.x=Math.floor(q/d.x),i.x=k.x*d.x,a.mapSize.x=k.x),i.y>q&&(k.y=Math.floor(q/d.y),i.y=k.y*d.y,a.mapSize.y=k.y)),null===a.map){let x=this.type!==bF?{minFilter:az,magFilter:az}:{};a.map=new y(i.x,i.y,x),a.map.texture.name=c.name+".shadowMap",a.camera.updateProjectionMatrix()}e.setRenderTarget(a.map),e.clear();let z=a.getViewportCount();for(let f=0;f<z;f++){let g=a.getViewport(f);l.set(k.x*g.x,k.y*g.y,k.x*g.z,k.y*g.w),b.viewport(l),a.updateMatrices(c,f),h=a.getFrustum(),w(o,n,a.camera,c,this.type)}!0!==a.isPointLightShadow&&this.type===bF&&u(a,n),a.needsUpdate=!1}t.needsUpdate=!1,e.setRenderTarget(p,r,s)}}function hV(a,l,m){let n=m.isWebGL2,g=new function(){let b=!1,c=new W,d=null,e=new W(0,0,0,0);return{setMask:function(c){d===c||b||(a.colorMask(c,c,c,c),d=c)},setLocked:function(a){b=a},setClear:function(d,f,g,b,h){!0===h&&(d*=b,f*=b,g*=b),c.set(d,f,g,b),!1===e.equals(c)&&(a.clearColor(d,f,g,b),e.copy(c))},reset:function(){b=!1,d=null,e.set(-1,0,0,0)}}},d=new function(){let b=!1,c=null,d=null,f=null;return{setTest:function(a){a?e(2929):q(2929)},setMask:function(d){c===d||b||(a.depthMask(d),c=d)},setFunc:function(b){if(d!==b){if(b)switch(b){case b5:a.depthFunc(512);break;case b6:a.depthFunc(519);break;case b7:a.depthFunc(513);break;case b8:a.depthFunc(515);break;case b9:a.depthFunc(514);break;case ca:a.depthFunc(518);break;case cb:a.depthFunc(516);break;case cc:a.depthFunc(517);break;default:a.depthFunc(515)}else a.depthFunc(515);d=b}},setLocked:function(a){b=a},setClear:function(b){f!==b&&(a.clearDepth(b),f=b)},reset:function(){b=!1,c=null,d=null,f=null}}},h=new function(){let b=!1,c=null,d=null,f=null,g=null,h=null,i=null,j=null,k=null;return{setTest:function(a){b||(a?e(2960):q(2960))},setMask:function(d){c===d||b||(a.stencilMask(d),c=d)},setFunc:function(b,c,e){(d!==b||f!==c||g!==e)&&(a.stencilFunc(b,c,e),d=b,f=c,g=e)},setOp:function(b,c,d){(h!==b||i!==c||j!==d)&&(a.stencilOp(b,c,d),h=b,i=c,j=d)},setLocked:function(a){b=a},setClear:function(b){k!==b&&(a.clearStencil(b),k=b)},reset:function(){b=!1,c=null,d=null,f=null,g=null,h=null,i=null,j=null,k=null}}},w=new WeakMap,x=new WeakMap,y={},z={},A=new WeakMap,B=[],C=null,D=!1,E=null,F=null,G=null,H=null,I=null,J=null,K=null,L=!1,M=null,N=null,O=null,P=null,Q=null,R=a.getParameter(35661),i=!1,S=0,b=a.getParameter(7938);-1!==b.indexOf("WebGL")?i=parseFloat(/^WebGL (\d)/.exec(b)[1])>=1:-1!==b.indexOf("OpenGL ES")&&(i=parseFloat(/^OpenGL ES (\d)/.exec(b)[1])>=2);let T=null,U={},o=a.getParameter(3088),p=a.getParameter(2978),V=new W().fromArray(o),X=new W().fromArray(p);function j(b,e,f){let g=new Uint8Array(4),d=a.createTexture();a.bindTexture(b,d),a.texParameteri(b,10241,9728),a.texParameteri(b,10240,9728);for(let c=0;c<f;c++)a.texImage2D(e+c,0,6408,1,1,0,6408,5121,g);return d}let k={};function e(b){!0!==y[b]&&(a.enable(b),y[b]=!0)}function q(b){!1!==y[b]&&(a.disable(b),y[b]=!1)}k[3553]=j(3553,3553,1),k[34067]=j(34067,34069,6),g.setClear(0,0,0,1),d.setClear(1),h.setClear(0),e(2929),d.setFunc(b8),s(!1),t(bz),e(2884),r(bL);let c={[bR]:32774,[bS]:32778,[bT]:32779};if(n)c[bU]=32775,c[bV]=32776;else{let f=l.get("EXT_blend_minmax");null!==f&&(c[bU]=f.MIN_EXT,c[bV]=f.MAX_EXT)}let Y={[bW]:0,[bX]:1,[bY]:768,[b$]:770,[b4]:776,[b2]:774,[b0]:772,[bZ]:769,[b_]:771,[b3]:775,[b1]:773};function r(b,h,i,j,d,f,g,k){if(b===bL){!0===D&&(q(3042),D=!1);return}if(!1===D&&(e(3042),D=!0),b!==bQ){if(b!==E||k!==L){if((F!==bR||I!==bR)&&(a.blendEquation(32774),F=bR,I=bR),k)switch(b){case bM:a.blendFuncSeparate(1,771,1,771);break;case bN:a.blendFunc(1,1);break;case bO:a.blendFuncSeparate(0,769,0,1);break;case bP:a.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",b)}else switch(b){case bM:a.blendFuncSeparate(770,771,1,771);break;case bN:a.blendFunc(770,1);break;case bO:a.blendFuncSeparate(0,769,0,1);break;case bP:a.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",b)}G=null,H=null,J=null,K=null,E=b,L=k}return}d=d||h,f=f||i,g=g||j,(h!==F||d!==I)&&(a.blendEquationSeparate(c[h],c[d]),F=h,I=d),(i!==G||j!==H||f!==J||g!==K)&&(a.blendFuncSeparate(Y[i],Y[j],Y[f],Y[g]),G=i,H=j,J=f,K=g),E=b,L=null}function s(b){M!==b&&(b?a.frontFace(2304):a.frontFace(2305),M=b)}function t(b){b!==by?(e(2884),b!==N&&(b===bz?a.cullFace(1029):b===bA?a.cullFace(1028):a.cullFace(1032))):q(2884),N=b}function u(d,b,c){d?(e(32823),(P!==b||Q!==c)&&(a.polygonOffset(b,c),P=b,Q=c)):q(32823)}function v(b){void 0===b&&(b=33984+R-1),T!==b&&(a.activeTexture(b),T=b)}return{buffers:{color:g,depth:d,stencil:h},enable:e,disable:q,bindFramebuffer:function(b,c){return z[b]!==c&&(a.bindFramebuffer(b,c),z[b]=c,n&&(36009===b&&(z[36160]=c),36160===b&&(z[36009]=c)),!0)},drawBuffers:function(e,g){let b=B,c=!1;if(e){if(void 0===(b=A.get(g))&&(b=[],A.set(g,b)),e.isWebGLMultipleRenderTargets){let f=e.texture;if(b.length!==f.length||36064!==b[0]){for(let d=0,h=f.length;d<h;d++)b[d]=36064+d;b.length=f.length,c=!0}}else 36064!==b[0]&&(b[0]=36064,c=!0)}else 1029!==b[0]&&(b[0]=1029,c=!0);c&&(m.isWebGL2?a.drawBuffers(b):l.get("WEBGL_draw_buffers").drawBuffersWEBGL(b))},useProgram:function(b){return C!==b&&(a.useProgram(b),C=b,!0)},setBlending:r,setMaterial:function(a,f){a.side===bI?q(2884):e(2884);let b=a.side===bH;f&&(b=!b),s(b),a.blending===bM&& !1===a.transparent?r(bL):r(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,a.blendSrcAlpha,a.blendDstAlpha,a.premultipliedAlpha),d.setFunc(a.depthFunc),d.setTest(a.depthTest),d.setMask(a.depthWrite),g.setMask(a.colorWrite);let c=a.stencilWrite;h.setTest(c),c&&(h.setMask(a.stencilWriteMask),h.setFunc(a.stencilFunc,a.stencilRef,a.stencilFuncMask),h.setOp(a.stencilFail,a.stencilZFail,a.stencilZPass)),u(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits),!0===a.alphaToCoverage?e(32926):q(32926)},setFlipSided:s,setCullFace:t,setLineWidth:function(b){b!==O&&(i&&a.lineWidth(b),O=b)},setPolygonOffset:u,setScissorTest:function(a){a?e(3089):q(3089)},activeTexture:v,bindTexture:function(c,d){null===T&&v();let b=U[T];void 0===b&&(b={type:void 0,texture:void 0},U[T]=b),(b.type!==c||b.texture!==d)&&(a.bindTexture(c,d||k[c]),b.type=c,b.texture=d)},unbindTexture:function(){let b=U[T];void 0!==b&& void 0!==b.type&&(a.bindTexture(b.type,null),b.type=void 0,b.texture=void 0)},compressedTexImage2D:function(){try{a.compressedTexImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texImage2D:function(){try{a.texImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texImage3D:function(){try{a.texImage3D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},updateUBOMapping:function(c,d){let b=x.get(d);void 0===b&&(b=new WeakMap,x.set(d,b));let e=b.get(c);void 0===e&&(e=a.getUniformBlockIndex(d,c.name),b.set(c,e))},uniformBlockBinding:function(b,d){let e=x.get(d),c=e.get(b);w.get(b)!==c&&(a.uniformBlockBinding(d,c,b.__bindingPointIndex),w.set(b,c))},texStorage2D:function(){try{a.texStorage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texStorage3D:function(){try{a.texStorage3D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texSubImage2D:function(){try{a.texSubImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},texSubImage3D:function(){try{a.texSubImage3D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},compressedTexSubImage2D:function(){try{a.compressedTexSubImage2D.apply(a,arguments)}catch(b){console.error("THREE.WebGLState:",b)}},scissor:function(b){!1===V.equals(b)&&(a.scissor(b.x,b.y,b.z,b.w),V.copy(b))},viewport:function(b){!1===X.equals(b)&&(a.viewport(b.x,b.y,b.z,b.w),X.copy(b))},reset:function(){a.disable(3042),a.disable(2884),a.disable(2929),a.disable(32823),a.disable(3089),a.disable(2960),a.disable(32926),a.blendEquation(32774),a.blendFunc(1,0),a.blendFuncSeparate(1,0,1,0),a.colorMask(!0,!0,!0,!0),a.clearColor(0,0,0,0),a.depthMask(!0),a.depthFunc(513),a.clearDepth(1),a.stencilMask(4294967295),a.stencilFunc(519,0,4294967295),a.stencilOp(7680,7680,7680),a.clearStencil(0),a.cullFace(1029),a.frontFace(2305),a.polygonOffset(0,0),a.activeTexture(33984),a.bindFramebuffer(36160,null),!0===n&&(a.bindFramebuffer(36009,null),a.bindFramebuffer(36008,null)),a.useProgram(null),a.lineWidth(1),a.scissor(0,0,a.canvas.width,a.canvas.height),a.viewport(0,0,a.canvas.width,a.canvas.height),y={},T=null,U={},z={},A=new WeakMap,B=[],C=null,D=!1,E=null,F=null,G=null,H=null,I=null,J=null,K=null,L=!1,M=null,N=null,O=null,P=null,Q=null,V.set(0,0,a.canvas.width,a.canvas.height),X.set(0,0,a.canvas.width,a.canvas.height),g.reset(),d.reset(),h.reset()}}}function hW(h,b,i,j,a,k,l){let m=a.isWebGL2,n=a.maxTextures,o=a.maxCubemapSize,p=a.maxTextureSize,q=a.maxSamples,r=b.has("WEBGL_multisampled_render_to_texture")?b.get("WEBGL_multisampled_render_to_texture"):null,s=/OculusBrowser/g.test(navigator.userAgent),t=new WeakMap,u,v=new WeakMap,c=!1;try{c="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(w){}function x(a,b){return c?new OffscreenCanvas(a,b):d1("canvas")}function y(a,g,i,f){let d=1;if((a.width>f||a.height>f)&&(d=f/Math.max(a.width,a.height)),d<1|| !0===g){if("undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap){let h=g?aP:Math.floor,b=h(d*a.width),c=h(d*a.height);void 0===u&&(u=x(b,c));let e=i?x(b,c):u;e.width=b,e.height=c;let j=e.getContext("2d");return j.drawImage(a,0,0,b,c),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+a.width+"x"+a.height+") to ("+b+"x"+c+")."),e}"data"in a&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+a.width+"x"+a.height+").")}return a}function z(a){return aN(a.width)&&aN(a.height)}function A(a,b){return a.generateMipmaps&&b&&a.minFilter!==az&&a.minFilter!==aC}function B(a){h.generateMipmap(a)}function C(e,d,c,f,g=!1){if(!1===m)return d;if(null!==e){if(void 0!==h[e])return h[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let a=d;return 6403===d&&(5126===c&&(a=33326),5131===c&&(a=33325),5121===c&&(a=33321)),33319===d&&(5126===c&&(a=33328),5131===c&&(a=33327),5121===c&&(a=33323)),6408===d&&(5126===c&&(a=34836),5131===c&&(a=34842),5121===c&&(a=f===dp&& !1===g?35907:32856),32819===c&&(a=32854),32820===c&&(a=32855)),(33325===a||33326===a||33327===a||33328===a||34842===a||34836===a)&&b.get("EXT_color_buffer_float"),a}function D(a,b,c){return!0===A(a,c)||a.isFramebufferTexture&&a.minFilter!==az&&a.minFilter!==aC?Math.log2(Math.max(b.width,b.height))+1:void 0!==a.mipmaps&&a.mipmaps.length>0?a.mipmaps.length:a.isCompressedTexture&&Array.isArray(a.image)?b.mipmaps.length:1}function E(a){return a===az||a===aA||a===aB?9728:9729}function F(b){let a=b.target;a.removeEventListener("dispose",F),H(a),a.isVideoTexture&&t.delete(a)}function G(b){let a=b.target;a.removeEventListener("dispose",G),J(a)}function H(a){let c=j.get(a);if(void 0===c.__webglInit)return;let d=a.source,b=v.get(d);if(b){let e=b[c.__cacheKey];e.usedTimes--,0===e.usedTimes&&I(a),0===Object.keys(b).length&&v.delete(d)}j.remove(a)}function I(a){let b=j.get(a);h.deleteTexture(b.__webglTexture);let c=a.source,d=v.get(c);delete d[b.__cacheKey],l.memory.textures--}function J(b){let c=b.texture,a=j.get(b),g=j.get(c);if(void 0!==g.__webglTexture&&(h.deleteTexture(g.__webglTexture),l.memory.textures--),b.depthTexture&&b.depthTexture.dispose(),b.isWebGLCubeRenderTarget)for(let d=0;d<6;d++)h.deleteFramebuffer(a.__webglFramebuffer[d]),a.__webglDepthbuffer&&h.deleteRenderbuffer(a.__webglDepthbuffer[d]);else{if(h.deleteFramebuffer(a.__webglFramebuffer),a.__webglDepthbuffer&&h.deleteRenderbuffer(a.__webglDepthbuffer),a.__webglMultisampledFramebuffer&&h.deleteFramebuffer(a.__webglMultisampledFramebuffer),a.__webglColorRenderbuffer)for(let e=0;e<a.__webglColorRenderbuffer.length;e++)a.__webglColorRenderbuffer[e]&&h.deleteRenderbuffer(a.__webglColorRenderbuffer[e]);a.__webglDepthRenderbuffer&&h.deleteRenderbuffer(a.__webglDepthRenderbuffer)}if(b.isWebGLMultipleRenderTargets)for(let f=0,k=c.length;f<k;f++){let i=j.get(c[f]);i.__webglTexture&&(h.deleteTexture(i.__webglTexture),l.memory.textures--),j.remove(c[f])}j.remove(c),j.remove(b)}let K=0;function d(a,c){let b=j.get(a);if(a.isVideoTexture&&S(a),!1===a.isRenderTargetTexture&&a.version>0&&b.__version!==a.version){let d=a.image;if(null===d)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(!1===d.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{P(b,a,c);return}}i.activeTexture(33984+c),i.bindTexture(3553,b.__webglTexture)}let L={[aw]:10497,[ax]:33071,[ay]:33648},M={[az]:9728,[aA]:9984,[aB]:9986,[aC]:9729,[aD]:9985,[aE]:9987};function N(d,c,e){if(e?(h.texParameteri(d,10242,L[c.wrapS]),h.texParameteri(d,10243,L[c.wrapT]),(32879===d||35866===d)&&h.texParameteri(d,32882,L[c.wrapR]),h.texParameteri(d,10240,M[c.magFilter]),h.texParameteri(d,10241,M[c.minFilter])):(h.texParameteri(d,10242,33071),h.texParameteri(d,10243,33071),(32879===d||35866===d)&&h.texParameteri(d,32882,33071),(c.wrapS!==ax||c.wrapT!==ax)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),h.texParameteri(d,10240,E(c.magFilter)),h.texParameteri(d,10241,E(c.minFilter)),c.minFilter!==az&&c.minFilter!==aC&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===b.has("EXT_texture_filter_anisotropic")){let f=b.get("EXT_texture_filter_anisotropic");(c.type!==cw|| !1!==b.has("OES_texture_float_linear"))&&(!1!==m||c.type!==cx|| !1!==b.has("OES_texture_half_float_linear"))&&(c.anisotropy>1||j.get(c).__currentAnisotropy)&&(h.texParameterf(d,f.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(c.anisotropy,a.getMaxAnisotropy())),j.get(c).__currentAnisotropy=c.anisotropy)}}function O(b,d){let e=!1;void 0===b.__webglInit&&(b.__webglInit=!0,d.addEventListener("dispose",F));let f=d.source,a=v.get(f);void 0===a&&(a={},v.set(f,a));let c=function(b){let a=[];return a.push(b.wrapS),a.push(b.wrapT),a.push(b.magFilter),a.push(b.minFilter),a.push(b.anisotropy),a.push(b.internalFormat),a.push(b.format),a.push(b.type),a.push(b.generateMipmaps),a.push(b.premultiplyAlpha),a.push(b.flipY),a.push(b.unpackAlignment),a.push(b.encoding),a.join()}(d);if(c!==b.__cacheKey){void 0===a[c]&&(a[c]={texture:h.createTexture(),usedTimes:0},l.memory.textures++,e=!0),a[c].usedTimes++;let g=a[b.__cacheKey];void 0!==g&&(a[b.__cacheKey].usedTimes--,0===g.usedTimes&&I(d)),b.__cacheKey=c,b.__webglTexture=a[c].texture}return e}function P(w,a,H){let q=3553;a.isDataArrayTexture&&(q=35866),a.isData3DTexture&&(q=32879);let E=O(w,a),r=a.source;if(i.activeTexture(33984+H),i.bindTexture(q,w.__webglTexture),r.version!==r.__currentVersion|| !0===E){var s;h.pixelStorei(37440,a.flipY),h.pixelStorei(37441,a.premultiplyAlpha),h.pixelStorei(3317,a.unpackAlignment),h.pixelStorei(37443,0);let I=(s=a,!m&&(s.wrapS!==ax||s.wrapT!==ax||s.minFilter!==az&&s.minFilter!==aC)&& !1===z(a.image)),b=y(a.image,I,!1,p);b=T(a,b);let t=z(b)||m,e=k.convert(a.format,a.encoding),f=k.convert(a.type),c=C(a.internalFormat,e,f,a.encoding,a.isVideoTexture);N(q,a,t);let d,g=a.mipmaps,j=m&& !0!==a.isVideoTexture,l=void 0===r.__currentVersion|| !0===E,n=D(a,b,t);if(a.isDepthTexture)c=6402,m?c=a.type===cw?36012:a.type===cv?33190:a.type===cA?35056:33189:a.type===cw&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),a.format===cG&&6402===c&&a.type!==ct&&a.type!==cv&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),a.type=cv,f=k.convert(a.type)),a.format===cH&&6402===c&&(c=34041,a.type!==cA&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),a.type=cA,f=k.convert(a.type))),l&&(j?i.texStorage2D(3553,1,c,b.width,b.height):i.texImage2D(3553,0,c,b.width,b.height,0,e,f,null));else if(a.isDataTexture){if(g.length>0&&t){j&&l&&i.texStorage2D(3553,n,c,g[0].width,g[0].height);for(let u=0,J=g.length;u<J;u++)d=g[u],j?i.texSubImage2D(3553,u,0,0,d.width,d.height,e,f,d.data):i.texImage2D(3553,u,c,d.width,d.height,0,e,f,d.data);a.generateMipmaps=!1}else j?(l&&i.texStorage2D(3553,n,c,b.width,b.height),i.texSubImage2D(3553,0,0,0,b.width,b.height,e,f,b.data)):i.texImage2D(3553,0,c,b.width,b.height,0,e,f,b.data)}else if(a.isCompressedTexture){j&&l&&i.texStorage2D(3553,n,c,g[0].width,g[0].height);for(let o=0,K=g.length;o<K;o++)d=g[o],a.format!==cD?null!==e?j?i.compressedTexSubImage2D(3553,o,0,0,d.width,d.height,e,d.data):i.compressedTexImage2D(3553,o,c,d.width,d.height,0,d.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):j?i.texSubImage2D(3553,o,0,0,d.width,d.height,e,f,d.data):i.texImage2D(3553,o,c,d.width,d.height,0,e,f,d.data)}else if(a.isDataArrayTexture)j?(l&&i.texStorage3D(35866,n,c,b.width,b.height,b.depth),i.texSubImage3D(35866,0,0,0,0,b.width,b.height,b.depth,e,f,b.data)):i.texImage3D(35866,0,c,b.width,b.height,b.depth,0,e,f,b.data);else if(a.isData3DTexture)j?(l&&i.texStorage3D(32879,n,c,b.width,b.height,b.depth),i.texSubImage3D(32879,0,0,0,0,b.width,b.height,b.depth,e,f,b.data)):i.texImage3D(32879,0,c,b.width,b.height,b.depth,0,e,f,b.data);else if(a.isFramebufferTexture){if(l){if(j)i.texStorage2D(3553,n,c,b.width,b.height);else{let F=b.width,G=b.height;for(let x=0;x<n;x++)i.texImage2D(3553,x,c,F,G,0,e,f,null),F>>=1,G>>=1}}}else if(g.length>0&&t){j&&l&&i.texStorage2D(3553,n,c,g[0].width,g[0].height);for(let v=0,L=g.length;v<L;v++)d=g[v],j?i.texSubImage2D(3553,v,0,0,e,f,d):i.texImage2D(3553,v,c,e,f,d);a.generateMipmaps=!1}else j?(l&&i.texStorage2D(3553,n,c,b.width,b.height),i.texSubImage2D(3553,0,0,0,e,f,b)):i.texImage2D(3553,0,c,e,f,b);A(a,t)&&B(q),r.__currentVersion=r.version,a.onUpdate&&a.onUpdate(a)}w.__version=a.version}function e(m,a,b,f,c){let d=k.convert(b.format,b.encoding),e=k.convert(b.type),l=C(b.internalFormat,d,e,b.encoding),n=j.get(a);n.__hasExternalTextures||(32879===c||35866===c?i.texImage3D(c,0,l,a.width,a.height,a.depth,0,d,e,null):i.texImage2D(c,0,l,a.width,a.height,0,d,e,null)),i.bindFramebuffer(36160,m),g(a)?r.framebufferTexture2DMultisampleEXT(36160,f,c,j.get(b).__webglTexture,0,R(a)):h.framebufferTexture2D(36160,f,c,j.get(b).__webglTexture,0),i.bindFramebuffer(36160,null)}function Q(e,a,f){if(h.bindRenderbuffer(36161,e),a.depthBuffer&&!a.stencilBuffer){let b=33189;if(f||g(a)){let d=a.depthTexture;d&&d.isDepthTexture&&(d.type===cw?b=36012:d.type===cv&&(b=33190));let l=R(a);g(a)?r.renderbufferStorageMultisampleEXT(36161,l,b,a.width,a.height):h.renderbufferStorageMultisample(36161,l,b,a.width,a.height)}else h.renderbufferStorage(36161,b,a.width,a.height);h.framebufferRenderbuffer(36160,36096,36161,e)}else if(a.depthBuffer&&a.stencilBuffer){let m=R(a);f&& !1===g(a)?h.renderbufferStorageMultisample(36161,m,35056,a.width,a.height):g(a)?r.renderbufferStorageMultisampleEXT(36161,m,35056,a.width,a.height):h.renderbufferStorage(36161,34041,a.width,a.height),h.framebufferRenderbuffer(36160,33306,36161,e)}else{let n=!0===a.isWebGLMultipleRenderTargets?a.texture:[a.texture];for(let i=0;i<n.length;i++){let c=n[i],p=k.convert(c.format,c.encoding),q=k.convert(c.type),j=C(c.internalFormat,p,q,c.encoding),o=R(a);f&& !1===g(a)?h.renderbufferStorageMultisample(36161,o,j,a.width,a.height):g(a)?r.renderbufferStorageMultisampleEXT(36161,o,j,a.width,a.height):h.renderbufferStorage(36161,j,a.width,a.height)}}h.bindRenderbuffer(36161,null)}function f(b){let a=j.get(b),e=!0===b.isWebGLCubeRenderTarget;if(b.depthTexture&&!a.__autoAllocateDepthBuffer){if(e)throw Error("target.depthTexture not supported in Cube render targets");!function(e,a){let f=a&&a.isWebGLCubeRenderTarget;if(f)throw Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(36160,e),!(a.depthTexture&&a.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");j.get(a.depthTexture).__webglTexture&&a.depthTexture.image.width===a.width&&a.depthTexture.image.height===a.height||(a.depthTexture.image.width=a.width,a.depthTexture.image.height=a.height,a.depthTexture.needsUpdate=!0),d(a.depthTexture,0);let b=j.get(a.depthTexture).__webglTexture,c=R(a);if(a.depthTexture.format===cG)g(a)?r.framebufferTexture2DMultisampleEXT(36160,36096,3553,b,0,c):h.framebufferTexture2D(36160,36096,3553,b,0);else if(a.depthTexture.format===cH)g(a)?r.framebufferTexture2DMultisampleEXT(36160,33306,3553,b,0,c):h.framebufferTexture2D(36160,33306,3553,b,0);else throw Error("Unknown depthTexture format")}(a.__webglFramebuffer,b)}else if(e){a.__webglDepthbuffer=[];for(let c=0;c<6;c++)i.bindFramebuffer(36160,a.__webglFramebuffer[c]),a.__webglDepthbuffer[c]=h.createRenderbuffer(),Q(a.__webglDepthbuffer[c],b,!1)}else i.bindFramebuffer(36160,a.__webglFramebuffer),a.__webglDepthbuffer=h.createRenderbuffer(),Q(a.__webglDepthbuffer,b,!1);i.bindFramebuffer(36160,null)}function R(a){return Math.min(q,a.samples)}function g(a){let c=j.get(a);return m&&a.samples>0&& !0===b.has("WEBGL_multisampled_render_to_texture")&& !1!==c.__useRenderToTexture}function S(a){let b=l.render.frame;t.get(a)!==b&&(t.set(a,b),a.update())}function T(a,c){let d=a.encoding,e=a.format,f=a.type;return!0===a.isCompressedTexture|| !0===a.isVideoTexture||a.format===dW||d!==dn&&(d===dp?!1===m?!0===b.has("EXT_sRGB")&&e===cD?(a.format=dW,a.minFilter=aC,a.generateMipmaps=!1):c=ea.sRGBToLinear(c):(e!==cD||f!==cq)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",d)),c}this.allocateTextureUnit=function(){let a=K;return a>=n&&console.warn("THREE.WebGLTextures: Trying to use "+a+" texture units while this GPU supports only "+n),K+=1,a},this.resetTextureUnits=function(){K=0},this.setTexture2D=d,this.setTexture2DArray=function(a,c){let b=j.get(a);if(a.version>0&&b.__version!==a.version){P(b,a,c);return}i.activeTexture(33984+c),i.bindTexture(35866,b.__webglTexture)},this.setTexture3D=function(a,c){let b=j.get(a);if(a.version>0&&b.__version!==a.version){P(b,a,c);return}i.activeTexture(33984+c),i.bindTexture(32879,b.__webglTexture)},this.setTextureCube=function(a,c){let b=j.get(a);if(a.version>0&&b.__version!==a.version){(function M(w,a,K){if(6!==a.image.length)return;let G=O(w,a),s=a.source;if(i.activeTexture(33984+K),i.bindTexture(34067,w.__webglTexture),s.version!==s.__currentVersion|| !0===G){h.pixelStorei(37440,a.flipY),h.pixelStorei(37441,a.premultiplyAlpha),h.pixelStorei(3317,a.unpackAlignment),h.pixelStorei(37443,0);let H=a.isCompressedTexture||a.image[0].isCompressedTexture,x=a.image[0]&&a.image[0].isDataTexture,c=[];for(let g=0;g<6;g++)H||x?c[g]=x?a.image[g].image:a.image[g]:c[g]=y(a.image[g],!1,!0,o),c[g]=T(a,c[g]);let v=c[0],E=z(v)||m,d=k.convert(a.format,a.encoding),f=k.convert(a.type),l=C(a.internalFormat,d,f,a.encoding),n=m&& !0!==a.isVideoTexture,I=void 0===s.__currentVersion|| !0===G,F=D(a,v,E);N(34067,a,E);let j;if(H){n&&I&&i.texStorage2D(34067,F,l,v.width,v.height);for(let p=0;p<6;p++){j=c[p].mipmaps;for(let q=0;q<j.length;q++){let e=j[q];a.format!==cD?null!==d?n?i.compressedTexSubImage2D(34069+p,q,0,0,e.width,e.height,d,e.data):i.compressedTexImage2D(34069+p,q,l,e.width,e.height,0,e.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n?i.texSubImage2D(34069+p,q,0,0,e.width,e.height,d,f,e.data):i.texImage2D(34069+p,q,l,e.width,e.height,0,d,f,e.data)}}}else{j=a.mipmaps,n&&I&&(j.length>0&&F++,i.texStorage2D(34067,F,l,c[0].width,c[0].height));for(let b=0;b<6;b++)if(x){n?i.texSubImage2D(34069+b,0,0,0,c[b].width,c[b].height,d,f,c[b].data):i.texImage2D(34069+b,0,l,c[b].width,c[b].height,0,d,f,c[b].data);for(let t=0;t<j.length;t++){let L=j[t],r=L.image[b].image;n?i.texSubImage2D(34069+b,t+1,0,0,r.width,r.height,d,f,r.data):i.texImage2D(34069+b,t+1,l,r.width,r.height,0,d,f,r.data)}}else{n?i.texSubImage2D(34069+b,0,0,0,d,f,c[b]):i.texImage2D(34069+b,0,l,d,f,c[b]);for(let u=0;u<j.length;u++){let J=j[u];n?i.texSubImage2D(34069+b,u+1,0,0,d,f,J.image[b]):i.texImage2D(34069+b,u+1,l,d,f,J.image[b])}}}A(a,E)&&B(34067),s.__currentVersion=s.version,a.onUpdate&&a.onUpdate(a)}w.__version=a.version})(b,a,c);return}i.activeTexture(33984+c),i.bindTexture(34067,b.__webglTexture)},this.rebindTextures=function(a,b,c){let d=j.get(a);void 0!==b&&e(d.__webglFramebuffer,a,a.texture,36064,3553),void 0!==c&&f(a)},this.setupRenderTarget=function(b){let d=b.texture,c=j.get(b),p=j.get(d);b.addEventListener("dispose",G),!0!==b.isWebGLMultipleRenderTargets&&(void 0===p.__webglTexture&&(p.__webglTexture=h.createTexture()),p.__version=d.version,l.memory.textures++);let y=!0===b.isWebGLCubeRenderTarget,v=!0===b.isWebGLMultipleRenderTargets,o=z(b)||m;if(y){c.__webglFramebuffer=[];for(let w=0;w<6;w++)c.__webglFramebuffer[w]=h.createFramebuffer()}else{if(c.__webglFramebuffer=h.createFramebuffer(),v){if(a.drawBuffers){let D=b.texture;for(let x=0,I=D.length;x<I;x++){let E=j.get(D[x]);void 0===E.__webglTexture&&(E.__webglTexture=h.createTexture(),l.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.")}if(m&&b.samples>0&& !1===g(b)){let F=v?d:[d];c.__webglMultisampledFramebuffer=h.createFramebuffer(),c.__webglColorRenderbuffer=[],i.bindFramebuffer(36160,c.__webglMultisampledFramebuffer);for(let n=0;n<F.length;n++){let q=F[n];c.__webglColorRenderbuffer[n]=h.createRenderbuffer(),h.bindRenderbuffer(36161,c.__webglColorRenderbuffer[n]);let J=k.convert(q.format,q.encoding),K=k.convert(q.type),L=C(q.internalFormat,J,K,q.encoding),M=R(b);h.renderbufferStorageMultisample(36161,M,L,b.width,b.height),h.framebufferRenderbuffer(36160,36064+n,36161,c.__webglColorRenderbuffer[n])}h.bindRenderbuffer(36161,null),b.depthBuffer&&(c.__webglDepthRenderbuffer=h.createRenderbuffer(),Q(c.__webglDepthRenderbuffer,b,!0)),i.bindFramebuffer(36160,null)}}if(y){i.bindTexture(34067,p.__webglTexture),N(34067,d,o);for(let s=0;s<6;s++)e(c.__webglFramebuffer[s],b,d,36064,34069+s);A(d,o)&&B(34067),i.unbindTexture()}else if(v){let H=b.texture;for(let t=0,O=H.length;t<O;t++){let u=H[t],P=j.get(u);i.bindTexture(3553,P.__webglTexture),N(3553,u,o),e(c.__webglFramebuffer,b,u,36064+t,3553),A(u,o)&&B(3553)}i.unbindTexture()}else{let r=3553;(b.isWebGL3DRenderTarget||b.isWebGLArrayRenderTarget)&&(m?r=b.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),i.bindTexture(r,p.__webglTexture),N(r,d,o),e(c.__webglFramebuffer,b,d,36064,r),A(d,o)&&B(r),i.unbindTexture()}b.depthBuffer&&f(b)},this.updateRenderTargetMipmap=function(a){let f=z(a)||m,c=!0===a.isWebGLMultipleRenderTargets?a.texture:[a.texture];for(let b=0,g=c.length;b<g;b++){let d=c[b];if(A(d,f)){let e=a.isWebGLCubeRenderTarget?34067:3553,h=j.get(d).__webglTexture;i.bindTexture(e,h),B(e),i.unbindTexture()}}},this.updateMultisampleRenderTarget=function(a){if(m&&a.samples>0&& !1===g(a)){let d=a.isWebGLMultipleRenderTargets?a.texture:[a.texture],p=a.width,q=a.height,l=16384,n=[],o=a.stencilBuffer?33306:36096,b=j.get(a),f=!0===a.isWebGLMultipleRenderTargets;if(f)for(let k=0;k<d.length;k++)i.bindFramebuffer(36160,b.__webglMultisampledFramebuffer),h.framebufferRenderbuffer(36160,36064+k,36161,null),i.bindFramebuffer(36160,b.__webglFramebuffer),h.framebufferTexture2D(36009,36064+k,3553,null,0);i.bindFramebuffer(36008,b.__webglMultisampledFramebuffer),i.bindFramebuffer(36009,b.__webglFramebuffer);for(let e=0;e<d.length;e++){n.push(36064+e),a.depthBuffer&&n.push(o);let r=void 0!==b.__ignoreDepthValues&&b.__ignoreDepthValues;if(!1===r&&(a.depthBuffer&&(l|=256),a.stencilBuffer&&(l|=1024)),f&&h.framebufferRenderbuffer(36008,36064,36161,b.__webglColorRenderbuffer[e]),!0===r&&(h.invalidateFramebuffer(36008,[o]),h.invalidateFramebuffer(36009,[o])),f){let t=j.get(d[e]).__webglTexture;h.framebufferTexture2D(36009,36064,3553,t,0)}h.blitFramebuffer(0,0,p,q,0,0,p,q,l,9728),s&&h.invalidateFramebuffer(36008,n)}if(i.bindFramebuffer(36008,null),i.bindFramebuffer(36009,null),f)for(let c=0;c<d.length;c++){i.bindFramebuffer(36160,b.__webglMultisampledFramebuffer),h.framebufferRenderbuffer(36160,36064+c,36161,b.__webglColorRenderbuffer[c]);let u=j.get(d[c]).__webglTexture;i.bindFramebuffer(36160,b.__webglFramebuffer),h.framebufferTexture2D(36009,36064+c,3553,u,0)}i.bindFramebuffer(36009,b.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=f,this.setupFrameBufferTexture=e,this.useMultisampledRTT=g}function hX(b,c,a){let d=a.isWebGL2;return{convert:function(a,f=null){let e;if(a===cq)return 5121;if(a===cy)return 32819;if(a===cz)return 32820;if(a===cr)return 5120;if(a===cs)return 5122;if(a===ct)return 5123;if(a===cu)return 5124;if(a===cv)return 5125;if(a===cw)return 5126;if(a===cx)return d?5131:null!==(e=c.get("OES_texture_half_float"))?e.HALF_FLOAT_OES:null;if(a===cB)return 6406;if(a===cD)return 6408;if(a===cE)return 6409;if(a===cF)return 6410;if(a===cG)return 6402;if(a===cH)return 34041;if(a===cI)return 6403;if(a===cC)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(a===dW)return null!==(e=c.get("EXT_sRGB"))?e.SRGB_ALPHA_EXT:null;if(a===cJ)return 36244;if(a===cK)return 33319;if(a===cL)return 33320;if(a===cM)return 36249;if(a===cN||a===cO||a===cP||a===cQ){if(f===dp){if(null===(e=c.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(a===cN)return e.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(a===cO)return e.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(a===cP)return e.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(a===cQ)return e.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(e=c.get("WEBGL_compressed_texture_s3tc")))return null;if(a===cN)return e.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===cO)return e.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===cP)return e.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===cQ)return e.COMPRESSED_RGBA_S3TC_DXT5_EXT}}if(a===cR||a===cS||a===cT||a===cU){if(null===(e=c.get("WEBGL_compressed_texture_pvrtc")))return null;if(a===cR)return e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===cS)return e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===cT)return e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===cU)return e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(a===cV)return null!==(e=c.get("WEBGL_compressed_texture_etc1"))?e.COMPRESSED_RGB_ETC1_WEBGL:null;if(a===cW||a===cX){if(null===(e=c.get("WEBGL_compressed_texture_etc")))return null;if(a===cW)return f===dp?e.COMPRESSED_SRGB8_ETC2:e.COMPRESSED_RGB8_ETC2;if(a===cX)return f===dp?e.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:e.COMPRESSED_RGBA8_ETC2_EAC}if(a===cY||a===cZ||a===c$||a===c_||a===c0||a===c1||a===c2||a===c3||a===c4||a===c5||a===c6||a===c7||a===c8||a===c9){if(null===(e=c.get("WEBGL_compressed_texture_astc")))return null;if(a===cY)return f===dp?e.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:e.COMPRESSED_RGBA_ASTC_4x4_KHR;if(a===cZ)return f===dp?e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:e.COMPRESSED_RGBA_ASTC_5x4_KHR;if(a===c$)return f===dp?e.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:e.COMPRESSED_RGBA_ASTC_5x5_KHR;if(a===c_)return f===dp?e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:e.COMPRESSED_RGBA_ASTC_6x5_KHR;if(a===c0)return f===dp?e.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:e.COMPRESSED_RGBA_ASTC_6x6_KHR;if(a===c1)return f===dp?e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:e.COMPRESSED_RGBA_ASTC_8x5_KHR;if(a===c2)return f===dp?e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:e.COMPRESSED_RGBA_ASTC_8x6_KHR;if(a===c3)return f===dp?e.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:e.COMPRESSED_RGBA_ASTC_8x8_KHR;if(a===c4)return f===dp?e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:e.COMPRESSED_RGBA_ASTC_10x5_KHR;if(a===c5)return f===dp?e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:e.COMPRESSED_RGBA_ASTC_10x6_KHR;if(a===c6)return f===dp?e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:e.COMPRESSED_RGBA_ASTC_10x8_KHR;if(a===c7)return f===dp?e.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:e.COMPRESSED_RGBA_ASTC_10x10_KHR;if(a===c8)return f===dp?e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:e.COMPRESSED_RGBA_ASTC_12x10_KHR;if(a===c9)return f===dp?e.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:e.COMPRESSED_RGBA_ASTC_12x12_KHR}if(a===da){if(null===(e=c.get("EXT_texture_compression_bptc")))return null;if(a===da)return f===dp?e.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:e.COMPRESSED_RGBA_BPTC_UNORM_EXT}return a===cA?d?34042:null!==(e=c.get("WEBGL_depth_texture"))?e.UNSIGNED_INT_24_8_WEBGL:null:void 0!==b[a]?b[a]:null}}}class hY extends aW{constructor(a=[]){super(),this.isArrayCamera=!0,this.cameras=a}}class hZ extends f{constructor(){super(),this.isGroup=!0,this.type="Group"}}let h$={type:"move"};class h_{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new hZ,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new hZ,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new a,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new a),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new hZ,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new a,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new a),this._grip}dispatchEvent(a){return null!==this._targetRay&&this._targetRay.dispatchEvent(a),null!==this._grip&&this._grip.dispatchEvent(a),null!==this._hand&&this._hand.dispatchEvent(a),this}disconnect(a){return this.dispatchEvent({type:"disconnected",data:a}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(f,h,l){let d=null,e=null,m=null,a=this._targetRay,b=this._grip,c=this._hand;if(f&&"visible-blurred"!==h.session.visibilityState){if(c&&f.hand){for(let i of(m=!0,f.hand.values())){let j=h.getJointPose(i,l);if(void 0===c.joints[i.jointName]){let k=new hZ;k.matrixAutoUpdate=!1,k.visible=!1,c.joints[i.jointName]=k,c.add(k)}let g=c.joints[i.jointName];null!==j&&(g.matrix.fromArray(j.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.jointRadius=j.radius),g.visible=null!==j}let q=c.joints["index-finger-tip"],r=c.joints["thumb-tip"],n=q.position.distanceTo(r.position),o=.02,p=.005;c.inputState.pinching&&n>o+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:f.handedness,target:this})):!c.inputState.pinching&&n<=o-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:f.handedness,target:this}))}else null!==b&&f.gripSpace&&null!==(e=h.getPose(f.gripSpace,l))&&(b.matrix.fromArray(e.transform.matrix),b.matrix.decompose(b.position,b.rotation,b.scale),e.linearVelocity?(b.hasLinearVelocity=!0,b.linearVelocity.copy(e.linearVelocity)):b.hasLinearVelocity=!1,e.angularVelocity?(b.hasAngularVelocity=!0,b.angularVelocity.copy(e.angularVelocity)):b.hasAngularVelocity=!1);null!==a&&(null===(d=h.getPose(f.targetRaySpace,l))&&null!==e&&(d=e),null!==d&&(a.matrix.fromArray(d.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),d.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(d.linearVelocity)):a.hasLinearVelocity=!1,d.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(d.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(h$)))}return null!==a&&(a.visible=null!==d),null!==b&&(b.visible=null!==e),null!==c&&(c.visible=null!==m),this}}class h0 extends l{constructor(e,f,b,g,h,i,c,d,j,a){if((a=void 0!==a?a:cG)!==cG&&a!==cH)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===b&&a===cG&&(b=cv),void 0===b&&a===cH&&(b=cA),super(null,g,h,i,c,d,a,b,j),this.isDepthTexture=!0,this.image={width:e,height:f},this.magFilter=void 0!==c?c:az,this.minFilter=void 0!==d?d:az,this.flipY=!1,this.generateMipmaps=!1}}class h1 extends q{constructor(g,e){super();let h=this,i=null,j=1,k=null,l="local-floor",m=null,n=null,o=null,p=null,q=null,r=null,s=e.getContextAttributes(),t=null,u=null,v=[],w=[],b=new aW;b.layers.enable(1),b.viewport=new W;let c=new aW;c.layers.enable(2),c.viewport=new W;let x=[b,c],d=new hY;d.layers.enable(1),d.layers.enable(2);let z=null,A=null;function B(a){let b=w.indexOf(a.inputSource);if(-1===b)return;let c=v[b];void 0!==c&&c.dispatchEvent({type:a.type,data:a.inputSource})}function C(){i.removeEventListener("select",B),i.removeEventListener("selectstart",B),i.removeEventListener("selectend",B),i.removeEventListener("squeeze",B),i.removeEventListener("squeezestart",B),i.removeEventListener("squeezeend",B),i.removeEventListener("end",C),i.removeEventListener("inputsourceschange",D);for(let a=0;a<v.length;a++){let b=w[a];null!==b&&(w[a]=null,v[a].disconnect(b))}z=null,A=null,g.setRenderTarget(t),q=null,p=null,o=null,i=null,u=null,f.stop(),h.isPresenting=!1,h.dispatchEvent({type:"sessionend"})}function D(c){for(let e=0;e<c.removed.length;e++){let h=c.removed[e],f=w.indexOf(h);f>=0&&(w[f]=null,v[f].dispatchEvent({type:"disconnected",data:h}))}for(let g=0;g<c.added.length;g++){let d=c.added[g],b=w.indexOf(d);if(-1===b){for(let a=0;a<v.length;a++){if(a>=w.length){w.push(d),b=a;break}if(null===w[a]){w[a]=d,b=a;break}}if(-1===b)break}let i=v[b];i&&i.dispatchEvent({type:"connected",data:d})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(b){let a=v[b];return void 0===a&&(a=new h_,v[b]=a),a.getTargetRaySpace()},this.getControllerGrip=function(b){let a=v[b];return void 0===a&&(a=new h_,v[b]=a),a.getGripSpace()},this.getHand=function(b){let a=v[b];return void 0===a&&(a=new h_,v[b]=a),a.getHandSpace()},this.setFramebufferScaleFactor=function(a){j=a,!0===h.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(a){l=a,!0===h.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return m||k},this.setReferenceSpace=function(a){m=a},this.getBaseLayer=function(){return null!==p?p:q},this.getBinding=function(){return o},this.getFrame=function(){return r},this.getSession=function(){return i},this.setSession=async function(d){if(null!==(i=d)){if(t=g.getRenderTarget(),i.addEventListener("select",B),i.addEventListener("selectstart",B),i.addEventListener("selectend",B),i.addEventListener("squeeze",B),i.addEventListener("squeezestart",B),i.addEventListener("squeezeend",B),i.addEventListener("end",C),i.addEventListener("inputsourceschange",D),!0!==s.xrCompatible&&await e.makeXRCompatible(),void 0===i.renderState.layers|| !1===g.capabilities.isWebGL2){let n={antialias:void 0!==i.renderState.layers||s.antialias,alpha:s.alpha,depth:s.depth,stencil:s.stencil,framebufferScaleFactor:j};q=new XRWebGLLayer(i,e,n),i.updateRenderState({baseLayer:q}),u=new y(q.framebufferWidth,q.framebufferHeight,{format:cD,type:cq,encoding:g.outputEncoding})}else{let a=null,b=null,c=null;s.depth&&(c=s.stencil?35056:33190,a=s.stencil?cH:cG,b=s.stencil?cA:cv);let r={colorFormat:32856,depthFormat:c,scaleFactor:j};p=(o=new XRWebGLBinding(i,e)).createProjectionLayer(r),i.updateRenderState({layers:[p]}),u=new y(p.textureWidth,p.textureHeight,{format:cD,type:cq,depthTexture:new h0(p.textureWidth,p.textureHeight,b,void 0,void 0,void 0,void 0,void 0,void 0,a),stencilBuffer:s.stencil,encoding:g.outputEncoding,samples:s.antialias?4:0});let v=g.properties.get(u);v.__ignoreDepthValues=p.ignoreDepthValues}u.isXRRenderTarget=!0,this.setFoveation(1),m=null,k=await i.requestReferenceSpace(l),f.setContext(i),f.start(),h.isPresenting=!0,h.dispatchEvent({type:"sessionstart"})}};let E=new a,F=new a;function G(a,b){null===b?a.matrixWorld.copy(a.matrix):a.matrixWorld.multiplyMatrices(b.matrixWorld,a.matrix),a.matrixWorldInverse.copy(a.matrixWorld).invert()}this.updateCamera=function(a){if(null===i)return;d.near=c.near=b.near=a.near,d.far=c.far=b.far=a.far,(z!==d.near||A!==d.far)&&(i.updateRenderState({depthNear:d.near,depthFar:d.far}),z=d.near,A=d.far);let h=a.parent,e=d.cameras;G(d,h);for(let f=0;f<e.length;f++)G(e[f],h);d.matrixWorld.decompose(d.position,d.quaternion,d.scale),a.position.copy(d.position),a.quaternion.copy(d.quaternion),a.scale.copy(d.scale),a.matrix.copy(d.matrix),a.matrixWorld.copy(d.matrixWorld);let j=a.children;for(let g=0,k=j.length;g<k;g++)j[g].updateMatrixWorld(!0);2===e.length?function(a,d,k){E.setFromMatrixPosition(d.matrixWorld),F.setFromMatrixPosition(k.matrixWorld);let l=E.distanceTo(F),b=d.projectionMatrix.elements,m=k.projectionMatrix.elements,e=b[14]/(b[10]-1),f=b[14]/(b[10]+1),o=(b[9]+1)/b[5],p=(b[9]-1)/b[5],g=(b[8]-1)/b[0],n=(m[8]+1)/m[0],c=l/(-g+n),h=-(c*g);d.matrixWorld.decompose(a.position,a.quaternion,a.scale),a.translateX(h),a.translateZ(c),a.matrixWorld.compose(a.position,a.quaternion,a.scale),a.matrixWorldInverse.copy(a.matrixWorld).invert();let i=e+c,j=f+c;a.projectionMatrix.makePerspective(e*g-h,e*n+(l-h),o*f/j*i,p*f/j*i,i,j)}(d,b,c):d.projectionMatrix.copy(b.projectionMatrix)},this.getCamera=function(){return d},this.getFoveation=function(){return null!==p?p.fixedFoveation:null!==q?q.fixedFoveation:void 0},this.setFoveation=function(a){null!==p&&(p.fixedFoveation=a),null!==q&& void 0!==q.fixedFoveation&&(q.fixedFoveation=a)};let H=null,f=new f$;f.setAnimationLoop(function(y,e){if(n=e.getViewerPose(m||k),r=e,null!==n){let i=n.views;null!==q&&(g.setRenderTargetFramebuffer(u,q.framebuffer),g.setRenderTarget(u));let l=!1;i.length!==d.cameras.length&&(d.cameras.length=0,l=!0);for(let b=0;b<i.length;b++){let f=i[b],c=null;if(null!==q)c=q.getViewport(f);else{let j=o.getViewSubImage(p,f);c=j.viewport,0===b&&(g.setRenderTargetTextures(u,j.colorTexture,p.ignoreDepthValues?void 0:j.depthStencilTexture),g.setRenderTarget(u))}let a=x[b];void 0===a&&((a=new aW).layers.enable(b),a.viewport=new W,x[b]=a),a.matrix.fromArray(f.transform.matrix),a.projectionMatrix.fromArray(f.projectionMatrix),a.viewport.set(c.x,c.y,c.width,c.height),0===b&&d.matrix.copy(a.matrix),!0===l&&d.cameras.push(a)}}for(let h=0;h<v.length;h++){let s=w[h],t=v[h];null!==s&& void 0!==t&&t.update(s,e,m||k)}H&&H(y,e),r=null}),this.setAnimationLoop=function(a){H=a},this.dispose=function(){}}}function h2(a,b){function c(d,c){d.opacity.value=c.opacity,c.color&&d.diffuse.value.copy(c.color),c.emissive&&d.emissive.value.copy(c.emissive).multiplyScalar(c.emissiveIntensity),c.map&&(d.map.value=c.map),c.alphaMap&&(d.alphaMap.value=c.alphaMap),c.bumpMap&&(d.bumpMap.value=c.bumpMap,d.bumpScale.value=c.bumpScale,c.side===bH&&(d.bumpScale.value*=-1)),c.displacementMap&&(d.displacementMap.value=c.displacementMap,d.displacementScale.value=c.displacementScale,d.displacementBias.value=c.displacementBias),c.emissiveMap&&(d.emissiveMap.value=c.emissiveMap),c.normalMap&&(d.normalMap.value=c.normalMap,d.normalScale.value.copy(c.normalScale),c.side===bH&&d.normalScale.value.negate()),c.specularMap&&(d.specularMap.value=c.specularMap),c.alphaTest>0&&(d.alphaTest.value=c.alphaTest);let g=b.get(c).envMap;if(g&&(d.envMap.value=g,d.flipEnvMap.value=g.isCubeTexture&& !1===g.isRenderTargetTexture?-1:1,d.reflectivity.value=c.reflectivity,d.ior.value=c.ior,d.refractionRatio.value=c.refractionRatio),c.lightMap){d.lightMap.value=c.lightMap;let h=!0!==a.physicallyCorrectLights?Math.PI:1;d.lightMapIntensity.value=c.lightMapIntensity*h}c.aoMap&&(d.aoMap.value=c.aoMap,d.aoMapIntensity.value=c.aoMapIntensity);let e;c.map?e=c.map:c.specularMap?e=c.specularMap:c.displacementMap?e=c.displacementMap:c.normalMap?e=c.normalMap:c.bumpMap?e=c.bumpMap:c.roughnessMap?e=c.roughnessMap:c.metalnessMap?e=c.metalnessMap:c.alphaMap?e=c.alphaMap:c.emissiveMap?e=c.emissiveMap:c.clearcoatMap?e=c.clearcoatMap:c.clearcoatNormalMap?e=c.clearcoatNormalMap:c.clearcoatRoughnessMap?e=c.clearcoatRoughnessMap:c.iridescenceMap?e=c.iridescenceMap:c.iridescenceThicknessMap?e=c.iridescenceThicknessMap:c.specularIntensityMap?e=c.specularIntensityMap:c.specularColorMap?e=c.specularColorMap:c.transmissionMap?e=c.transmissionMap:c.thicknessMap?e=c.thicknessMap:c.sheenColorMap?e=c.sheenColorMap:c.sheenRoughnessMap&&(e=c.sheenRoughnessMap),void 0!==e&&(e.isWebGLRenderTarget&&(e=e.texture),!0===e.matrixAutoUpdate&&e.updateMatrix(),d.uvTransform.value.copy(e.matrix));let f;c.aoMap?f=c.aoMap:c.lightMap&&(f=c.lightMap),void 0!==f&&(f.isWebGLRenderTarget&&(f=f.texture),!0===f.matrixAutoUpdate&&f.updateMatrix(),d.uv2Transform.value.copy(f.matrix))}return{refreshFogUniforms:function(b,a){b.fogColor.value.copy(a.color),a.isFog?(b.fogNear.value=a.near,b.fogFar.value=a.far):a.isFogExp2&&(b.fogDensity.value=a.density)},refreshMaterialUniforms:function(f,d,B,C,D){var v,w,r,s,e,a,n,x,y,o,p,t,u,q,m,i,g,z,A,j,h;let k,l;d.isMeshBasicMaterial?c(f,d):d.isMeshLambertMaterial?c(f,d):d.isMeshToonMaterial?(c(f,d),v=f,(w=d).gradientMap&&(v.gradientMap.value=w.gradientMap)):d.isMeshPhongMaterial?(c(f,d),r=f,s=d,r.specular.value.copy(s.specular),r.shininess.value=Math.max(s.shininess,1e-4)):d.isMeshStandardMaterial?(c(f,d),function e(c,a){c.roughness.value=a.roughness,c.metalness.value=a.metalness,a.roughnessMap&&(c.roughnessMap.value=a.roughnessMap),a.metalnessMap&&(c.metalnessMap.value=a.metalnessMap);let d=b.get(a).envMap;d&&(c.envMapIntensity.value=a.envMapIntensity)}(f,d),d.isMeshPhysicalMaterial&&(e=f,a=d,n=D,e.ior.value=a.ior,a.sheen>0&&(e.sheenColor.value.copy(a.sheenColor).multiplyScalar(a.sheen),e.sheenRoughness.value=a.sheenRoughness,a.sheenColorMap&&(e.sheenColorMap.value=a.sheenColorMap),a.sheenRoughnessMap&&(e.sheenRoughnessMap.value=a.sheenRoughnessMap)),a.clearcoat>0&&(e.clearcoat.value=a.clearcoat,e.clearcoatRoughness.value=a.clearcoatRoughness,a.clearcoatMap&&(e.clearcoatMap.value=a.clearcoatMap),a.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=a.clearcoatRoughnessMap),a.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(a.clearcoatNormalScale),e.clearcoatNormalMap.value=a.clearcoatNormalMap,a.side===bH&&e.clearcoatNormalScale.value.negate())),a.iridescence>0&&(e.iridescence.value=a.iridescence,e.iridescenceIOR.value=a.iridescenceIOR,e.iridescenceThicknessMinimum.value=a.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=a.iridescenceThicknessRange[1],a.iridescenceMap&&(e.iridescenceMap.value=a.iridescenceMap),a.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=a.iridescenceThicknessMap)),a.transmission>0&&(e.transmission.value=a.transmission,e.transmissionSamplerMap.value=n.texture,e.transmissionSamplerSize.value.set(n.width,n.height),a.transmissionMap&&(e.transmissionMap.value=a.transmissionMap),e.thickness.value=a.thickness,a.thicknessMap&&(e.thicknessMap.value=a.thicknessMap),e.attenuationDistance.value=a.attenuationDistance,e.attenuationColor.value.copy(a.attenuationColor)),e.specularIntensity.value=a.specularIntensity,e.specularColor.value.copy(a.specularColor),a.specularIntensityMap&&(e.specularIntensityMap.value=a.specularIntensityMap),a.specularColorMap&&(e.specularColorMap.value=a.specularColorMap))):d.isMeshMatcapMaterial?(c(f,d),x=f,(y=d).matcap&&(x.matcap.value=y.matcap)):d.isMeshDepthMaterial?c(f,d):d.isMeshDistanceMaterial?(c(f,d),o=f,p=d,o.referencePosition.value.copy(p.referencePosition),o.nearDistance.value=p.nearDistance,o.farDistance.value=p.farDistance):d.isMeshNormalMaterial?c(f,d):d.isLineBasicMaterial?(t=f,u=d,t.diffuse.value.copy(u.color),t.opacity.value=u.opacity,d.isLineDashedMaterial&&(q=f,m=d,q.dashSize.value=m.dashSize,q.totalSize.value=m.dashSize+m.gapSize,q.scale.value=m.scale)):d.isPointsMaterial?(i=f,g=d,z=B,A=C,i.diffuse.value.copy(g.color),i.opacity.value=g.opacity,i.size.value=g.size*z,i.scale.value=.5*A,g.map&&(i.map.value=g.map),g.alphaMap&&(i.alphaMap.value=g.alphaMap),g.alphaTest>0&&(i.alphaTest.value=g.alphaTest),g.map?k=g.map:g.alphaMap&&(k=g.alphaMap),void 0!==k&&(!0===k.matrixAutoUpdate&&k.updateMatrix(),i.uvTransform.value.copy(k.matrix))):d.isSpriteMaterial?(j=f,h=d,j.diffuse.value.copy(h.color),j.opacity.value=h.opacity,j.rotation.value=h.rotation,h.map&&(j.map.value=h.map),h.alphaMap&&(j.alphaMap.value=h.alphaMap),h.alphaTest>0&&(j.alphaTest.value=h.alphaTest),h.map?l=h.map:h.alphaMap&&(l=h.alphaMap),void 0!==l&&(!0===l.matrixAutoUpdate&&l.updateMatrix(),j.uvTransform.value.copy(l.matrix))):d.isShadowMaterial?(f.color.value.copy(d.color),f.opacity.value=d.opacity):d.isShaderMaterial&&(d.uniformsNeedUpdate=!1)}}}function h3(a,c,b,d){let e={},f={},g=[],h=b.isWebGL2?a.getParameter(35375):0;function i(){for(let a=0;a<h;a++)if(-1===g.indexOf(a))return g.push(a),a;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function j(e,b,c){let a=e.value;if(void 0===c[b])return"number"==typeof a?c[b]=a:c[b]=a.clone(),!0;if("number"==typeof a){if(c[b]!==a)return c[b]=a,!0}else{let d=c[b];if(!1===d.equals(a))return d.copy(a),!0}return!1}function k(c){let b=c.value,a={boundary:0,storage:0};return"number"==typeof b?(a.boundary=4,a.storage=4):b.isVector2?(a.boundary=8,a.storage=8):b.isVector3||b.isColor?(a.boundary=16,a.storage=12):b.isVector4?(a.boundary=16,a.storage=16):b.isMatrix3?(a.boundary=48,a.storage=48):b.isMatrix4?(a.boundary=64,a.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),a}function l(c){let b=c.target;b.removeEventListener("dispose",l);let d=g.indexOf(b.__bindingPointIndex);g.splice(d,1),a.deleteBuffer(e[b.id]),delete e[b.id],delete f[b.id]}return{bind:function(a,b){let c=b.program;d.uniformBlockBinding(a,c)},update:function(b,m){let g=e[b.id];void 0===g&&(function l(f){let h=f.uniforms,a=0,c=16,b=0;for(let d=0,i=h.length;d<i;d++){let e=h[d],g=k(e);if(e.__data=new Float32Array(g.storage/Float32Array.BYTES_PER_ELEMENT),e.__offset=a,d>0){b=a%c;let j=c-b;0!==b&&j-g.boundary<0&&(a+=c-b,e.__offset=a)}a+=g.storage}return(b=a%c)>0&&(a+=c-b),f.__size=a,f.__cache={},this}(b),g=function g(b){let d=i();b.__bindingPointIndex=d;let c=a.createBuffer(),e=b.__size,f=b.usage;return a.bindBuffer(35345,c),a.bufferData(35345,e,f),a.bindBuffer(35345,null),a.bindBufferBase(35345,d,c),c}(b),e[b.id]=g,b.addEventListener("dispose",l));let n=m.program;d.updateUBOMapping(b,n);let h=c.render.frame;f[b.id]!==h&&(function m(d){let i=e[d.id],g=d.uniforms,k=d.__cache;a.bindBuffer(35345,i);for(let c=0,l=g.length;c<l;c++){let b=g[c];if(!0===j(b,c,k)){let f=b.value,h=b.__offset;"number"==typeof f?(b.__data[0]=f,a.bufferSubData(35345,h,b.__data)):(b.value.isMatrix3?(b.__data[0]=b.value.elements[0],b.__data[1]=b.value.elements[1],b.__data[2]=b.value.elements[2],b.__data[3]=b.value.elements[0],b.__data[4]=b.value.elements[3],b.__data[5]=b.value.elements[4],b.__data[6]=b.value.elements[5],b.__data[7]=b.value.elements[0],b.__data[8]=b.value.elements[6],b.__data[9]=b.value.elements[7],b.__data[10]=b.value.elements[8],b.__data[11]=b.value.elements[0]):f.toArray(b.__data),a.bufferSubData(35345,h,b.__data))}}a.bindBuffer(35345,null)}(b),f[b.id]=h)},dispose:function(){for(let b in e)a.deleteBuffer(e[b]);g=[],e={},f={}}}}function aZ(b={}){this.isWebGLRenderer=!0;let c=void 0!==b.canvas?b.canvas:function(){let a=d1("canvas");return a.style.display="block",a}(),f=void 0!==b.context?b.context:null,p=void 0===b.depth||b.depth,q=void 0===b.stencil||b.stencil,r=void 0!==b.antialias&&b.antialias,s=void 0===b.premultipliedAlpha||b.premultipliedAlpha,t=void 0!==b.preserveDrawingBuffer&&b.preserveDrawingBuffer,u=void 0!==b.powerPreference?b.powerPreference:"default",v=void 0!==b.failIfMajorPerformanceCaveat&&b.failIfMajorPerformanceCaveat,w;w=null!==f?f.getContextAttributes().alpha:void 0!==b.alpha&&b.alpha;let C=null,D=null,E=[],F=[];this.domElement=c,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=dn,this.physicallyCorrectLights=!1,this.toneMapping=cg,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});let i=this,G=!1,H=0,I=0,J=null,K=-1,L=null,M=new W,N=new W,O=null,k=c.width,l=c.height,P=1,Q=null,S=null,T=new W(0,0,k,l),U=new W(0,0,k,l),V=!1,X=new fZ,Y=!1,Z=!1,$=null,_=new e,aa=new j,ab=new a,ac={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ad(){return null===J?P:1}let d=f;function m(b,e){for(let a=0;a<b.length;a++){let f=b[a],d=c.getContext(f,e);if(null!==d)return d}return null}try{let x={alpha:!0,depth:p,stencil:q,antialias:r,premultipliedAlpha:s,preserveDrawingBuffer:t,powerPreference:u,failIfMajorPerformanceCaveat:v};if("setAttribute"in c&&c.setAttribute("data-engine",`three.js r${R}`),c.addEventListener("webglcontextlost",aC,!1),c.addEventListener("webglcontextrestored",aD,!1),c.addEventListener("webglcontextcreationerror",aF,!1),null===d){let g=["webgl2","webgl","experimental-webgl"];if(!0===i.isWebGL1Renderer&&g.shift(),d=m(g,x),null===d){if(m(g))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.")}}void 0===d.getShaderPrecisionFormat&&(d.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(n){throw console.error("THREE.WebGLRenderer: "+n.message),n}let ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB;function z(){ae=new gk(d),af=new f3(d,ae,b),ae.init(af),az=new hX(d,ae,af),ag=new hV(d,ae,af),ah=new gn,ai=new hH,aj=new hW(d,ae,ag,ai,af,az,ah),ak=new f5(i),al=new gj(i),am=new f_(d,af),aA=new f1(d,ae,am,af),an=new gl(d,am,ah,aA),ao=new gs(d,an,am,ah),aw=new gr(d,af,aj),at=new f4(ai),ap=new hG(i,ak,al,ae,af,aA,at),aq=new h2(i,ai),ar=new hL,as=new hR(ae,af),av=new f0(i,ak,ag,ao,w,s),au=new hU(i,ao,af),aB=new h3(d,ah,af,ag),ax=new f2(d,ae,ah,af),ay=new gm(d,ae,ah,af),ah.programs=ap.programs,i.capabilities=af,i.extensions=ae,i.properties=ai,i.renderLists=ar,i.shadowMap=au,i.state=ag,i.info=ah}z();let h=new h1(i,d);function aC(a){a.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),G=!0}function aD(){console.log("THREE.WebGLRenderer: Context Restored."),G=!1;let a=ah.autoReset,b=au.enabled,c=au.autoUpdate,d=au.needsUpdate,e=au.type;z(),ah.autoReset=a,au.enabled=b,au.autoUpdate=c,au.needsUpdate=d,au.type=e}function aF(a){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",a.statusMessage)}function aG(b){let a=b.target;a.removeEventListener("dispose",aG),aH(a)}function aH(a){aI(a),ai.remove(a)}function aI(a){let b=ai.get(a).programs;void 0!==b&&(b.forEach(function(a){ap.releaseProgram(a)}),a.isShaderMaterial&&ap.releaseShaderCache(a))}this.xr=h,this.getContext=function(){return d},this.getContextAttributes=function(){return d.getContextAttributes()},this.forceContextLoss=function(){let a=ae.get("WEBGL_lose_context");a&&a.loseContext()},this.forceContextRestore=function(){let a=ae.get("WEBGL_lose_context");a&&a.restoreContext()},this.getPixelRatio=function(){return P},this.setPixelRatio=function(a){void 0!==a&&(P=a,this.setSize(k,l,!1))},this.getSize=function(a){return a.set(k,l)},this.setSize=function(a,b,d){if(h.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}k=a,l=b,c.width=Math.floor(a*P),c.height=Math.floor(b*P),!1!==d&&(c.style.width=a+"px",c.style.height=b+"px"),this.setViewport(0,0,a,b)},this.getDrawingBufferSize=function(a){return a.set(k*P,l*P).floor()},this.setDrawingBufferSize=function(a,b,d){k=a,l=b,P=d,c.width=Math.floor(a*d),c.height=Math.floor(b*d),this.setViewport(0,0,a,b)},this.getCurrentViewport=function(a){return a.copy(M)},this.getViewport=function(a){return a.copy(T)},this.setViewport=function(a,b,c,d){a.isVector4?T.set(a.x,a.y,a.z,a.w):T.set(a,b,c,d),ag.viewport(M.copy(T).multiplyScalar(P).floor())},this.getScissor=function(a){return a.copy(U)},this.setScissor=function(a,b,c,d){a.isVector4?U.set(a.x,a.y,a.z,a.w):U.set(a,b,c,d),ag.scissor(N.copy(U).multiplyScalar(P).floor())},this.getScissorTest=function(){return V},this.setScissorTest=function(a){ag.setScissorTest(V=a)},this.setOpaqueSort=function(a){Q=a},this.setTransparentSort=function(a){S=a},this.getClearColor=function(a){return a.copy(av.getClearColor())},this.setClearColor=function(){av.setClearColor.apply(av,arguments)},this.getClearAlpha=function(){return av.getClearAlpha()},this.setClearAlpha=function(){av.setClearAlpha.apply(av,arguments)},this.clear=function(b=!0,c=!0,e=!0){let a=0;b&&(a|=16384),c&&(a|=256),e&&(a|=1024),d.clear(a)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){c.removeEventListener("webglcontextlost",aC,!1),c.removeEventListener("webglcontextrestored",aD,!1),c.removeEventListener("webglcontextcreationerror",aF,!1),ar.dispose(),as.dispose(),ai.dispose(),ak.dispose(),al.dispose(),ao.dispose(),aA.dispose(),aB.dispose(),ap.dispose(),h.dispose(),h.removeEventListener("sessionstart",A),h.removeEventListener("sessionend",B),$&&($.dispose(),$=null),o.stop()},this.renderBufferDirect=function(p,j,c,e,a,g){null===j&&(j=ac);let q=a.isMesh&&0>a.matrixWorld.determinant(),r=aS(p,j,c,e,a);ag.setMaterial(e,q);let d=c.index,k=c.attributes.position;if(null===d){if(void 0===k||0===k.count)return}else if(0===d.count)return;let f=1;!0===e.wireframe&&(d=an.getWireframeAttribute(c),f=2),aA.setup(a,e,r,c,d);let m,b=ax;null!==d&&(m=am.get(d),(b=ay).setIndex(m));let s=null!==d?d.count:k.count,n=c.drawRange.start*f,t=c.drawRange.count*f,o=null!==g?g.start*f:0,u=null!==g?g.count*f:1/0,h=Math.max(n,o),i=Math.max(0,Math.min(s,n+t,o+u)-1-h+1);if(0!==i){if(a.isMesh)!0===e.wireframe?(ag.setLineWidth(e.wireframeLinewidth*ad()),b.setMode(1)):b.setMode(4);else if(a.isLine){let l=e.linewidth;void 0===l&&(l=1),ag.setLineWidth(l*ad()),a.isLineSegments?b.setMode(1):a.isLineLoop?b.setMode(2):b.setMode(3)}else a.isPoints?b.setMode(0):a.isSprite&&b.setMode(4);if(a.isInstancedMesh)b.renderInstances(h,i,a.count);else if(c.isInstancedBufferGeometry){let v=Math.min(c.instanceCount,c._maxInstanceCount);b.renderInstances(h,i,v)}else b.render(h,i)}},this.compile=function(a,b){(D=as.get(a)).init(),F.push(D),a.traverseVisible(function(a){a.isLight&&a.layers.test(b.layers)&&(D.pushLight(a),a.castShadow&&D.pushShadow(a))}),D.setupLights(i.physicallyCorrectLights),a.traverse(function(c){let b=c.material;if(b){if(Array.isArray(b))for(let d=0;d<b.length;d++){let e=b[d];aQ(e,a,c)}else aQ(b,a,c)}}),F.pop(),D=null};let aJ=null;function A(){o.stop()}function B(){o.start()}let o=new f$;function aK(a,d,b,e){if(!1===a.visible)return;let n=a.layers.test(d.layers);if(n){if(a.isGroup)b=a.renderOrder;else if(a.isLOD)!0===a.autoUpdate&&a.update(d);else if(a.isLight)D.pushLight(a),a.castShadow&&D.pushShadow(a);else if(a.isSprite){if(!a.frustumCulled||X.intersectsSprite(a)){e&&ab.setFromMatrixPosition(a.matrixWorld).applyMatrix4(_);let o=ao.update(a),j=a.material;j.visible&&C.push(a,o,j,b,ab.z,null)}}else if((a.isMesh||a.isLine||a.isPoints)&&(a.isSkinnedMesh&&a.skeleton.frame!==ah.render.frame&&(a.skeleton.update(),a.skeleton.frame=ah.render.frame),!a.frustumCulled||X.intersectsObject(a))){e&&ab.setFromMatrixPosition(a.matrixWorld).applyMatrix4(_);let f=ao.update(a),c=a.material;if(Array.isArray(c)){let k=f.groups;for(let g=0,p=k.length;g<p;g++){let l=k[g],h=c[l.materialIndex];h&&h.visible&&C.push(a,f,h,b,ab.z,l)}}else c.visible&&C.push(a,f,c,b,ab.z,null)}}let m=a.children;for(let i=0,q=m.length;i<q;i++)aK(m[i],d,b,e)}function aL(c,b,a,f){let d=c.opaque,e=c.transmissive,g=c.transparent;D.setupLightsView(a),e.length>0&&aM(d,b,a),f&&ag.viewport(M.copy(f)),d.length>0&&aN(d,b,a),e.length>0&&aN(e,b,a),g.length>0&&aN(g,b,a),ag.buffers.depth.setTest(!0),ag.buffers.depth.setMask(!0),ag.buffers.color.setMask(!0),ag.setPolygonOffset(!1)}function aM(b,c,d){let a=af.isWebGL2;null===$&&($=new y(1,1,{generateMipmaps:!0,type:ae.has("EXT_color_buffer_half_float")?cx:cq,minFilter:aE,samples:a&& !0===r?4:0})),i.getDrawingBufferSize(aa),a?$.setSize(aa.x,aa.y):$.setSize(aP(aa.x),aP(aa.y));let e=i.getRenderTarget();i.setRenderTarget($),i.clear();let f=i.toneMapping;i.toneMapping=cg,aN(b,c,d),i.toneMapping=f,aj.updateMultisampleRenderTarget($),aj.updateRenderTargetMipmap($),i.setRenderTarget(e)}function aN(d,b,e){let f=!0===b.isScene?b.overrideMaterial:null;for(let c=0,h=d.length;c<h;c++){let a=d[c],g=a.object,i=a.geometry,j=null===f?a.material:f,k=a.group;g.layers.test(e.layers)&&aO(g,b,e,i,j,k)}}function aO(b,d,c,e,a,f){b.onBeforeRender(i,d,c,e,a,f),b.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,b.matrixWorld),b.normalMatrix.getNormalMatrix(b.modelViewMatrix),a.onBeforeRender(i,d,c,e,b,f),!0===a.transparent&&a.side===bI?(a.side=bH,a.needsUpdate=!0,i.renderBufferDirect(c,d,e,a,b,f),a.side=bG,a.needsUpdate=!0,i.renderBufferDirect(c,d,e,a,b,f),a.side=bI):i.renderBufferDirect(c,d,e,a,b,f),b.onAfterRender(i,d,c,e,a,f)}function aQ(c,g,k){!0!==g.isScene&&(g=ac);let d=ai.get(c),a=D.state.lights,m=D.state.shadowsArray,l=a.state.version,e=ap.getParameters(c,a.state,m,g,k),j=ap.getProgramCacheKey(e),h=d.programs;d.environment=c.isMeshStandardMaterial?g.environment:null,d.fog=g.fog,d.envMap=(c.isMeshStandardMaterial?al:ak).get(c.envMap||d.environment),void 0===h&&(c.addEventListener("dispose",aG),h=new Map,d.programs=h);let f=h.get(j);if(void 0!==f){if(d.currentProgram===f&&d.lightsStateVersion===l)return aR(c,e),f}else e.uniforms=ap.getUniforms(c),c.onBuild(k,e,i),c.onBeforeCompile(e,i),f=ap.acquireProgram(e,j),h.set(j,f),d.uniforms=e.uniforms;let b=d.uniforms;(c.isShaderMaterial||c.isRawShaderMaterial)&& !0!==c.clipping||(b.clippingPlanes=at.uniform),aR(c,e),d.needsLights=aU(c),d.lightsStateVersion=l,d.needsLights&&(b.ambientLightColor.value=a.state.ambient,b.lightProbe.value=a.state.probe,b.directionalLights.value=a.state.directional,b.directionalLightShadows.value=a.state.directionalShadow,b.spotLights.value=a.state.spot,b.spotLightShadows.value=a.state.spotShadow,b.rectAreaLights.value=a.state.rectArea,b.ltc_1.value=a.state.rectAreaLTC1,b.ltc_2.value=a.state.rectAreaLTC2,b.pointLights.value=a.state.point,b.pointLightShadows.value=a.state.pointShadow,b.hemisphereLights.value=a.state.hemi,b.directionalShadowMap.value=a.state.directionalShadowMap,b.directionalShadowMatrix.value=a.state.directionalShadowMatrix,b.spotShadowMap.value=a.state.spotShadowMap,b.spotShadowMatrix.value=a.state.spotShadowMatrix,b.pointShadowMap.value=a.state.pointShadowMap,b.pointShadowMatrix.value=a.state.pointShadowMatrix);let n=f.getUniforms(),o=hm.seqWithValue(n.seq,b);return d.currentProgram=f,d.uniformsList=o,f}function aR(c,a){let b=ai.get(c);b.outputEncoding=a.outputEncoding,b.instancing=a.instancing,b.skinning=a.skinning,b.morphTargets=a.morphTargets,b.morphNormals=a.morphNormals,b.morphColors=a.morphColors,b.morphTargetsCount=a.morphTargetsCount,b.numClippingPlanes=a.numClippingPlanes,b.numIntersection=a.numClipIntersection,b.vertexAlphas=a.vertexAlphas,b.vertexTangents=a.vertexTangents,b.toneMapping=a.toneMapping}function aS(g,k,h,a,c){!0!==k.isScene&&(k=ac),aj.resetTextureUnits();let p=k.fog,y=a.isMeshStandardMaterial?k.environment:null,z=null===J?i.outputEncoding:!0===J.isXRRenderTarget?J.texture.encoding:dn,A=(a.isMeshStandardMaterial?al:ak).get(a.envMap||y),B=!0===a.vertexColors&&!!h.attributes.color&&4===h.attributes.color.itemSize,C=!!a.normalMap&&!!h.attributes.tangent,E=!!h.morphAttributes.position,F=!!h.morphAttributes.normal,G=!!h.morphAttributes.color,H=a.toneMapped?i.toneMapping:cg,t=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,I=void 0!==t?t.length:0,b=ai.get(a),M=D.state.lights;if(!0===Y&&(!0===Z||g!==L)){let N=g===L&&a.id===K;at.setState(a,g,N)}let e=!1;a.version===b.__version?b.needsLights&&b.lightsStateVersion!==M.state.version?e=!0:b.outputEncoding!==z?e=!0:c.isInstancedMesh&& !1===b.instancing?e=!0:c.isInstancedMesh|| !0!==b.instancing?c.isSkinnedMesh&& !1===b.skinning?e=!0:c.isSkinnedMesh|| !0!==b.skinning?b.envMap!==A?e=!0:!0===a.fog&&b.fog!==p?e=!0:void 0!==b.numClippingPlanes&&(b.numClippingPlanes!==at.numPlanes||b.numIntersection!==at.numIntersection)?e=!0:b.vertexAlphas!==B?e=!0:b.vertexTangents!==C?e=!0:b.morphTargets!==E?e=!0:b.morphNormals!==F?e=!0:b.morphColors!==G?e=!0:b.toneMapping!==H?e=!0:!0===af.isWebGL2&&b.morphTargetsCount!==I&&(e=!0):e=!0:e=!0:(e=!0,b.__version=a.version);let j=b.currentProgram;!0===e&&(j=aQ(a,k,c));let u=!1,m=!1,q=!1,f=j.getUniforms(),n=b.uniforms;if(ag.useProgram(j.program)&&(u=!0,m=!0,q=!0),a.id!==K&&(K=a.id,m=!0),u||L!==g){if(f.setValue(d,"projectionMatrix",g.projectionMatrix),af.logarithmicDepthBuffer&&f.setValue(d,"logDepthBufFC",2/(Math.log(g.far+1)/Math.LN2)),L!==g&&(L=g,m=!0,q=!0),a.isShaderMaterial||a.isMeshPhongMaterial||a.isMeshToonMaterial||a.isMeshStandardMaterial||a.envMap){let v=f.map.cameraPosition;void 0!==v&&v.setValue(d,ab.setFromMatrixPosition(g.matrixWorld))}(a.isMeshPhongMaterial||a.isMeshToonMaterial||a.isMeshLambertMaterial||a.isMeshBasicMaterial||a.isMeshStandardMaterial||a.isShaderMaterial)&&f.setValue(d,"isOrthographic",!0===g.isOrthographicCamera),(a.isMeshPhongMaterial||a.isMeshToonMaterial||a.isMeshLambertMaterial||a.isMeshBasicMaterial||a.isMeshStandardMaterial||a.isShaderMaterial||a.isShadowMaterial||c.isSkinnedMesh)&&f.setValue(d,"viewMatrix",g.matrixWorldInverse)}if(c.isSkinnedMesh){f.setOptional(d,c,"bindMatrix"),f.setOptional(d,c,"bindMatrixInverse");let o=c.skeleton;o&&(af.floatVertexTextures?(null===o.boneTexture&&o.computeBoneTexture(),f.setValue(d,"boneTexture",o.boneTexture,aj),f.setValue(d,"boneTextureSize",o.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}let r=h.morphAttributes;if((void 0!==r.position|| void 0!==r.normal|| void 0!==r.color&& !0===af.isWebGL2)&&aw.update(c,h,a,j),(m||b.receiveShadow!==c.receiveShadow)&&(b.receiveShadow=c.receiveShadow,f.setValue(d,"receiveShadow",c.receiveShadow)),m&&(f.setValue(d,"toneMappingExposure",i.toneMappingExposure),b.needsLights&&aT(n,q),p&& !0===a.fog&&aq.refreshFogUniforms(n,p),aq.refreshMaterialUniforms(n,a,P,l,$),hm.upload(d,b.uniformsList,n,aj)),a.isShaderMaterial&& !0===a.uniformsNeedUpdate&&(hm.upload(d,b.uniformsList,n,aj),a.uniformsNeedUpdate=!1),a.isSpriteMaterial&&f.setValue(d,"center",c.center),f.setValue(d,"modelViewMatrix",c.modelViewMatrix),f.setValue(d,"normalMatrix",c.normalMatrix),f.setValue(d,"modelMatrix",c.matrixWorld),a.isShaderMaterial||a.isRawShaderMaterial){let w=a.uniformsGroups;for(let s=0,O=w.length;s<O;s++)if(af.isWebGL2){let x=w[s];aB.update(x,j),aB.bind(x,j)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return j}function aT(a,b){a.ambientLightColor.needsUpdate=b,a.lightProbe.needsUpdate=b,a.directionalLights.needsUpdate=b,a.directionalLightShadows.needsUpdate=b,a.pointLights.needsUpdate=b,a.pointLightShadows.needsUpdate=b,a.spotLights.needsUpdate=b,a.spotLightShadows.needsUpdate=b,a.rectAreaLights.needsUpdate=b,a.hemisphereLights.needsUpdate=b}function aU(a){return a.isMeshLambertMaterial||a.isMeshToonMaterial||a.isMeshPhongMaterial||a.isMeshStandardMaterial||a.isShadowMaterial||a.isShaderMaterial&& !0===a.lights}o.setAnimationLoop(function(a){aJ&&aJ(a)}),"undefined"!=typeof self&&o.setContext(self),this.setAnimationLoop=function(a){aJ=a,h.setAnimationLoop(a),null===a?o.stop():o.start()},h.addEventListener("sessionstart",A),h.addEventListener("sessionend",B),this.render=function(b,a){if(void 0!==a&& !0!==a.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!0===G)return;!0===b.autoUpdate&&b.updateMatrixWorld(),null===a.parent&&a.updateMatrixWorld(),!0===h.enabled&& !0===h.isPresenting&&(!0===h.cameraAutoUpdate&&h.updateCamera(a),a=h.getCamera()),!0===b.isScene&&b.onBeforeRender(i,b,a,J),(D=as.get(b,F.length)).init(),F.push(D),_.multiplyMatrices(a.projectionMatrix,a.matrixWorldInverse),X.setFromProjectionMatrix(_),Z=this.localClippingEnabled,Y=at.init(this.clippingPlanes,Z,a),(C=ar.get(b,E.length)).init(),E.push(C),aK(b,a,0,i.sortObjects),C.finish(),!0===i.sortObjects&&C.sort(Q,S),!0===Y&&at.beginShadows();let f=D.state.shadowsArray;if(au.render(f,b,a),!0===Y&&at.endShadows(),!0===this.info.autoReset&&this.info.reset(),av.render(C,b),D.setupLights(i.physicallyCorrectLights),a.isArrayCamera){let d=a.cameras;for(let c=0,g=d.length;c<g;c++){let e=d[c];aL(C,b,e,e.viewport)}}else aL(C,b,a);null!==J&&(aj.updateMultisampleRenderTarget(J),aj.updateRenderTargetMipmap(J)),!0===b.isScene&&b.onAfterRender(i,b,a),aA.resetDefaultState(),K=-1,L=null,F.pop(),D=F.length>0?F[F.length-1]:null,E.pop(),C=E.length>0?E[E.length-1]:null},this.getActiveCubeFace=function(){return H},this.getActiveMipmapLevel=function(){return I},this.getRenderTarget=function(){return J},this.setRenderTargetTextures=function(b,d,c){ai.get(b.texture).__webglTexture=d,ai.get(b.depthTexture).__webglTexture=c;let a=ai.get(b);a.__hasExternalTextures=!0,a.__hasExternalTextures&&(a.__autoAllocateDepthBuffer=void 0===c,a.__autoAllocateDepthBuffer|| !0!==ae.has("WEBGL_multisampled_render_to_texture")||(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),a.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(c,a){let b=ai.get(c);b.__webglFramebuffer=a,b.__useDefaultFramebuffer=void 0===a},this.setRenderTarget=function(a,b=0,e=0){J=a,H=b,I=e;let g=!0;if(a){let f=ai.get(a);void 0!==f.__useDefaultFramebuffer?(ag.bindFramebuffer(36160,null),g=!1):void 0===f.__webglFramebuffer?aj.setupRenderTarget(a):f.__hasExternalTextures&&aj.rebindTextures(a,ai.get(a.texture).__webglTexture,ai.get(a.depthTexture).__webglTexture)}let c=null,h=!1,i=!1;if(a){let j=a.texture;(j.isData3DTexture||j.isDataArrayTexture)&&(i=!0);let k=ai.get(a).__webglFramebuffer;a.isWebGLCubeRenderTarget?(c=k[b],h=!0):c=af.isWebGL2&&a.samples>0&& !1===aj.useMultisampledRTT(a)?ai.get(a).__webglMultisampledFramebuffer:k,M.copy(a.viewport),N.copy(a.scissor),O=a.scissorTest}else M.copy(T).multiplyScalar(P).floor(),N.copy(U).multiplyScalar(P).floor(),O=V;let l=ag.bindFramebuffer(36160,c);if(l&&af.drawBuffers&&g&&ag.drawBuffers(a,c),ag.viewport(M),ag.scissor(N),ag.setScissorTest(O),h){let m=ai.get(a.texture);d.framebufferTexture2D(36160,36064,34069+b,m.__webglTexture,e)}else if(i){let n=ai.get(a.texture),o=b||0;d.framebufferTextureLayer(36160,36064,n.__webglTexture,e||0,o)}K=-1},this.readRenderTargetPixels=function(a,e,f,h,i,l,j){if(!(a&&a.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let c=ai.get(a).__webglFramebuffer;if(a.isWebGLCubeRenderTarget&& void 0!==j&&(c=c[j]),c){ag.bindFramebuffer(36160,c);try{let k=a.texture,g=k.format,b=k.type;if(g!==cD&&az.convert(g)!==d.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let m=b===cx&&(ae.has("EXT_color_buffer_half_float")||af.isWebGL2&&ae.has("EXT_color_buffer_float"));if(b!==cq&&az.convert(b)!==d.getParameter(35738)&&!(b===cw&&(af.isWebGL2||ae.has("OES_texture_float")||ae.has("WEBGL_color_buffer_float")))&&!m){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}e>=0&&e<=a.width-h&&f>=0&&f<=a.height-i&&d.readPixels(e,f,h,i,az.convert(g),az.convert(b),l)}finally{let n=null!==J?ai.get(J).__webglFramebuffer:null;ag.bindFramebuffer(36160,n)}}},this.copyFramebufferToTexture=function(b,a,c=0){let e=Math.pow(2,-c),f=Math.floor(a.image.width*e),g=Math.floor(a.image.height*e);aj.setTexture2D(a,0),d.copyTexSubImage2D(3553,c,0,0,b.x,b.y,f,g),ag.unbindTexture()},this.copyTextureToTexture=function(c,a,b,e=0){let h=a.image.width,i=a.image.height,f=az.convert(b.format),g=az.convert(b.type);aj.setTexture2D(b,0),d.pixelStorei(37440,b.flipY),d.pixelStorei(37441,b.premultiplyAlpha),d.pixelStorei(3317,b.unpackAlignment),a.isDataTexture?d.texSubImage2D(3553,e,c.x,c.y,h,i,f,g,a.image.data):a.isCompressedTexture?d.compressedTexSubImage2D(3553,e,c.x,c.y,a.mipmaps[0].width,a.mipmaps[0].height,f,a.mipmaps[0].data):d.texSubImage2D(3553,e,c.x,c.y,f,g,a.image),0===e&&b.generateMipmaps&&d.generateMipmap(3553),ag.unbindTexture()},this.copyTextureToTexture3D=function(b,c,e,a,h=0){if(i.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}let j=b.max.x-b.min.x+1,k=b.max.y-b.min.y+1,l=b.max.z-b.min.z+1,m=az.convert(a.format),n=az.convert(a.type),f;if(a.isData3DTexture)aj.setTexture3D(a,0),f=32879;else if(a.isDataArrayTexture)aj.setTexture2DArray(a,0),f=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}d.pixelStorei(37440,a.flipY),d.pixelStorei(37441,a.premultiplyAlpha),d.pixelStorei(3317,a.unpackAlignment);let o=d.getParameter(3314),p=d.getParameter(32878),q=d.getParameter(3316),r=d.getParameter(3315),s=d.getParameter(32877),g=e.isCompressedTexture?e.mipmaps[0]:e.image;d.pixelStorei(3314,g.width),d.pixelStorei(32878,g.height),d.pixelStorei(3316,b.min.x),d.pixelStorei(3315,b.min.y),d.pixelStorei(32877,b.min.z),e.isDataTexture||e.isData3DTexture?d.texSubImage3D(f,h,c.x,c.y,c.z,j,k,l,m,n,g.data):e.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),d.compressedTexSubImage3D(f,h,c.x,c.y,c.z,j,k,l,m,g.data)):d.texSubImage3D(f,h,c.x,c.y,c.z,j,k,l,m,n,g),d.pixelStorei(3314,o),d.pixelStorei(32878,p),d.pixelStorei(3316,q),d.pixelStorei(3315,r),d.pixelStorei(32877,s),0===h&&a.generateMipmaps&&d.generateMipmap(f),ag.unbindTexture()},this.initTexture=function(a){a.isCubeTexture?aj.setTextureCube(a,0):a.isData3DTexture?aj.setTexture3D(a,0):a.isDataArrayTexture?aj.setTexture2DArray(a,0):aj.setTexture2D(a,0),ag.unbindTexture()},this.resetState=function(){H=0,I=0,J=null,ag.reset(),aA.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class a$ extends aZ{}a$.prototype.isWebGL1Renderer=!0;class h4{constructor(a,b=25e-5){this.isFogExp2=!0,this.name="",this.color=new h(a),this.density=b}clone(){return new h4(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class h5{constructor(a,b=1,c=1e3){this.isFog=!0,this.name="",this.color=new h(a),this.near=b,this.far=c}clone(){return new h5(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class h6 extends f{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(a,b){return super.copy(a,b),null!==a.background&&(this.background=a.background.clone()),null!==a.environment&&(this.environment=a.environment.clone()),null!==a.fog&&(this.fog=a.fog.clone()),null!==a.overrideMaterial&&(this.overrideMaterial=a.overrideMaterial.clone()),this.autoUpdate=a.autoUpdate,this.matrixAutoUpdate=a.matrixAutoUpdate,this}toJSON(b){let a=super.toJSON(b);return null!==this.fog&&(a.object.fog=this.fog.toJSON()),a}}class a_{constructor(a,b){this.isInterleavedBuffer=!0,this.array=a,this.stride=b,this.count=void 0!==a?a.length/b:0,this.usage=dL,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=aH()}onUploadCallback(){}set needsUpdate(a){!0===a&&this.version++}setUsage(a){return this.usage=a,this}copy(a){return this.array=new a.array.constructor(a.array),this.count=a.count,this.stride=a.stride,this.usage=a.usage,this}copyAt(b,c,d){b*=this.stride,d*=c.stride;for(let a=0,e=this.stride;a<e;a++)this.array[b+a]=c.array[d+a];return this}set(a,b=0){return this.array.set(a,b),this}clone(a){void 0===a.arrayBuffers&&(a.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=aH()),void 0===a.arrayBuffers[this.array.buffer._uuid]&&(a.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);let c=new this.array.constructor(a.arrayBuffers[this.array.buffer._uuid]),b=new this.constructor(c,this.stride);return b.setUsage(this.usage),b}onUpload(a){return this.onUploadCallback=a,this}toJSON(a){return void 0===a.arrayBuffers&&(a.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=aH()),void 0===a.arrayBuffers[this.array.buffer._uuid]&&(a.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}let h7=new a;class h8{constructor(a,b,c,d=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=a,this.itemSize=b,this.offset=c,this.normalized=!0===d}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(a){this.data.needsUpdate=a}applyMatrix4(b){for(let a=0,c=this.data.count;a<c;a++)h7.fromBufferAttribute(this,a),h7.applyMatrix4(b),this.setXYZ(a,h7.x,h7.y,h7.z);return this}applyNormalMatrix(b){for(let a=0,c=this.count;a<c;a++)h7.fromBufferAttribute(this,a),h7.applyNormalMatrix(b),this.setXYZ(a,h7.x,h7.y,h7.z);return this}transformDirection(b){for(let a=0,c=this.count;a<c;a++)h7.fromBufferAttribute(this,a),h7.transformDirection(b),this.setXYZ(a,h7.x,h7.y,h7.z);return this}setX(a,b){return this.data.array[a*this.data.stride+this.offset]=b,this}setY(a,b){return this.data.array[a*this.data.stride+this.offset+1]=b,this}setZ(a,b){return this.data.array[a*this.data.stride+this.offset+2]=b,this}setW(a,b){return this.data.array[a*this.data.stride+this.offset+3]=b,this}getX(a){return this.data.array[a*this.data.stride+this.offset]}getY(a){return this.data.array[a*this.data.stride+this.offset+1]}getZ(a){return this.data.array[a*this.data.stride+this.offset+2]}getW(a){return this.data.array[a*this.data.stride+this.offset+3]}setXY(a,b,c){return a=a*this.data.stride+this.offset,this.data.array[a+0]=b,this.data.array[a+1]=c,this}setXYZ(a,b,c,d){return a=a*this.data.stride+this.offset,this.data.array[a+0]=b,this.data.array[a+1]=c,this.data.array[a+2]=d,this}setXYZW(a,b,c,d,e){return a=a*this.data.stride+this.offset,this.data.array[a+0]=b,this.data.array[a+1]=c,this.data.array[a+2]=d,this.data.array[a+3]=e,this}clone(a){if(void 0!==a)return void 0===a.interleavedBuffers&&(a.interleavedBuffers={}),void 0===a.interleavedBuffers[this.data.uuid]&&(a.interleavedBuffers[this.data.uuid]=this.data.clone(a)),new h8(a.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.");let d=[];for(let b=0;b<this.count;b++){let e=b*this.data.stride+this.offset;for(let c=0;c<this.itemSize;c++)d.push(this.data.array[e+c])}return new n(new this.array.constructor(d),this.itemSize,this.normalized)}}toJSON(a){if(void 0!==a)return void 0===a.interleavedBuffers&&(a.interleavedBuffers={}),void 0===a.interleavedBuffers[this.data.uuid]&&(a.interleavedBuffers[this.data.uuid]=this.data.toJSON(a)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.");let d=[];for(let b=0;b<this.count;b++){let e=b*this.data.stride+this.offset;for(let c=0;c<this.itemSize;c++)d.push(this.data.array[e+c])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:d,normalized:this.normalized}}}}class h9 extends k{constructor(a){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new h(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.alphaMap=a.alphaMap,this.rotation=a.rotation,this.sizeAttenuation=a.sizeAttenuation,this.fog=a.fog,this}}let ia,ib=new a,ic=new a,id=new a,ie=new j,ig=new j,ih=new e,ii=new a,ij=new a,ik=new a,il=new j,im=new j,io=new j;class ip extends f{constructor(a){if(super(),this.isSprite=!0,this.type="Sprite",void 0===ia){ia=new g;let c=new Float32Array([-0.5,-0.5,0,0,0,.5,-0.5,0,1,0,.5,.5,0,1,1,-0.5,.5,0,0,1]),b=new a_(c,5);ia.setIndex([0,1,2,0,2,3]),ia.setAttribute("position",new h8(b,3,0,!1)),ia.setAttribute("uv",new h8(b,2,3,!1))}this.geometry=ia,this.material=void 0!==a?a:new h9,this.center=new j(.5,.5)}raycast(a,h){null===a.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ic.setFromMatrixScale(this.matrixWorld),ih.copy(a.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(a.camera.matrixWorldInverse,this.matrixWorld),id.setFromMatrixPosition(this.modelViewMatrix),a.camera.isPerspectiveCamera&& !1===this.material.sizeAttenuation&&ic.multiplyScalar(-id.z);let e=this.material.rotation,b,c;0!==e&&(c=Math.cos(e),b=Math.sin(e));let d=this.center;iq(ii.set(-0.5,-0.5,0),id,d,ic,b,c),iq(ij.set(.5,-0.5,0),id,d,ic,b,c),iq(ik.set(.5,.5,0),id,d,ic,b,c),il.set(0,0),im.set(1,0),io.set(1,1);let g=a.ray.intersectTriangle(ii,ij,ik,!1,ib);if(null===g&&(iq(ij.set(-0.5,.5,0),id,d,ic,b,c),im.set(0,1),null===(g=a.ray.intersectTriangle(ii,ik,ij,!1,ib))))return;let f=a.ray.origin.distanceTo(ib);f<a.near||f>a.far||h.push({distance:f,point:ib.clone(),uv:aT.getUV(ib,ii,ij,ik,il,im,io,new j),face:null,object:this})}copy(a,b){return super.copy(a,b),void 0!==a.center&&this.center.copy(a.center),this.material=a.material,this}}function iq(a,d,e,f,b,c){ie.subVectors(a,e).addScalar(.5).multiply(f),void 0!==b?(ig.x=c*ie.x-b*ie.y,ig.y=b*ie.x+c*ie.y):ig.copy(ie),a.copy(d),a.x+=ig.x,a.y+=ig.y,a.applyMatrix4(ih)}let ir=new a,is=new a;class it extends f{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(a){super.copy(a,!1);let c=a.levels;for(let b=0,e=c.length;b<e;b++){let d=c[b];this.addLevel(d.object.clone(),d.distance)}return this.autoUpdate=a.autoUpdate,this}addLevel(d,b=0){b=Math.abs(b);let c=this.levels,a;for(a=0;a<c.length&&!(b<c[a].distance);a++);return c.splice(a,0,{distance:b,object:d}),this.add(d),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(d){let b=this.levels;if(b.length>0){let a,c;for(a=1,c=b.length;a<c&&!(d<b[a].distance);a++);return b[a-1].object}return null}raycast(a,b){let c=this.levels;if(c.length>0){ir.setFromMatrixPosition(this.matrixWorld);let d=a.ray.origin.distanceTo(ir);this.getObjectForDistance(d).raycast(a,b)}}update(d){let b=this.levels;if(b.length>1){ir.setFromMatrixPosition(d.matrixWorld),is.setFromMatrixPosition(this.matrixWorld);let e=ir.distanceTo(is)/d.zoom;b[0].object.visible=!0;let a,c;for(a=1,c=b.length;a<c;a++)if(e>=b[a].distance)b[a-1].object.visible=!1,b[a].object.visible=!0;else break;for(this._currentLevel=a-1;a<c;a++)b[a].object.visible=!1}}toJSON(e){let a=super.toJSON(e);!1===this.autoUpdate&&(a.object.autoUpdate=!1),a.object.levels=[];let c=this.levels;for(let b=0,f=c.length;b<f;b++){let d=c[b];a.object.levels.push({object:d.object.uuid,distance:d.distance})}return a}}let iu=new a,iv=new W,iw=new W,ix=new a,iy=new e;class iz extends D{constructor(a,b){super(a,b),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new e,this.bindMatrixInverse=new e}copy(a,b){return super.copy(a,b),this.bindMode=a.bindMode,this.bindMatrix.copy(a.bindMatrix),this.bindMatrixInverse.copy(a.bindMatrixInverse),this.skeleton=a.skeleton,this}bind(b,a){this.skeleton=b,void 0===a&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),a=this.matrixWorld),this.bindMatrix.copy(a),this.bindMatrixInverse.copy(a).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){let a=new W,c=this.geometry.attributes.skinWeight;for(let b=0,e=c.count;b<e;b++){a.fromBufferAttribute(c,b);let d=1/a.manhattanLength();d!==1/0?a.multiplyScalar(d):a.set(1,0,0,0),c.setXYZW(b,a.x,a.y,a.z,a.w)}}updateMatrixWorld(a){super.updateMatrixWorld(a),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(c,a){let d=this.skeleton,e=this.geometry;iv.fromBufferAttribute(e.attributes.skinIndex,c),iw.fromBufferAttribute(e.attributes.skinWeight,c),iu.copy(a).applyMatrix4(this.bindMatrix),a.set(0,0,0);for(let b=0;b<4;b++){let f=iw.getComponent(b);if(0!==f){let g=iv.getComponent(b);iy.multiplyMatrices(d.bones[g].matrixWorld,d.boneInverses[g]),a.addScaledVector(ix.copy(iu).applyMatrix4(iy),f)}}return a.applyMatrix4(this.bindMatrixInverse)}}class iA extends f{constructor(){super(),this.isBone=!0,this.type="Bone"}}class iB extends l{constructor(a=null,b=1,c=1,d,e,f,g,h,i=az,j=az,k,l){super(null,f,g,h,i,j,d,e,k,l),this.isDataTexture=!0,this.image={data:a,width:b,height:c},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}let iC=new e,iD=new e;class iE{constructor(a=[],b=[]){this.uuid=aH(),this.bones=a.slice(0),this.boneInverses=b,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){let a=this.bones,b=this.boneInverses;if(this.boneMatrices=new Float32Array(16*a.length),0===b.length)this.calculateInverses();else if(a.length!==b.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let c=0,d=this.bones.length;c<d;c++)this.boneInverses.push(new e)}}calculateInverses(){this.boneInverses.length=0;for(let a=0,c=this.bones.length;a<c;a++){let b=new e;this.bones[a]&&b.copy(this.bones[a].matrixWorld).invert(),this.boneInverses.push(b)}}pose(){for(let b=0,e=this.bones.length;b<e;b++){let d=this.bones[b];d&&d.matrixWorld.copy(this.boneInverses[b]).invert()}for(let c=0,f=this.bones.length;c<f;c++){let a=this.bones[c];a&&(a.parent&&a.parent.isBone?(a.matrix.copy(a.parent.matrixWorld).invert(),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale))}}update(){let b=this.bones,d=this.boneInverses,e=this.boneMatrices,c=this.boneTexture;for(let a=0,f=b.length;a<f;a++){let g=b[a]?b[a].matrixWorld:iD;iC.multiplyMatrices(g,d[a]),iC.toArray(e,16*a)}null!==c&&(c.needsUpdate=!0)}clone(){return new iE(this.bones,this.boneInverses)}computeBoneTexture(){let a=Math.sqrt(4*this.bones.length);a=Math.max(a=aO(a),4);let b=new Float32Array(a*a*4);b.set(this.boneMatrices);let c=new iB(b,a,a,cD,cw);return c.needsUpdate=!0,this.boneMatrices=b,this.boneTexture=c,this.boneTextureSize=a,this}getBoneByName(c){for(let a=0,d=this.bones.length;a<d;a++){let b=this.bones[a];if(b.name===c)return b}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(a,f){this.uuid=a.uuid;for(let b=0,g=a.bones.length;b<g;b++){let d=a.bones[b],c=f[d];void 0===c&&(console.warn("THREE.Skeleton: No bone found with UUID:",d),c=new iA),this.bones.push(c),this.boneInverses.push(new e().fromArray(a.boneInverses[b]))}return this.init(),this}toJSON(){let a={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};a.uuid=this.uuid;let c=this.bones,d=this.boneInverses;for(let b=0,e=c.length;b<e;b++){let f=c[b];a.bones.push(f.uuid);let g=d[b];a.boneInverses.push(g.toArray())}return a}}class iF extends n{constructor(c,d,a,b=1){"number"==typeof a&&(b=a,a=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(c,d,a),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=b}copy(a){return super.copy(a),this.meshPerAttribute=a.meshPerAttribute,this}toJSON(){let a=super.toJSON();return a.meshPerAttribute=this.meshPerAttribute,a.isInstancedBufferAttribute=!0,a}}let iG=new e,iH=new e,iI=[],iJ=new D;class iK extends D{constructor(b,c,a){super(b,c),this.isInstancedMesh=!0,this.instanceMatrix=new iF(new Float32Array(16*a),16),this.instanceColor=null,this.count=a,this.frustumCulled=!1}copy(a,b){return super.copy(a,b),this.instanceMatrix.copy(a.instanceMatrix),null!==a.instanceColor&&(this.instanceColor=a.instanceColor.clone()),this.count=a.count,this}getColorAt(a,b){b.fromArray(this.instanceColor.array,3*a)}getMatrixAt(a,b){b.fromArray(this.instanceMatrix.array,16*a)}raycast(d,e){let f=this.matrixWorld,g=this.count;if(iJ.geometry=this.geometry,iJ.material=this.material,void 0!==iJ.material)for(let a=0;a<g;a++){this.getMatrixAt(a,iG),iH.multiplyMatrices(f,iG),iJ.matrixWorld=iH,iJ.raycast(d,iI);for(let b=0,h=iI.length;b<h;b++){let c=iI[b];c.instanceId=a,c.object=this,e.push(c)}iI.length=0}}setColorAt(a,b){null===this.instanceColor&&(this.instanceColor=new iF(new Float32Array(3*this.instanceMatrix.count),3)),b.toArray(this.instanceColor.array,3*a)}setMatrixAt(a,b){b.toArray(this.instanceMatrix.array,16*a)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class a0 extends k{constructor(a){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new h(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.linewidth=a.linewidth,this.linecap=a.linecap,this.linejoin=a.linejoin,this.fog=a.fog,this}}let iL=new a,iM=new a,iN=new e,iO=new G,iP=new C;class I extends f{constructor(a=new g,b=new a0){super(),this.isLine=!0,this.type="Line",this.geometry=a,this.material=b,this.updateMorphTargets()}copy(a,b){return super.copy(a,b),this.material=a.material,this.geometry=a.geometry,this}computeLineDistances(){let c=this.geometry;if(null===c.index){let d=c.attributes.position,b=[0];for(let a=1,e=d.count;a<e;a++)iL.fromBufferAttribute(d,a-1),iM.fromBufferAttribute(d,a),b[a]=b[a-1],b[a]+=iL.distanceTo(iM);c.setAttribute("lineDistance",new fp(b,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(b,o){let c=this.geometry,p=this.matrixWorld,q=b.params.Line.threshold,d=c.drawRange;if(null===c.boundingSphere&&c.computeBoundingSphere(),iP.copy(c.boundingSphere),iP.applyMatrix4(p),iP.radius+=q,!1===b.ray.intersectsSphere(iP))return;iN.copy(p).invert(),iO.copy(b.ray).applyMatrix4(iN);let r=q/((this.scale.x+this.scale.y+this.scale.z)/3),s=r*r,i=new a,j=new a,k=new a,e=new a,t=this.isLineSegments?2:1,l=c.index,u=c.attributes,f=u.position;if(null!==l){let v=Math.max(0,d.start),w=Math.min(l.count,d.start+d.count);for(let g=v,x=w-1;g<x;g+=t){let y=l.getX(g),z=l.getX(g+1);i.fromBufferAttribute(f,y),j.fromBufferAttribute(f,z);let A=iO.distanceSqToSegment(i,j,e,k);if(A>s)continue;e.applyMatrix4(this.matrixWorld);let m=b.ray.origin.distanceTo(e);m<b.near||m>b.far||o.push({distance:m,point:k.clone().applyMatrix4(this.matrixWorld),index:g,face:null,faceIndex:null,object:this})}}else{let B=Math.max(0,d.start),C=Math.min(f.count,d.start+d.count);for(let h=B,D=C-1;h<D;h+=t){i.fromBufferAttribute(f,h),j.fromBufferAttribute(f,h+1);let E=iO.distanceSqToSegment(i,j,e,k);if(E>s)continue;e.applyMatrix4(this.matrixWorld);let n=b.ray.origin.distanceTo(e);n<b.near||n>b.far||o.push({distance:n,point:k.clone().applyMatrix4(this.matrixWorld),index:h,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){let e=this.geometry,c=e.morphAttributes,d=Object.keys(c);if(d.length>0){let b=c[d[0]];if(void 0!==b){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,f=b.length;a<f;a++){let g=b[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[g]=a}}}}}let iQ=new a,iR=new a;class s extends I{constructor(a,b){super(a,b),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){let c=this.geometry;if(null===c.index){let d=c.attributes.position,b=[];for(let a=0,e=d.count;a<e;a+=2)iQ.fromBufferAttribute(d,a),iR.fromBufferAttribute(d,a+1),b[a]=0===a?0:b[a-1],b[a+1]=b[a]+iQ.distanceTo(iR);c.setAttribute("lineDistance",new fp(b,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class iS extends I{constructor(a,b){super(a,b),this.isLineLoop=!0,this.type="LineLoop"}}class iT extends k{constructor(a){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new h(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.alphaMap=a.alphaMap,this.size=a.size,this.sizeAttenuation=a.sizeAttenuation,this.fog=a.fog,this}}let iU=new e,iV=new G,iW=new C,iX=new a;class iY extends f{constructor(a=new g,b=new iT){super(),this.isPoints=!0,this.type="Points",this.geometry=a,this.material=b,this.updateMorphTargets()}copy(a,b){return super.copy(a,b),this.material=a.material,this.geometry=a.geometry,this}raycast(c,i){let a=this.geometry,d=this.matrixWorld,j=c.params.Points.threshold,b=a.drawRange;if(null===a.boundingSphere&&a.computeBoundingSphere(),iW.copy(a.boundingSphere),iW.applyMatrix4(d),iW.radius+=j,!1===c.ray.intersectsSphere(iW))return;iU.copy(d).invert(),iV.copy(c.ray).applyMatrix4(iU);let k=j/((this.scale.x+this.scale.y+this.scale.z)/3),l=k*k,f=a.index,n=a.attributes,g=n.position;if(null!==f){let o=Math.max(0,b.start),p=Math.min(f.count,b.start+b.count);for(let h=o,q=p;h<q;h++){let m=f.getX(h);iX.fromBufferAttribute(g,m),iZ(iX,m,l,d,c,i,this)}}else{let r=Math.max(0,b.start),s=Math.min(g.count,b.start+b.count);for(let e=r,t=s;e<t;e++)iX.fromBufferAttribute(g,e),iZ(iX,e,l,d,c,i,this)}}updateMorphTargets(){let e=this.geometry,c=e.morphAttributes,d=Object.keys(c);if(d.length>0){let b=c[d[0]];if(void 0!==b){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,f=b.length;a<f;a++){let g=b[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[g]=a}}}}}function iZ(e,g,h,i,c,j,k){let f=iV.distanceSqToPoint(e);if(f<h){let b=new a;iV.closestPointToPoint(e,b),b.applyMatrix4(i);let d=c.ray.origin.distanceTo(b);if(d<c.near||d>c.far)return;j.push({distance:d,distanceToRay:Math.sqrt(f),point:b,index:g,face:null,object:k})}}class i$ extends l{constructor(a,d,e,f,b,c,g,h,i){super(a,d,e,f,b,c,g,h,i),this.isVideoTexture=!0,this.minFilter=void 0!==c?c:aC,this.magFilter=void 0!==b?b:aC,this.generateMipmaps=!1;let k=this;function j(){k.needsUpdate=!0,a.requestVideoFrameCallback(j)}"requestVideoFrameCallback"in a&&a.requestVideoFrameCallback(j)}clone(){return new this.constructor(this.image).copy(this)}update(){let a=this.image;!1=="requestVideoFrameCallback"in a&&a.readyState>=a.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class i_ extends l{constructor(a,b,c){super({width:a,height:b}),this.isFramebufferTexture=!0,this.format=c,this.magFilter=az,this.minFilter=az,this.generateMipmaps=!1,this.needsUpdate=!0}}class i0 extends l{constructor(a,b,c,d,e,f,g,h,i,j,k,l){super(null,f,g,h,i,j,d,e,k,l),this.isCompressedTexture=!0,this.image={width:b,height:c},this.mipmaps=a,this.flipY=!1,this.generateMipmaps=!1}}class i1 extends l{constructor(a,b,c,d,e,f,g,h,i){super(a,b,c,d,e,f,g,h,i),this.isCanvasTexture=!0,this.needsUpdate=!0}}class o{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(a,b){let c=this.getUtoTmapping(a);return this.getPoint(c,b)}getPoints(b=5){let c=[];for(let a=0;a<=b;a++)c.push(this.getPoint(a/b));return c}getSpacedPoints(b=5){let c=[];for(let a=0;a<=b;a++)c.push(this.getPointAt(a/b));return c}getLength(){let a=this.getLengths();return a[a.length-1]}getLengths(b=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===b+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let a=[],d,e=this.getPoint(0),f=0;a.push(0);for(let c=1;c<=b;c++)a.push(f+=(d=this.getPoint(c/b)).distanceTo(e)),e=d;return this.cacheArcLengths=a,a}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(i,j){let b=this.getLengths(),a=0,d=b.length,e;e=j||i*b[d-1];let f=0,c=d-1,g;for(;f<=c;)if((g=b[a=Math.floor(f+(c-f)/2)]-e)<0)f=a+1;else if(g>0)c=a-1;else{c=a;break}if(b[a=c]===e)return a/(d-1);let h=b[a],k=b[a+1],l=(e-h)/(k-h),m=(a+l)/(d-1);return m}getTangent(d,h){let e=1e-4,b=d-e,c=d+e;b<0&&(b=0),c>1&&(c=1);let f=this.getPoint(b),i=this.getPoint(c),g=h||(f.isVector2?new j:new a);return g.copy(i).sub(f).normalize(),g}getTangentAt(a,b){let c=this.getUtoTmapping(a);return this.getTangent(c,b)}computeFrenetFrames(g,q){let k=new a,b=[],c=[],h=[],i=new a,n=new e;for(let l=0;l<=g;l++){let r=l/g;b[l]=this.getTangentAt(r,new a)}c[0]=new a,h[0]=new a;let j=Number.MAX_VALUE,o=Math.abs(b[0].x),p=Math.abs(b[0].y),s=Math.abs(b[0].z);o<=j&&(j=o,k.set(1,0,0)),p<=j&&(j=p,k.set(0,1,0)),s<=j&&k.set(0,0,1),i.crossVectors(b[0],k).normalize(),c[0].crossVectors(b[0],i),h[0].crossVectors(b[0],c[0]);for(let d=1;d<=g;d++){if(c[d]=c[d-1].clone(),h[d]=h[d-1].clone(),i.crossVectors(b[d-1],b[d]),i.length()>Number.EPSILON){i.normalize();let t=Math.acos(aI(b[d-1].dot(b[d]),-1,1));c[d].applyMatrix4(n.makeRotationAxis(i,t))}h[d].crossVectors(b[d],c[d])}if(!0===q){let m=Math.acos(aI(c[0].dot(c[g]),-1,1));m/=g,b[0].dot(i.crossVectors(c[0],c[g]))>0&&(m=-m);for(let f=1;f<=g;f++)c[f].applyMatrix4(n.makeRotationAxis(b[f],m*f)),h[f].crossVectors(b[f],c[f])}return{tangents:b,normals:c,binormals:h}}clone(){return new this.constructor().copy(this)}copy(a){return this.arcLengthDivisions=a.arcLengthDivisions,this}toJSON(){let a={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return a.arcLengthDivisions=this.arcLengthDivisions,a.type=this.type,a}fromJSON(a){return this.arcLengthDivisions=a.arcLengthDivisions,this}}class ab extends o{constructor(a=0,b=0,c=1,d=1,e=0,f=2*Math.PI,g=!1,h=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=a,this.aY=b,this.xRadius=c,this.yRadius=d,this.aStartAngle=e,this.aEndAngle=f,this.aClockwise=g,this.aRotation=h}getPoint(l,m){let n=m||new j,b=2*Math.PI,a=this.aEndAngle-this.aStartAngle,e=Math.abs(a)<Number.EPSILON;for(;a<0;)a+=b;for(;a>b;)a-=b;a<Number.EPSILON&&(a=e?0:b),!0!==this.aClockwise||e||(a===b?a=-b:a-=b);let f=this.aStartAngle+l*a,c=this.aX+this.xRadius*Math.cos(f),d=this.aY+this.yRadius*Math.sin(f);if(0!==this.aRotation){let g=Math.cos(this.aRotation),h=Math.sin(this.aRotation),i=c-this.aX,k=d-this.aY;c=i*g-k*h+this.aX,d=i*h+k*g+this.aY}return n.set(c,d)}copy(a){return super.copy(a),this.aX=a.aX,this.aY=a.aY,this.xRadius=a.xRadius,this.yRadius=a.yRadius,this.aStartAngle=a.aStartAngle,this.aEndAngle=a.aEndAngle,this.aClockwise=a.aClockwise,this.aRotation=a.aRotation,this}toJSON(){let a=super.toJSON();return a.aX=this.aX,a.aY=this.aY,a.xRadius=this.xRadius,a.yRadius=this.yRadius,a.aStartAngle=this.aStartAngle,a.aEndAngle=this.aEndAngle,a.aClockwise=this.aClockwise,a.aRotation=this.aRotation,a}fromJSON(a){return super.fromJSON(a),this.aX=a.aX,this.aY=a.aY,this.xRadius=a.xRadius,this.yRadius=a.yRadius,this.aStartAngle=a.aStartAngle,this.aEndAngle=a.aEndAngle,this.aClockwise=a.aClockwise,this.aRotation=a.aRotation,this}}class a1 extends ab{constructor(b,c,a,d,e,f){super(b,c,a,a,d,e,f),this.isArcCurve=!0,this.type="ArcCurve"}}function J(){let a=0,b=0,c=0,d=0;function e(e,g,f,h){a=e,b=f,c=-3*e+3*g-2*f-h,d=2*e-2*g+f+h}return{initCatmullRom:function(d,a,b,f,c){e(a,b,c*(b-d),c*(f-a))},initNonuniformCatmullRom:function(d,b,c,f,g,a,h){let i=(b-d)/g-(c-d)/(g+a)+(c-b)/a,j=(c-b)/a-(f-b)/(a+h)+(f-c)/h;i*=a,j*=a,e(b,c,i,j)},calc:function(e){let f=e*e;return a+b*e+c*f+d*(f*e)}}}let i2=new a,i3=new J,i4=new J,i5=new J;class a2 extends o{constructor(a=[],b=!1,c="centripetal",d=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=a,this.closed=b,this.curveType=c,this.tension=d}getPoint(p,q=new a){let n=q,d=this.points,b=d.length,o=(b-(this.closed?0:1))*p,c=Math.floor(o),j=o-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/b)+1)*b:0===j&&c===b-1&&(c=b-2,j=1);let e,f;this.closed||c>0?e=d[(c-1)%b]:(i2.subVectors(d[0],d[1]).add(d[0]),e=i2);let g=d[c%b],h=d[(c+1)%b];if(this.closed||c+2<b?f=d[(c+2)%b]:(i2.subVectors(d[b-1],d[b-2]).add(d[b-1]),f=i2),"centripetal"===this.curveType||"chordal"===this.curveType){let m="chordal"===this.curveType?.5:.25,k=Math.pow(e.distanceToSquared(g),m),i=Math.pow(g.distanceToSquared(h),m),l=Math.pow(h.distanceToSquared(f),m);i<1e-4&&(i=1),k<1e-4&&(k=i),l<1e-4&&(l=i),i3.initNonuniformCatmullRom(e.x,g.x,h.x,f.x,k,i,l),i4.initNonuniformCatmullRom(e.y,g.y,h.y,f.y,k,i,l),i5.initNonuniformCatmullRom(e.z,g.z,h.z,f.z,k,i,l)}else"catmullrom"===this.curveType&&(i3.initCatmullRom(e.x,g.x,h.x,f.x,this.tension),i4.initCatmullRom(e.y,g.y,h.y,f.y,this.tension),i5.initCatmullRom(e.z,g.z,h.z,f.z,this.tension));return n.set(i3.calc(j),i4.calc(j),i5.calc(j)),n}copy(a){super.copy(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(d.clone())}return this.closed=a.closed,this.curveType=a.curveType,this.tension=a.tension,this}toJSON(){let a=super.toJSON();a.points=[];for(let b=0,c=this.points.length;b<c;b++){let d=this.points[b];a.points.push(d.toArray())}return a.closed=this.closed,a.curveType=this.curveType,a.tension=this.tension,a}fromJSON(b){super.fromJSON(b),this.points=[];for(let c=0,d=b.points.length;c<d;c++){let e=b.points[c];this.points.push(new a().fromArray(e))}return this.closed=b.closed,this.curveType=b.curveType,this.tension=b.tension,this}}function i6(a,g,b,c,h){let d=(c-g)*.5,e=(h-b)*.5,f=a*a;return(2*b-2*c+d+e)*(a*f)+(-3*b+3*c-2*d-e)*f+d*a+b}function i7(a,d,e,f){var b,g,c,h;return function(b,c){let a=1-b;return a*a*c}(a,d)+(b=a,2*(1-b)*b*(g=e))+(c=a,c*c*(h=f))}function i8(a,d,e,f,g){var b,h,c,i;return function(b,c){let a=1-b;return a*a*a*c}(a,d)+function(a,c){let b=1-a;return 3*b*b*a*c}(a,e)+(b=a,3*(1-b)*b*b*(h=f))+(c=a,c*c*c*(i=g))}class a3 extends o{constructor(a=new j,b=new j,c=new j,d=new j){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=a,this.v1=b,this.v2=c,this.v3=d}getPoint(a,g=new j){let b=g,c=this.v0,d=this.v1,e=this.v2,f=this.v3;return b.set(i8(a,c.x,d.x,e.x,f.x),i8(a,c.y,d.y,e.y,f.y)),b}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this.v3.copy(a.v3),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a.v3=this.v3.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this.v3.fromArray(a.v3),this}}class a4 extends o{constructor(b=new a,c=new a,d=new a,e=new a){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=b,this.v1=c,this.v2=d,this.v3=e}getPoint(b,h=new a){let g=h,c=this.v0,d=this.v1,e=this.v2,f=this.v3;return g.set(i8(b,c.x,d.x,e.x,f.x),i8(b,c.y,d.y,e.y,f.y),i8(b,c.z,d.z,e.z,f.z)),g}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this.v3.copy(a.v3),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a.v3=this.v3.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this.v3.fromArray(a.v3),this}}class a5 extends o{constructor(a=new j,b=new j){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=a,this.v2=b}getPoint(b,c=new j){let a=c;return 1===b?a.copy(this.v2):(a.copy(this.v2).sub(this.v1),a.multiplyScalar(b).add(this.v1)),a}getPointAt(a,b){return this.getPoint(a,b)}getTangent(c,b){let a=b||new j;return a.copy(this.v2).sub(this.v1).normalize(),a}copy(a){return super.copy(a),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}class a6 extends o{constructor(b=new a,c=new a){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=b,this.v2=c}getPoint(c,d=new a){let b=d;return 1===c?b.copy(this.v2):(b.copy(this.v2).sub(this.v1),b.multiplyScalar(c).add(this.v1)),b}getPointAt(a,b){return this.getPoint(a,b)}copy(a){return super.copy(a),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}class a7 extends o{constructor(a=new j,b=new j,c=new j){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=a,this.v1=b,this.v2=c}getPoint(a,f=new j){let b=f,c=this.v0,d=this.v1,e=this.v2;return b.set(i7(a,c.x,d.x,e.x),i7(a,c.y,d.y,e.y)),b}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}class a8 extends o{constructor(b=new a,c=new a,d=new a){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=b,this.v1=c,this.v2=d}getPoint(b,g=new a){let f=g,c=this.v0,d=this.v1,e=this.v2;return f.set(i7(b,c.x,d.x,e.x),i7(b,c.y,d.y,e.y),i7(b,c.z,d.z,e.z)),f}copy(a){return super.copy(a),this.v0.copy(a.v0),this.v1.copy(a.v1),this.v2.copy(a.v2),this}toJSON(){let a=super.toJSON();return a.v0=this.v0.toArray(),a.v1=this.v1.toArray(),a.v2=this.v2.toArray(),a}fromJSON(a){return super.fromJSON(a),this.v0.fromArray(a.v0),this.v1.fromArray(a.v1),this.v2.fromArray(a.v2),this}}class a9 extends o{constructor(a=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=a}getPoint(k,l=new j){let c=l,a=this.points,d=(a.length-1)*k,b=Math.floor(d),e=d-b,f=a[0===b?b:b-1],g=a[b],h=a[b>a.length-2?a.length-1:b+1],i=a[b>a.length-3?a.length-1:b+2];return c.set(i6(e,f.x,g.x,h.x,i.x),i6(e,f.y,g.y,h.y,i.y)),c}copy(a){super.copy(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(d.clone())}return this}toJSON(){let a=super.toJSON();a.points=[];for(let b=0,c=this.points.length;b<c;b++){let d=this.points[b];a.points.push(d.toArray())}return a}fromJSON(a){super.fromJSON(a),this.points=[];for(let b=0,c=a.points.length;b<c;b++){let d=a.points[b];this.points.push(new j().fromArray(d))}return this}}var i9=Object.freeze({__proto__:null,ArcCurve:a1,CatmullRomCurve3:a2,CubicBezierCurve:a3,CubicBezierCurve3:a4,EllipseCurve:ab,LineCurve:a5,LineCurve3:a6,QuadraticBezierCurve:a7,QuadraticBezierCurve3:a8,SplineCurve:a9});class ba extends o{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(a){this.curves.push(a)}closePath(){let a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new a5(b,a))}getPoint(f,g){let c=f*this.getLength(),b=this.getCurveLengths(),a=0;for(;a<b.length;){if(b[a]>=c){let h=b[a]-c,d=this.curves[a],e=d.getLength(),i=0===e?0:1-h/e;return d.getPointAt(i,g)}a++}return null}getLength(){let a=this.getCurveLengths();return a[a.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let a=[],c=0;for(let b=0,d=this.curves.length;b<d;b++)a.push(c+=this.curves[b].getLength());return this.cacheLengths=a,a}getSpacedPoints(c=40){let a=[];for(let b=0;b<=c;b++)a.push(this.getPoint(b/c));return this.autoClose&&a.push(a[0]),a}getPoints(c=12){let a=[],d;for(let e=0,h=this.curves;e<h.length;e++){let b=h[e],j=b.isEllipseCurve?2*c:b.isLineCurve||b.isLineCurve3?1:b.isSplineCurve?c*b.points.length:c,i=b.getPoints(j);for(let f=0;f<i.length;f++){let g=i[f];d&&d.equals(g)||(a.push(g),d=g)}}return this.autoClose&&a.length>1&&!a[a.length-1].equals(a[0])&&a.push(a[0]),a}copy(a){super.copy(a),this.curves=[];for(let b=0,c=a.curves.length;b<c;b++){let d=a.curves[b];this.curves.push(d.clone())}return this.autoClose=a.autoClose,this}toJSON(){let a=super.toJSON();a.autoClose=this.autoClose,a.curves=[];for(let b=0,c=this.curves.length;b<c;b++){let d=this.curves[b];a.curves.push(d.toJSON())}return a}fromJSON(a){super.fromJSON(a),this.autoClose=a.autoClose,this.curves=[];for(let b=0,d=a.curves.length;b<d;b++){let c=a.curves[b];this.curves.push(new i9[c.type]().fromJSON(c))}return this}}class bb extends ba{constructor(a){super(),this.type="Path",this.currentPoint=new j,a&&this.setFromPoints(a)}setFromPoints(a){this.moveTo(a[0].x,a[0].y);for(let b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y);return this}moveTo(a,b){return this.currentPoint.set(a,b),this}lineTo(a,b){let c=new a5(this.currentPoint.clone(),new j(a,b));return this.curves.push(c),this.currentPoint.set(a,b),this}quadraticCurveTo(c,d,a,b){let e=new a7(this.currentPoint.clone(),new j(c,d),new j(a,b));return this.curves.push(e),this.currentPoint.set(a,b),this}bezierCurveTo(c,d,e,f,a,b){let g=new a3(this.currentPoint.clone(),new j(c,d),new j(e,f),new j(a,b));return this.curves.push(g),this.currentPoint.set(a,b),this}splineThru(a){let b=[this.currentPoint.clone()].concat(a),c=new a9(b);return this.curves.push(c),this.currentPoint.copy(a[a.length-1]),this}arc(a,b,c,d,e,f){let g=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(a+g,b+h,c,d,e,f),this}absarc(b,c,a,d,e,f){return this.absellipse(b,c,a,a,d,e,f),this}ellipse(a,b,c,d,e,f,g,h){let i=this.currentPoint.x,j=this.currentPoint.y;return this.absellipse(a+i,b+j,c,d,e,f,g,h),this}absellipse(c,d,e,f,g,h,i,j){let a=new ab(c,d,e,f,g,h,i,j);if(this.curves.length>0){let b=a.getPoint(0);b.equals(this.currentPoint)||this.lineTo(b.x,b.y)}this.curves.push(a);let k=a.getPoint(1);return this.currentPoint.copy(k),this}copy(a){return super.copy(a),this.currentPoint.copy(a.currentPoint),this}toJSON(){let a=super.toJSON();return a.currentPoint=this.currentPoint.toArray(),a}fromJSON(a){return super.fromJSON(a),this.currentPoint.fromArray(a.currentPoint),this}}class K extends g{constructor(b=[new j(0,-0.5),new j(.5,0),new j(0,.5)],g=12,t=0,l=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:b,segments:g,phiStart:t,phiLength:l},g=Math.floor(g),l=aI(l,0,2*Math.PI);let q=[],u=[],v=[],h=[],w=[],D=1/g,i=new a,m=new j,c=new a,x=new a,f=new a,n=0,k=0;for(let d=0;d<=b.length-1;d++)switch(d){case 0:n=b[d+1].x-b[d].x,k=b[d+1].y-b[d].y,c.x=1*k,c.y=-n,c.z=0*k,f.copy(c),c.normalize(),h.push(c.x,c.y,c.z);break;case b.length-1:h.push(f.x,f.y,f.z);break;default:n=b[d+1].x-b[d].x,k=b[d+1].y-b[d].y,c.x=1*k,c.y=-n,c.z=0*k,x.copy(c),c.x+=f.x,c.y+=f.y,c.z+=f.z,c.normalize(),h.push(c.x,c.y,c.z),f.copy(x)}for(let o=0;o<=g;o++){let y=t+o*D*l,z=Math.sin(y),A=Math.cos(y);for(let e=0;e<=b.length-1;e++){i.x=b[e].x*z,i.y=b[e].y,i.z=b[e].x*A,u.push(i.x,i.y,i.z),m.x=o/g,m.y=e/(b.length-1),v.push(m.x,m.y);let E=h[3*e+0]*z,F=h[3*e+1],G=h[3*e+0]*A;w.push(E,F,G)}}for(let r=0;r<g;r++)for(let s=0;s<b.length-1;s++){let p=s+r*b.length,H=p,B=p+b.length,I=p+b.length+1,C=p+1;q.push(H,B,C),q.push(I,C,B)}this.setIndex(q),this.setAttribute("position",new fp(u,3)),this.setAttribute("uv",new fp(v,2)),this.setAttribute("normal",new fp(w,3))}static fromJSON(a){return new K(a.points,a.segments,a.phiStart,a.phiLength)}}class ac extends K{constructor(a=1,b=1,d=4,e=8){let c=new bb;c.absarc(0,-b/2,a,1.5*Math.PI,0),c.absarc(0,b/2,a,0,.5*Math.PI),super(c.getPoints(d),e),this.type="CapsuleGeometry",this.parameters={radius:a,height:b,capSegments:d,radialSegments:e}}static fromJSON(a){return new ac(a.radius,a.length,a.capSegments,a.radialSegments)}}class ad extends g{constructor(c=1,b=8,m=0,n=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:c,segments:b,thetaStart:m,thetaLength:n},b=Math.max(3,b);let o=[],d=[],h=[],i=[],e=new a,f=new j;d.push(0,0,0),h.push(0,0,1),i.push(.5,.5);for(let k=0,l=3;k<=b;k++,l+=3){let p=m+k/b*n;e.x=c*Math.cos(p),e.y=c*Math.sin(p),d.push(e.x,e.y,e.z),h.push(0,0,1),f.x=(d[l]/c+1)/2,f.y=(d[l+1]/c+1)/2,i.push(f.x,f.y)}for(let g=1;g<=b;g++)o.push(g,g+1,0);this.setIndex(o),this.setAttribute("position",new fp(d,3)),this.setAttribute("normal",new fp(h,3)),this.setAttribute("uv",new fp(i,2))}static fromJSON(a){return new ad(a.radius,a.segments,a.thetaStart,a.thetaLength)}}class L extends g{constructor(d=1,e=1,f=1,b=8,c=1,g=!1,i=0,k=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:d,radiusBottom:e,height:f,radialSegments:b,heightSegments:c,openEnded:g,thetaStart:i,thetaLength:k};let p=this;b=Math.floor(b),c=Math.floor(c);let l=[],m=[],n=[],o=[],q=0,r=[],s=f/2,t=0;function h(g){let D=q,h=new j,c=new a,v=0,x=!0===g?d:e,f=!0===g?1:-1;for(let y=1;y<=b;y++)m.push(0,s*f,0),n.push(0,f,0),o.push(.5,.5),q++;let E=q;for(let w=0;w<=b;w++){let F=w/b,z=F*k+i,A=Math.cos(z),B=Math.sin(z);c.x=x*B,c.y=s*f,c.z=x*A,m.push(c.x,c.y,c.z),n.push(0,f,0),h.x=.5*A+.5,h.y=.5*B*f+.5,o.push(h.x,h.y),q++}for(let r=0;r<b;r++){let C=D+r,u=E+r;!0===g?l.push(u,u+1,C):l.push(u+1,u,C),v+=3}p.addGroup(t,v,!0===g?1:2),t+=v}(function(){let u=new a,g=new a,v=0,H=(e-d)/f;for(let w=0;w<=c;w++){let z=[],x=w/c,A=x*(e-d)+d;for(let y=0;y<=b;y++){let B=y/b,C=B*k+i,D=Math.sin(C),E=Math.cos(C);g.x=A*D,g.y=-x*f+s,g.z=A*E,m.push(g.x,g.y,g.z),u.set(D,H,E).normalize(),n.push(u.x,u.y,u.z),o.push(B,1-x),z.push(q++)}r.push(z)}for(let h=0;h<b;h++)for(let j=0;j<c;j++){let I=r[j][h],F=r[j+1][h],J=r[j+1][h+1],G=r[j][h+1];l.push(I,F,G),l.push(F,J,G),v+=6}p.addGroup(t,v,0),t+=v})(),!1===g&&(d>0&&h(!0),e>0&&h(!1)),this.setIndex(l),this.setAttribute("position",new fp(m,3)),this.setAttribute("normal",new fp(n,3)),this.setAttribute("uv",new fp(o,2))}static fromJSON(a){return new L(a.radiusTop,a.radiusBottom,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength)}}class ae extends L{constructor(a=1,b=1,c=8,d=1,e=!1,f=0,g=2*Math.PI){super(0,a,b,c,d,e,f,g),this.type="ConeGeometry",this.parameters={radius:a,height:b,radialSegments:c,heightSegments:d,openEnded:e,thetaStart:f,thetaLength:g}}static fromJSON(a){return new ae(a.radius,a.height,a.radialSegments,a.heightSegments,a.openEnded,a.thetaStart,a.thetaLength)}}class x extends g{constructor(e=[],f=[],c=1,b=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:f,radius:c,detail:b};let d=[],g=[];function h(l,m,h,n){let d=n+1,a=[];for(let b=0;b<=d;b++){a[b]=[];let i=l.clone().lerp(h,b/d),o=m.clone().lerp(h,b/d),j=d-b;for(let e=0;e<=j;e++)0===e&&b===d?a[b][e]=i:a[b][e]=i.clone().lerp(o,e/j)}for(let c=0;c<d;c++)for(let g=0;g<2*(d-c)-1;g++){let f=Math.floor(g/2);g%2==0?(k(a[c][f+1]),k(a[c+1][f]),k(a[c][f])):(k(a[c][f+1]),k(a[c+1][f+1]),k(a[c+1][f]))}}function i(){for(let a=0;a<g.length;a+=6){let b=g[a+0],c=g[a+2],d=g[a+4],e=Math.max(b,c,d),f=Math.min(b,c,d);e>.9&&f<.1&&(b<.2&&(g[a+0]+=1),c<.2&&(g[a+2]+=1),d<.2&&(g[a+4]+=1))}}function k(a){d.push(a.x,a.y,a.z)}function l(c,a){let b=3*c;a.x=e[b+0],a.y=e[b+1],a.z=e[b+2]}function m(){let e=new a,f=new a,h=new a,k=new a,l=new j,m=new j,p=new j;for(let b=0,c=0;b<d.length;b+=9,c+=6){e.set(d[b+0],d[b+1],d[b+2]),f.set(d[b+3],d[b+4],d[b+5]),h.set(d[b+6],d[b+7],d[b+8]),l.set(g[c+0],g[c+1]),m.set(g[c+2],g[c+3]),p.set(g[c+4],g[c+5]),k.copy(e).add(f).add(h).divideScalar(3);let i=o(k);n(l,c+0,e,i),n(m,c+2,f,i),n(p,c+4,h,i)}}function n(a,b,c,d){d<0&&1===a.x&&(g[b]=a.x-1),0===c.x&&0===c.z&&(g[b]=d/2/Math.PI+.5)}function o(a){return Math.atan2(a.z,-a.x)}function p(a){return Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))}(function(g){let c=new a,d=new a,e=new a;for(let b=0;b<f.length;b+=3)l(f[b+0],c),l(f[b+1],d),l(f[b+2],e),h(c,d,e,g)})(b),function(e){let c=new a;for(let b=0;b<d.length;b+=3)c.x=d[b+0],c.y=d[b+1],c.z=d[b+2],c.normalize().multiplyScalar(e),d[b+0]=c.x,d[b+1]=c.y,d[b+2]=c.z}(c),function(){let b=new a;for(let c=0;c<d.length;c+=3){b.x=d[c+0],b.y=d[c+1],b.z=d[c+2];let e=o(b)/2/Math.PI+.5,f=p(b)/Math.PI+.5;g.push(e,1-f)}m(),i()}(),this.setAttribute("position",new fp(d,3)),this.setAttribute("normal",new fp(d.slice(),3)),this.setAttribute("uv",new fp(g,2)),0===b?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(a){return new x(a.vertices,a.indices,a.radius,a.details)}}class af extends x{constructor(c=1,d=0){let a=(1+Math.sqrt(5))/2,b=1/a;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-b,-a,0,-b,a,0,b,-a,0,b,a,-b,-a,0,-b,a,0,b,-a,0,b,a,0,-a,0,-b,a,0,-b,-a,0,b,a,0,b],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],c,d),this.type="DodecahedronGeometry",this.parameters={radius:c,detail:d}}static fromJSON(a){return new af(a.radius,a.detail)}}let ja=new a,jb=new a,jc=new a,jd=new aT;class bc extends g{constructor(j=null,r=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:j,thresholdAngle:r},null!==j){let x=4,c=Math.pow(10,x),y=Math.cos(aF*r),f=j.getIndex(),g=j.getAttribute("position"),z=f?f.count:g.count,a=[0,0,0],s=["a","b","c"],b=[,,],d={},i=[];for(let e=0;e<z;e+=3){f?(a[0]=f.getX(e),a[1]=f.getX(e+1),a[2]=f.getX(e+2)):(a[0]=e,a[1]=e+1,a[2]=e+2);let{a:k,b:l,c:m}=jd;if(k.fromBufferAttribute(g,a[0]),l.fromBufferAttribute(g,a[1]),m.fromBufferAttribute(g,a[2]),jd.getNormal(jc),b[0]=`${Math.round(k.x*c)},${Math.round(k.y*c)},${Math.round(k.z*c)}`,b[1]=`${Math.round(l.x*c)},${Math.round(l.y*c)},${Math.round(l.z*c)}`,b[2]=`${Math.round(m.x*c)},${Math.round(m.y*c)},${Math.round(m.z*c)}`,b[0]!==b[1]&&b[1]!==b[2]&&b[2]!==b[0])for(let h=0;h<3;h++){let o=(h+1)%3,t=b[h],u=b[o],p=jd[s[h]],q=jd[s[o]],v=`${t}_${u}`,n=`${u}_${t}`;n in d&&d[n]?(jc.dot(d[n].normal)<=y&&(i.push(p.x,p.y,p.z),i.push(q.x,q.y,q.z)),d[n]=null):v in d||(d[v]={index0:a[h],index1:a[o],normal:jc.clone()})}}for(let w in d)if(d[w]){let{index0:A,index1:B}=d[w];ja.fromBufferAttribute(g,A),jb.fromBufferAttribute(g,B),i.push(ja.x,ja.y,ja.z),i.push(jb.x,jb.y,jb.z)}this.setAttribute("position",new fp(i,3))}}}class je extends bb{constructor(a){super(a),this.uuid=aH(),this.type="Shape",this.holes=[]}getPointsHoles(c){let b=[];for(let a=0,d=this.holes.length;a<d;a++)b[a]=this.holes[a].getPoints(c);return b}extractPoints(a){return{shape:this.getPoints(a),holes:this.getPointsHoles(a)}}copy(a){super.copy(a),this.holes=[];for(let b=0,c=a.holes.length;b<c;b++){let d=a.holes[b];this.holes.push(d.clone())}return this}toJSON(){let a=super.toJSON();a.uuid=this.uuid,a.holes=[];for(let b=0,c=this.holes.length;b<c;b++){let d=this.holes[b];a.holes.push(d.toJSON())}return a}fromJSON(a){super.fromJSON(a),this.uuid=a.uuid,this.holes=[];for(let b=0,c=a.holes.length;b<c;b++){let d=a.holes[b];this.holes.push(new bb().fromJSON(d))}return this}}let jf={triangulate:function(a,h,b=2){let n=h&&h.length,o=n?h[0]*b:a.length,c=jg(a,0,o,b,!0),m=[];if(!c||c.next===c.prev)return m;let d,e,i,j,f,g,k;if(n&&(c=jn(a,h,c,b)),a.length>80*b){d=i=a[0],e=j=a[1];for(let l=b;l<o;l+=b)f=a[l],g=a[l+1],f<d&&(d=f),g<e&&(e=g),f>i&&(i=f),g>j&&(j=g);k=0!==(k=Math.max(i-d,j-e))?1/k:0}return ji(c,m,b,d,e,k),m}};function jg(c,e,f,d,g){let a,b;if(g===jK(c,e,f,d)>0)for(a=e;a<f;a+=d)b=jH(a,c[a],c[a+1],b);else for(a=f-d;a>=e;a-=d)b=jH(a,c[a],c[a+1],b);return b&&jz(b,b.next)&&(jI(b),b=b.next),b}function jh(c,b){if(!c)return c;b||(b=c);let a=c,d;do if(d=!1,!a.steiner&&(jz(a,a.next)||0===jy(a.prev,a,a.next))){if(jI(a),(a=b=a.prev)===a.next)break;d=!0}else a=a.next;while(d||a!==b)return b}function ji(a,b,c,e,f,d,h){if(!a)return;!h&&d&&js(a,e,f,d);let i=a,j,g;for(;a.prev!==a.next;){if(j=a.prev,g=a.next,d?jk(a,e,f,d):jj(a)){b.push(j.i/c),b.push(a.i/c),b.push(g.i/c),jI(a),a=g.next,i=g.next;continue}if((a=g)===i){h?1===h?(a=jl(jh(a),b,c),ji(a,b,c,e,f,d,2)):2===h&&jm(a,b,c,e,f,d):ji(jh(a),b,c,e,f,d,1);break}}}function jj(b){let c=b.prev,d=b,e=b.next;if(jy(c,d,e)>=0)return!1;let a=b.next.next;for(;a!==b.prev;){if(jw(c.x,c.y,d.x,d.y,e.x,e.y,a.x,a.y)&&jy(a.prev,a,a.next)>=0)return!1;a=a.next}return!0}function jk(f,g,h,i){let d=f.prev,e=f,a=f.next;if(jy(d,e,a)>=0)return!1;let l=d.x<e.x?d.x<a.x?d.x:a.x:e.x<a.x?e.x:a.x,m=d.y<e.y?d.y<a.y?d.y:a.y:e.y<a.y?e.y:a.y,n=d.x>e.x?d.x>a.x?d.x:a.x:e.x>a.x?e.x:a.x,o=d.y>e.y?d.y>a.y?d.y:a.y:e.y>a.y?e.y:a.y,j=ju(l,m,g,h,i),k=ju(n,o,g,h,i),b=f.prevZ,c=f.nextZ;for(;b&&b.z>=j&&c&&c.z<=k;){if(b!==f.prev&&b!==f.next&&jw(d.x,d.y,e.x,e.y,a.x,a.y,b.x,b.y)&&jy(b.prev,b,b.next)>=0||(b=b.prevZ,c!==f.prev&&c!==f.next&&jw(d.x,d.y,e.x,e.y,a.x,a.y,c.x,c.y)&&jy(c.prev,c,c.next)>=0))return!1;c=c.nextZ}for(;b&&b.z>=j;){if(b!==f.prev&&b!==f.next&&jw(d.x,d.y,e.x,e.y,a.x,a.y,b.x,b.y)&&jy(b.prev,b,b.next)>=0)return!1;b=b.prevZ}for(;c&&c.z<=k;){if(c!==f.prev&&c!==f.next&&jw(d.x,d.y,e.x,e.y,a.x,a.y,c.x,c.y)&&jy(c.prev,c,c.next)>=0)return!1;c=c.nextZ}return!0}function jl(d,e,f){let a=d;do{let c=a.prev,b=a.next.next;!jz(c,b)&&jA(c,a,a.next,b)&&jE(c,b)&&jE(b,c)&&(e.push(c.i/f),e.push(a.i/f),e.push(b.i/f),jI(a),jI(a.next),a=d=b),a=a.next}while(a!==d)return jh(a)}function jm(d,e,f,g,h,i){let a=d;do{let b=a.next.next;for(;b!==a.prev;){if(a.i!==b.i&&jx(a,b)){let c=jG(a,b);a=jh(a,a.next),c=jh(c,c.next),ji(a,e,f,g,h,i),ji(c,e,f,g,h,i);return}b=b.next}a=a.next}while(a!==d)}function jn(h,e,b,f){let d=[],a,g,i,j,c;for(a=0,g=e.length;a<g;a++)i=e[a]*f,j=a<g-1?e[a+1]*f:h.length,c=jg(h,i,j,f,!1),c===c.next&&(c.steiner=!0),d.push(jv(c));for(d.sort(jo),a=0;a<d.length;a++)jp(d[a],b),b=jh(b,b.next);return b}function jo(a,b){return a.x-b.x}function jp(b,a){if(a=jq(b,a)){let c=jG(a,b);jh(a,a.next),jh(c,c.next)}}function jq(h,k){let a=k,d=h.x,c=h.y,e=-1/0,b;do{if(c<=a.y&&c>=a.next.y&&a.next.y!==a.y){let f=a.x+(c-a.y)*(a.next.x-a.x)/(a.next.y-a.y);if(f<=d&&f>e){if(e=f,f===d){if(c===a.y)return a;if(c===a.next.y)return a.next}b=a.x<a.next.x?a:a.next}}a=a.next}while(a!==k)if(!b)return null;if(d===e)return b;let m=b,l=b.x,i=b.y,j=1/0,g;a=b;do d>=a.x&&a.x>=l&&d!==a.x&&jw(c<i?d:e,c,l,i,c<i?e:d,c,a.x,a.y)&&(g=Math.abs(c-a.y)/(d-a.x),jE(a,h)&&(g<j||g===j&&(a.x>b.x||a.x===b.x&&jr(b,a)))&&(b=a,j=g)),a=a.next;while(a!==m)return b}function jr(a,b){return 0>jy(a.prev,a,b.prev)&&0>jy(b.next,a,a.next)}function js(b,c,d,e){let a=b;do null===a.z&&(a.z=ju(a.x,a.y,c,d,e)),a.prevZ=a.prev,a.nextZ=a.next,a=a.next;while(a!==b)a.prevZ.nextZ=null,a.prevZ=null,jt(a)}function jt(f){let h,b,a,c,d,i,e,g,j=1;do{for(b=f,f=null,d=null,i=0;b;){for(i++,a=b,e=0,h=0;h<j&&(e++,a=a.nextZ);h++);for(g=j;e>0||g>0&&a;)0!==e&&(0===g||!a||b.z<=a.z)?(c=b,b=b.nextZ,e--):(c=a,a=a.nextZ,g--),d?d.nextZ=c:f=c,c.prevZ=d,d=c;b=a}d.nextZ=null,j*=2}while(i>1)return f}function ju(a,b,d,e,c){return a=32767*(a-d)*c,b=32767*(b-e)*c,a=(a|a<<8)&16711935,a=(a|a<<4)&252645135,a=(a|a<<2)&858993459,a=(a|a<<1)&1431655765,b=(b|b<<8)&16711935,b=(b|b<<4)&252645135,b=(b|b<<2)&858993459,b=(b|b<<1)&1431655765,a|b<<1}function jv(c){let a=c,b=c;do(a.x<b.x||a.x===b.x&&a.y<b.y)&&(b=a),a=a.next;while(a!==c)return b}function jw(c,d,e,f,g,h,a,b){return(g-a)*(d-b)-(c-a)*(h-b)>=0&&(c-a)*(f-b)-(e-a)*(d-b)>=0&&(e-a)*(h-b)-(g-a)*(f-b)>=0}function jx(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!jD(a,b)&&(jE(a,b)&&jE(b,a)&&jF(a,b)&&(jy(a.prev,a,b.prev)||jy(a,b.prev,b))||jz(a,b)&&jy(a.prev,a,a.next)>0&&jy(b.prev,b,b.next)>0)}function jy(b,a,c){return(a.y-b.y)*(c.x-a.x)-(a.x-b.x)*(c.y-a.y)}function jz(a,b){return a.x===b.x&&a.y===b.y}function jA(a,b,c,d){let e=jC(jy(a,b,c)),f=jC(jy(a,b,d)),g=jC(jy(c,d,a)),h=jC(jy(c,d,b));return!!(e!==f&&g!==h||0===e&&jB(a,c,b)||0===f&&jB(a,d,b)||0===g&&jB(c,a,d)||0===h&&jB(c,b,d))}function jB(a,b,c){return b.x<=Math.max(a.x,c.x)&&b.x>=Math.min(a.x,c.x)&&b.y<=Math.max(a.y,c.y)&&b.y>=Math.min(a.y,c.y)}function jC(a){return a>0?1:a<0?-1:0}function jD(b,c){let a=b;do{if(a.i!==b.i&&a.next.i!==b.i&&a.i!==c.i&&a.next.i!==c.i&&jA(a,a.next,b,c))return!0;a=a.next}while(a!==b)return!1}function jE(a,b){return 0>jy(a.prev,a,a.next)?jy(a,b,a.next)>=0&&jy(a,a.prev,b)>=0:0>jy(a,b,a.prev)||0>jy(a,a.next,b)}function jF(b,e){let a=b,c=!1,f=(b.x+e.x)/2,d=(b.y+e.y)/2;do a.y>d!=a.next.y>d&&a.next.y!==a.y&&f<(a.next.x-a.x)*(d-a.y)/(a.next.y-a.y)+a.x&&(c=!c),a=a.next;while(a!==b)return c}function jG(a,b){let d=new jJ(a.i,a.x,a.y),c=new jJ(b.i,b.x,b.y),e=a.next,f=b.prev;return a.next=b,b.prev=a,d.next=e,e.prev=d,c.next=d,d.prev=c,f.next=c,c.prev=f,c}function jH(c,d,e,b){let a=new jJ(c,d,e);return b?(a.next=b.next,a.prev=b,b.next.prev=a,b.next=a):(a.prev=a,a.next=a),a}function jI(a){a.next.prev=a.prev,a.prev.next=a.next,a.prevZ&&(a.prevZ.nextZ=a.nextZ),a.nextZ&&(a.nextZ.prevZ=a.prevZ)}function jJ(a,b,c){this.i=a,this.x=b,this.y=c,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function jK(b,g,d,e){let f=0;for(let a=g,c=d-e;a<d;a+=e)f+=(b[c]-b[a])*(b[a+1]+b[c+1]),c=a;return f}class jL{static area(a){let d=a.length,e=0;for(let c=d-1,b=0;b<d;c=b++)e+=a[c].x*a[b].y-a[b].x*a[c].y;return .5*e}static isClockWise(a){return 0>jL.area(a)}static triangulateShape(d,a){let e=[],f=[],g=[];jM(d),jN(e,d);let h=d.length;a.forEach(jM);for(let b=0;b<a.length;b++)f.push(h),h+=a[b].length,jN(e,a[b]);let i=jf.triangulate(e,f);for(let c=0;c<i.length;c+=3)g.push(i.slice(c,c+3));return g}}function jM(a){let b=a.length;b>2&&a[b-1].equals(a[0])&&a.pop()}function jN(c,b){for(let a=0;a<b.length;a++)c.push(b[a].x),c.push(b[a].y)}class ag extends g{constructor(b=new je([new j(.5,.5),new j(-0.5,.5),new j(-0.5,-0.5),new j(.5,-0.5)]),d={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:b,options:d},b=Array.isArray(b)?b:[b];let i=this,e=[],f=[];for(let c=0,g=b.length;c<g;c++){let h=b[c];k(h)}function k(aq){let aE=[],ar=void 0!==d.curveSegments?d.curveSegments:12,l=void 0!==d.steps?d.steps:1,V=void 0!==d.depth?d.depth:1,x=void 0===d.bevelEnabled||d.bevelEnabled,y=void 0!==d.bevelThickness?d.bevelThickness:.2,z=void 0!==d.bevelSize?d.bevelSize:y-.1,A=void 0!==d.bevelOffset?d.bevelOffset:0,o=void 0!==d.bevelSegments?d.bevelSegments:3,W=d.extrudePath,aF=void 0!==d.UVGenerator?d.UVGenerator:jO,p,B=!1,q,r,s,g;W&&(p=W.getSpacedPoints(l),B=!0,x=!1,q=W.computeFrenetFrames(l,!1),r=new a,s=new a,g=new a),x||(o=0,y=0,z=0,A=0);let ab=aq.extractPoints(ar),b=ab.shape,c=ab.holes,as=!jL.isClockWise(b);if(as){b=b.reverse();for(let C=0,at=c.length;C<at;C++){let ac=c[C];jL.isClockWise(ac)&&(c[C]=ac.reverse())}}let au=jL.triangulateShape(b,c),h=b;for(let X=0,av=c.length;X<av;X++){let aw=c[X];b=b.concat(aw)}function m(b,a,c){return a||console.error("THREE.ExtrudeGeometry: vec does not exist"),a.clone().multiplyScalar(c).add(b)}let ad=b.length,aG=au.length;function ae(g,i,k){let d,e,h,a=g.x-i.x,b=g.y-i.y,c=k.x-g.x,f=k.y-g.y,m=a*a+b*b,t=a*f-b*c;if(Math.abs(t)>Number.EPSILON){let n=Math.sqrt(m),o=Math.sqrt(c*c+f*f),p=i.x-b/n,q=i.y+a/n,u=k.x-f/o,v=k.y+c/o,r=((u-p)*f-(v-q)*c)/(a*f-b*c);d=p+a*r-g.x,e=q+b*r-g.y;let s=d*d+e*e;if(s<=2)return new j(d,e);h=Math.sqrt(s/2)}else{let l=!1;a>Number.EPSILON?c>Number.EPSILON&&(l=!0):a< -Number.EPSILON?c< -Number.EPSILON&&(l=!0):Math.sign(b)===Math.sign(f)&&(l=!0),l?(d=-b,e=a,h=Math.sqrt(m)):(d=a,e=b,h=Math.sqrt(m/2))}return new j(d/h,e/h)}let D=[];for(let t=0,E=h.length,F=E-1,G=t+1;t<E;t++,F++,G++)F===E&&(F=0),G===E&&(G=0),D[t]=ae(h[t],h[F],h[G]);let Y=[],k,H=D.concat();for(let Z=0,ax=c.length;Z<ax;Z++){let I=c[Z];k=[];for(let u=0,J=I.length,K=J-1,L=u+1;u<J;u++,K++,L++)K===J&&(K=0),L===J&&(L=0),k[u]=ae(I[u],I[K],I[L]);Y.push(k),H=H.concat(k)}for(let $=0;$<o;$++){let af=$/o,ag=y*Math.cos(af*Math.PI/2),ah=z*Math.sin(af*Math.PI/2)+A;for(let M=0,ay=h.length;M<ay;M++){let ai=m(h[M],D[M],ah);aI(ai.x,ai.y,-ag)}for(let N=0,az=c.length;N<az;N++){let aj=c[N];k=Y[N];for(let O=0,aA=aj.length;O<aA;O++){let ak=m(aj[O],k[O],ah);aI(ak.x,ak.y,-ag)}}}let al=z+A;for(let v=0;v<ad;v++){let P=x?m(b[v],H[v],al):b[v];B?(s.copy(q.normals[0]).multiplyScalar(P.x),r.copy(q.binormals[0]).multiplyScalar(P.y),g.copy(p[0]).add(s).add(r),aI(g.x,g.y,g.z)):aI(P.x,P.y,0)}for(let n=1;n<=l;n++)for(let w=0;w<ad;w++){let Q=x?m(b[w],H[w],al):b[w];B?(s.copy(q.normals[n]).multiplyScalar(Q.x),r.copy(q.binormals[n]).multiplyScalar(Q.y),g.copy(p[n]).add(s).add(r),aI(g.x,g.y,g.z)):aI(Q.x,Q.y,V/l*n)}for(let _=o-1;_>=0;_--){let am=_/o,aa=y*Math.cos(am*Math.PI/2),an=z*Math.sin(am*Math.PI/2)+A;for(let R=0,aB=h.length;R<aB;R++){let ao=m(h[R],D[R],an);aI(ao.x,ao.y,V+aa)}for(let S=0,aC=c.length;S<aC;S++){let ap=c[S];k=Y[S];for(let T=0,aD=ap.length;T<aD;T++){let U=m(ap[T],k[T],an);B?aI(U.x,U.y+p[l-1].y,p[l-1].x+aa):aI(U.x,U.y,V+aa)}}}function aH(e,a){let d=e.length;for(;--d>=0;){let f=d,b=d-1;b<0&&(b=e.length-1);for(let c=0,i=l+2*o;c<i;c++){let g=ad*c,h=ad*(c+1),j=a+f+g,k=a+b+g,m=a+b+h,n=a+f+h;aK(j,k,m,n)}}}function aI(a,b,c){aE.push(a),aE.push(b),aE.push(c)}function aJ(c,d,f){aL(c),aL(d),aL(f);let a=e.length/3,b=aF.generateTopUV(i,e,a-3,a-2,a-1);aM(b[0]),aM(b[1]),aM(b[2])}function aK(f,c,g,d){aL(f),aL(c),aL(d),aL(c),aL(g),aL(d);let b=e.length/3,a=aF.generateSideWallUV(i,e,b-6,b-3,b-2,b-1);aM(a[0]),aM(a[1]),aM(a[3]),aM(a[1]),aM(a[2]),aM(a[3])}function aL(a){e.push(aE[3*a+0]),e.push(aE[3*a+1]),e.push(aE[3*a+2])}function aM(a){f.push(a.x),f.push(a.y)}(function(){let m=e.length/3;if(x){let n=0,a=ad*n;for(let b=0;b<aG;b++){let c=au[b];aJ(c[2]+a,c[1]+a,c[0]+a)}a=ad*(n=l+2*o);for(let d=0;d<aG;d++){let f=au[d];aJ(f[0]+a,f[1]+a,f[2]+a)}}else{for(let g=0;g<aG;g++){let h=au[g];aJ(h[2],h[1],h[0])}for(let j=0;j<aG;j++){let k=au[j];aJ(k[0]+ad*l,k[1]+ad*l,k[2]+ad*l)}}i.addGroup(m,e.length/3-m,0)})(),function(){let d=e.length/3,a=0;aH(h,a),a+=h.length;for(let b=0,g=c.length;b<g;b++){let f=c[b];aH(f,a),a+=f.length}i.addGroup(d,e.length/3-d,1)}()}this.setAttribute("position",new fp(e,3)),this.setAttribute("uv",new fp(f,2)),this.computeVertexNormals()}toJSON(){let a=super.toJSON(),b=this.parameters.shapes,c=this.parameters.options;return jP(b,c,a)}static fromJSON(a,e){let d=[];for(let b=0,f=a.shapes.length;b<f;b++){let g=e[a.shapes[b]];d.push(g)}let c=a.options.extrudePath;return void 0!==c&&(a.options.extrudePath=new i9[c.type]().fromJSON(c)),new ag(d,a.options)}}let jO={generateTopUV:function(l,a,b,c,d){let e=a[3*b],f=a[3*b+1],g=a[3*c],h=a[3*c+1],i=a[3*d],k=a[3*d+1];return[new j(e,f),new j(g,h),new j(i,k)]},generateSideWallUV:function(s,a,b,c,d,e){let f=a[3*b],g=a[3*b+1],h=a[3*b+2],i=a[3*c],k=a[3*c+1],l=a[3*c+2],o=a[3*d],p=a[3*d+1],m=a[3*d+2],q=a[3*e],r=a[3*e+1],n=a[3*e+2];return Math.abs(g-k)<Math.abs(f-i)?[new j(f,1-h),new j(i,1-l),new j(o,1-m),new j(q,1-n)]:[new j(g,1-h),new j(k,1-l),new j(p,1-m),new j(r,1-n)]}};function jP(b,c,a){if(a.shapes=[],Array.isArray(b))for(let d=0,e=b.length;d<e;d++){let f=b[d];a.shapes.push(f.uuid)}else a.shapes.push(b.uuid);return a.options=Object.assign({},c),void 0!==c.extrudePath&&(a.options.extrudePath=c.extrudePath.toJSON()),a}class ah extends x{constructor(b=1,c=0){let a=(1+Math.sqrt(5))/2;super([-1,a,0,1,a,0,-1,-a,0,1,-a,0,0,-1,a,0,1,a,0,-1,-a,0,1,-a,a,0,-1,a,0,1,-a,0,-1,-a,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],b,c),this.type="IcosahedronGeometry",this.parameters={radius:b,detail:c}}static fromJSON(a){return new ah(a.radius,a.detail)}}class ai extends x{constructor(a=1,b=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],a,b),this.type="OctahedronGeometry",this.parameters={radius:a,detail:b}}static fromJSON(a){return new ai(a.radius,a.detail)}}class aj extends g{constructor(h=.5,e=1,b=8,d=1,o=0,p=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:h,outerRadius:e,thetaSegments:b,phiSegments:d,thetaStart:o,thetaLength:p},b=Math.max(3,b),d=Math.max(1,d);let i=[],q=[],r=[],s=[],k=h,x=(e-h)/d,c=new a,f=new j;for(let t=0;t<=d;t++){for(let l=0;l<=b;l++){let u=o+l/b*p;c.x=k*Math.cos(u),c.y=k*Math.sin(u),q.push(c.x,c.y,c.z),r.push(0,0,1),f.x=(c.x/e+1)/2,f.y=(c.y/e+1)/2,s.push(f.x,f.y)}k+=x}for(let m=0;m<d;m++){let y=m*(b+1);for(let n=0;n<b;n++){let g=n+y,z=g,v=g+b+1,A=g+b+2,w=g+1;i.push(z,v,w),i.push(v,A,w)}}this.setIndex(i),this.setAttribute("position",new fp(q,3)),this.setAttribute("normal",new fp(r,3)),this.setAttribute("uv",new fp(s,2))}static fromJSON(a){return new aj(a.innerRadius,a.outerRadius,a.thetaSegments,a.phiSegments,a.thetaStart,a.thetaLength)}}class ak extends g{constructor(a=new je([new j(0,.5),new j(-0.5,-0.5),new j(.5,-0.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:a,curveSegments:e};let f=[],g=[],h=[],i=[],d=0,c=0;if(!1===Array.isArray(a))k(a);else for(let b=0;b<a.length;b++)k(a[b]),this.addGroup(d,c,b),d+=c,c=0;function k(s){let k=g.length/3,p=s.extractPoints(e),a=p.shape,b=p.holes;!1===jL.isClockWise(a)&&(a=a.reverse());for(let d=0,t=b.length;d<t;d++){let q=b[d];!0===jL.isClockWise(q)&&(b[d]=q.reverse())}let r=jL.triangulateShape(a,b);for(let l=0,u=b.length;l<u;l++){let v=b[l];a=a.concat(v)}for(let m=0,w=a.length;m<w;m++){let j=a[m];g.push(j.x,j.y,0),h.push(0,0,1),i.push(j.x,j.y)}for(let n=0,x=r.length;n<x;n++){let o=r[n],y=o[0]+k,z=o[1]+k,A=o[2]+k;f.push(y,z,A),c+=3}}this.setIndex(f),this.setAttribute("position",new fp(g,3)),this.setAttribute("normal",new fp(h,3)),this.setAttribute("uv",new fp(i,2))}toJSON(){let a=super.toJSON(),b=this.parameters.shapes;return jQ(b,a)}static fromJSON(a,d){let c=[];for(let b=0,e=a.shapes.length;b<e;b++){let f=d[a.shapes[b]];c.push(f)}return new ak(c,a.curveSegments)}}function jQ(a,b){if(b.shapes=[],Array.isArray(a))for(let c=0,d=a.length;c<d;c++){let e=a[c];b.shapes.push(e.uuid)}else b.shapes.push(a.uuid);return b}class al extends g{constructor(k=1,b=32,c=16,n=0,o=2*Math.PI,e=0,h=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:k,widthSegments:b,heightSegments:c,phiStart:n,phiLength:o,thetaStart:e,thetaLength:h},b=Math.max(3,Math.floor(b)),c=Math.max(2,Math.floor(c));let t=Math.min(e+h,Math.PI),A=0,i=[],f=new a,l=new a,p=[],u=[],v=[],w=[];for(let j=0;j<=c;j++){let x=[],m=j/c,q=0;0==j&&0==e?q=.5/b:j==c&&t==Math.PI&&(q=-0.5/b);for(let r=0;r<=b;r++){let s=r/b;f.x=-k*Math.cos(n+s*o)*Math.sin(e+m*h),f.y=k*Math.cos(e+m*h),f.z=k*Math.sin(n+s*o)*Math.sin(e+m*h),u.push(f.x,f.y,f.z),l.copy(f).normalize(),v.push(l.x,l.y,l.z),w.push(s+q,1-m),x.push(A++)}i.push(x)}for(let d=0;d<c;d++)for(let g=0;g<b;g++){let B=i[d][g+1],y=i[d][g],C=i[d+1][g],z=i[d+1][g+1];(0!==d||e>0)&&p.push(B,y,z),(d!==c-1||t<Math.PI)&&p.push(y,C,z)}this.setIndex(p),this.setAttribute("position",new fp(u,3)),this.setAttribute("normal",new fp(v,3)),this.setAttribute("uv",new fp(w,2))}static fromJSON(a){return new al(a.radius,a.widthSegments,a.heightSegments,a.phiStart,a.phiLength,a.thetaStart,a.thetaLength)}}class am extends x{constructor(a=1,b=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],a,b),this.type="TetrahedronGeometry",this.parameters={radius:a,detail:b}}static fromJSON(a){return new am(a.radius,a.detail)}}class an extends g{constructor(g=1,h=.4,c=8,b=6,q=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:g,tube:h,radialSegments:c,tubularSegments:b,arc:q},c=Math.floor(c),b=Math.floor(b);let m=[],r=[],s=[],n=[],o=new a,d=new a,i=new a;for(let j=0;j<=c;j++)for(let k=0;k<=b;k++){let l=k/b*q,p=j/c*Math.PI*2;d.x=(g+h*Math.cos(p))*Math.cos(l),d.y=(g+h*Math.cos(p))*Math.sin(l),d.z=h*Math.sin(p),r.push(d.x,d.y,d.z),o.x=g*Math.cos(l),o.y=g*Math.sin(l),i.subVectors(d,o).normalize(),s.push(i.x,i.y,i.z),n.push(k/b),n.push(j/c)}for(let e=1;e<=c;e++)for(let f=1;f<=b;f++){let v=(b+1)*e+f-1,t=(b+1)*(e-1)+f-1,w=(b+1)*(e-1)+f,u=(b+1)*e+f;m.push(v,t,u),m.push(t,w,u)}this.setIndex(m),this.setAttribute("position",new fp(r,3)),this.setAttribute("normal",new fp(s,3)),this.setAttribute("uv",new fp(n,2))}static fromJSON(a){return new an(a.radius,a.tube,a.radialSegments,a.tubularSegments,a.arc)}}class ao extends g{constructor(n=1,o=.4,c=64,b=8,j=2,p=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:n,tube:o,tubularSegments:c,radialSegments:b,p:j,q:p},c=Math.floor(c),b=Math.floor(b);let q=[],w=[],x=[],r=[],d=new a,k=new a,e=new a,s=new a,g=new a,t=new a,f=new a;for(let l=0;l<=c;++l){let y=l/c*j*Math.PI*2;E(y,j,p,n,e),E(y+.01,j,p,n,s),t.subVectors(s,e),f.addVectors(s,e),g.crossVectors(t,f),f.crossVectors(g,t),g.normalize(),f.normalize();for(let m=0;m<=b;++m){let z=m/b*Math.PI*2,u=-o*Math.cos(z),v=o*Math.sin(z);d.x=e.x+(u*f.x+v*g.x),d.y=e.y+(u*f.y+v*g.y),d.z=e.z+(u*f.z+v*g.z),w.push(d.x,d.y,d.z),k.subVectors(d,e).normalize(),x.push(k.x,k.y,k.z),r.push(l/c),r.push(m/b)}}for(let h=1;h<=c;h++)for(let i=1;i<=b;i++){let C=(b+1)*(h-1)+(i-1),A=(b+1)*h+(i-1),D=(b+1)*h+i,B=(b+1)*(h-1)+i;q.push(C,A,B),q.push(A,D,B)}function E(a,f,g,b,c){let d=g/f*a,e=Math.cos(d);c.x=b*(2+e)*.5*Math.cos(a),c.y=b*(2+e)*Math.sin(a)*.5,c.z=b*Math.sin(d)*.5}this.setIndex(q),this.setAttribute("position",new fp(w,3)),this.setAttribute("normal",new fp(x,3)),this.setAttribute("uv",new fp(r,2))}static fromJSON(a){return new ao(a.radius,a.tube,a.tubularSegments,a.radialSegments,a.p,a.q)}}class ap extends g{constructor(c=new a8(new a(-1,-1,0),new a(-1,1,0),new a(1,1,0)),d=64,f=1,g=8,e=!1){super(),this.type="TubeGeometry",this.parameters={path:c,tubularSegments:d,radius:f,radialSegments:g,closed:e};let b=c.computeFrenetFrames(d,e);this.tangents=b.tangents,this.normals=b.normals,this.binormals=b.binormals;let m=new a,n=new a,o=new j,p=new a,h=[],i=[],k=[],l=[];function q(a){p=c.getPointAt(a/d,p);let e=b.normals[a],j=b.binormals[a];for(let k=0;k<=g;k++){let q=k/g*Math.PI*2,l=Math.sin(q),o=-Math.cos(q);n.x=o*e.x+l*j.x,n.y=o*e.y+l*j.y,n.z=o*e.z+l*j.z,n.normalize(),i.push(n.x,n.y,n.z),m.x=p.x+f*n.x,m.y=p.y+f*n.y,m.z=p.z+f*n.z,h.push(m.x,m.y,m.z)}}function r(){for(let a=1;a<=d;a++)for(let b=1;b<=g;b++){let f=(g+1)*(a-1)+(b-1),c=(g+1)*a+(b-1),h=(g+1)*a+b,e=(g+1)*(a-1)+b;l.push(f,c,e),l.push(c,h,e)}}function s(){for(let a=0;a<=d;a++)for(let b=0;b<=g;b++)o.x=a/d,o.y=b/g,k.push(o.x,o.y)}(function(){for(let a=0;a<d;a++)q(a);q(!1===e?d:0),s(),r()})(),this.setIndex(l),this.setAttribute("position",new fp(h,3)),this.setAttribute("normal",new fp(i,3)),this.setAttribute("uv",new fp(k,2))}toJSON(){let a=super.toJSON();return a.path=this.parameters.path.toJSON(),a}static fromJSON(a){return new ap(new i9[a.path.type]().fromJSON(a.path),a.tubularSegments,a.radius,a.radialSegments,a.closed)}}class bd extends g{constructor(d=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:d},null!==d){let e=[],n=new Set,b=new a,c=new a;if(null!==d.index){let o=d.attributes.position,k=d.index,f=d.groups;0===f.length&&(f=[{start:0,count:k.count,materialIndex:0}]);for(let l=0,r=f.length;l<r;++l){let p=f[l],q=p.start,s=p.count;for(let g=q,t=q+s;g<t;g+=3)for(let h=0;h<3;h++){let u=k.getX(g+h),v=k.getX(g+(h+1)%3);b.fromBufferAttribute(o,u),c.fromBufferAttribute(o,v),!0===jR(b,c,n)&&(e.push(b.x,b.y,b.z),e.push(c.x,c.y,c.z))}}}else{let m=d.attributes.position;for(let i=0,w=m.count/3;i<w;i++)for(let j=0;j<3;j++){let x=3*i+j,y=3*i+(j+1)%3;b.fromBufferAttribute(m,x),c.fromBufferAttribute(m,y),!0===jR(b,c,n)&&(e.push(b.x,b.y,b.z),e.push(c.x,c.y,c.z))}}this.setAttribute("position",new fp(e,3))}}}function jR(a,b,c){let d=`${a.x},${a.y},${a.z}-${b.x},${b.y},${b.z}`,e=`${b.x},${b.y},${b.z}-${a.x},${a.y},${a.z}`;return!0!==c.has(d)&& !0!==c.has(e)&&(c.add(d),c.add(e),!0)}var jS=Object.freeze({__proto__:null,BoxGeometry:$,BoxBufferGeometry:$,CapsuleGeometry:ac,CapsuleBufferGeometry:ac,CircleGeometry:ad,CircleBufferGeometry:ad,ConeGeometry:ae,ConeBufferGeometry:ae,CylinderGeometry:L,CylinderBufferGeometry:L,DodecahedronGeometry:af,DodecahedronBufferGeometry:af,EdgesGeometry:bc,ExtrudeGeometry:ag,ExtrudeBufferGeometry:ag,IcosahedronGeometry:ah,IcosahedronBufferGeometry:ah,LatheGeometry:K,LatheBufferGeometry:K,OctahedronGeometry:ai,OctahedronBufferGeometry:ai,PlaneGeometry:_,PlaneBufferGeometry:_,PolyhedronGeometry:x,PolyhedronBufferGeometry:x,RingGeometry:aj,RingBufferGeometry:aj,ShapeGeometry:ak,ShapeBufferGeometry:ak,SphereGeometry:al,SphereBufferGeometry:al,TetrahedronGeometry:am,TetrahedronBufferGeometry:am,TorusGeometry:an,TorusBufferGeometry:an,TorusKnotGeometry:ao,TorusKnotBufferGeometry:ao,TubeGeometry:ap,TubeBufferGeometry:ap,WireframeGeometry:bd});class jT extends k{constructor(a){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new h(0),this.transparent=!0,this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.fog=a.fog,this}}class jU extends aV{constructor(a){super(a),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class be extends k{constructor(a){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new h(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new h(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ds,this.normalScale=new j(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.defines={STANDARD:""},this.color.copy(a.color),this.roughness=a.roughness,this.metalness=a.metalness,this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.roughnessMap=a.roughnessMap,this.metalnessMap=a.metalnessMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.envMapIntensity=a.envMapIntensity,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.flatShading=a.flatShading,this.fog=a.fog,this}}class jV extends be{constructor(a){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new j(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return aI(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(a){this.ior=(1+.4*a)/(1-.4*a)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new h(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new h(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new h(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(a)}get sheen(){return this._sheen}set sheen(a){this._sheen>0!=a>0&&this.version++,this._sheen=a}get clearcoat(){return this._clearcoat}set clearcoat(a){this._clearcoat>0!=a>0&&this.version++,this._clearcoat=a}get iridescence(){return this._iridescence}set iridescence(a){this._iridescence>0!=a>0&&this.version++,this._iridescence=a}get transmission(){return this._transmission}set transmission(a){this._transmission>0!=a>0&&this.version++,this._transmission=a}copy(a){return super.copy(a),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=a.clearcoat,this.clearcoatMap=a.clearcoatMap,this.clearcoatRoughness=a.clearcoatRoughness,this.clearcoatRoughnessMap=a.clearcoatRoughnessMap,this.clearcoatNormalMap=a.clearcoatNormalMap,this.clearcoatNormalScale.copy(a.clearcoatNormalScale),this.ior=a.ior,this.iridescence=a.iridescence,this.iridescenceMap=a.iridescenceMap,this.iridescenceIOR=a.iridescenceIOR,this.iridescenceThicknessRange=[...a.iridescenceThicknessRange],this.iridescenceThicknessMap=a.iridescenceThicknessMap,this.sheen=a.sheen,this.sheenColor.copy(a.sheenColor),this.sheenColorMap=a.sheenColorMap,this.sheenRoughness=a.sheenRoughness,this.sheenRoughnessMap=a.sheenRoughnessMap,this.transmission=a.transmission,this.transmissionMap=a.transmissionMap,this.thickness=a.thickness,this.thicknessMap=a.thicknessMap,this.attenuationDistance=a.attenuationDistance,this.attenuationColor.copy(a.attenuationColor),this.specularIntensity=a.specularIntensity,this.specularIntensityMap=a.specularIntensityMap,this.specularColor.copy(a.specularColor),this.specularColorMap=a.specularColorMap,this}}class jW extends k{constructor(a){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new h(16777215),this.specular=new h(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new h(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ds,this.normalScale=new j(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=cd,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.specular.copy(a.specular),this.shininess=a.shininess,this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.flatShading=a.flatShading,this.fog=a.fog,this}}class jX extends k{constructor(a){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new h(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new h(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ds,this.normalScale=new j(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.gradientMap=a.gradientMap,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.alphaMap=a.alphaMap,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.fog=a.fog,this}}class jY extends k{constructor(a){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ds,this.normalScale=new j(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(a)}copy(a){return super.copy(a),this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.flatShading=a.flatShading,this}}class jZ extends k{constructor(a){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new h(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new h(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=cd,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.color.copy(a.color),this.map=a.map,this.lightMap=a.lightMap,this.lightMapIntensity=a.lightMapIntensity,this.aoMap=a.aoMap,this.aoMapIntensity=a.aoMapIntensity,this.emissive.copy(a.emissive),this.emissiveMap=a.emissiveMap,this.emissiveIntensity=a.emissiveIntensity,this.specularMap=a.specularMap,this.alphaMap=a.alphaMap,this.envMap=a.envMap,this.combine=a.combine,this.reflectivity=a.reflectivity,this.refractionRatio=a.refractionRatio,this.wireframe=a.wireframe,this.wireframeLinewidth=a.wireframeLinewidth,this.wireframeLinecap=a.wireframeLinecap,this.wireframeLinejoin=a.wireframeLinejoin,this.fog=a.fog,this}}class j$ extends k{constructor(a){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new h(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ds,this.normalScale=new j(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(a)}copy(a){return super.copy(a),this.defines={MATCAP:""},this.color.copy(a.color),this.matcap=a.matcap,this.map=a.map,this.bumpMap=a.bumpMap,this.bumpScale=a.bumpScale,this.normalMap=a.normalMap,this.normalMapType=a.normalMapType,this.normalScale.copy(a.normalScale),this.displacementMap=a.displacementMap,this.displacementScale=a.displacementScale,this.displacementBias=a.displacementBias,this.alphaMap=a.alphaMap,this.flatShading=a.flatShading,this.fog=a.fog,this}}class j_ extends a0{constructor(a){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(a)}copy(a){return super.copy(a),this.scale=a.scale,this.dashSize=a.dashSize,this.gapSize=a.gapSize,this}}function bf(a,c,b){return bh(a)?new a.constructor(a.subarray(c,void 0!==b?b:a.length)):a.slice(c,b)}function bg(a,b,c){return a&&(c||a.constructor!==b)?"number"==typeof b.BYTES_PER_ELEMENT?new b(a):Array.prototype.slice.call(a):a}function bh(a){return ArrayBuffer.isView(a)&&!(a instanceof DataView)}function bi(d){let c=d.length,b=Array(c);for(let a=0;a!==c;++a)b[a]=a;return b.sort(function(a,b){return d[a]-d[b]}),b}function bj(a,c,h){let d=a.length,e=new a.constructor(d);for(let f=0,g=0;g!==d;++f){let i=h[f]*c;for(let b=0;b!==c;++b)e[g++]=a[i+b]}return e}function bk(c,g,d,e){let f=1,a=c[0];for(;void 0!==a&& void 0===a[e];)a=c[f++];if(void 0===a)return;let b=a[e];if(void 0!==b){if(Array.isArray(b))do void 0!==(b=a[e])&&(g.push(a.time),d.push.apply(d,b)),a=c[f++];while(void 0!==a)else if(void 0!==b.toArray)do void 0!==(b=a[e])&&(g.push(a.time),b.toArray(d,d.length)),a=c[f++];while(void 0!==a)else do void 0!==(b=a[e])&&(g.push(a.time),d.push(b)),a=c[f++];while(void 0!==a)}}var j0=Object.freeze({__proto__:null,arraySlice:bf,convertArray:bg,isTypedArray:bh,getKeyframeOrder:bi,sortedArray:bj,flattenJSON:bk,subclip:function(n,o,p,q,r=30){let a=n.clone();a.name=o;let j=[];for(let e=0;e<a.tracks.length;++e){let b=a.tracks[e],k=b.getValueSize(),f=[],l=[];for(let c=0;c<b.times.length;++c){let m=b.times[c]*r;if(!(m<p)&&!(m>=q)){f.push(b.times[c]);for(let g=0;g<k;++g)l.push(b.values[c*k+g])}}0!==f.length&&(b.times=bg(f,b.times.constructor),b.values=bg(l,b.values.constructor),j.push(b))}a.tracks=j;let h=1/0;for(let d=0;d<a.tracks.length;++d)h>a.tracks[d].times[0]&&(h=a.tracks[d].times[0]);for(let i=0;i<a.tracks.length;++i)a.tracks[i].shift(-1*h);return a.resetDuration(),a},makeClipAdditive:function(f,t=0,p=f,i=30){i<=0&&(i=30);let u=p.tracks.length,j=t/i;for(let k=0;k<u;++k){let a=p.tracks[k],g=a.ValueTypeName;if("bool"===g||"string"===g)continue;let b=f.tracks.find(function(b){return b.name===a.name&&b.ValueTypeName===g});if(void 0===b)continue;let c=0,e=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=e/3);let l=0,m=b.getValueSize();b.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(l=m/3);let q=a.times.length-1,d;if(j<=a.times[0]){let w=c,x=e-c;d=bf(a.values,w,x)}else if(j>=a.times[q]){let r=q*e+c,y=r+e-c;d=bf(a.values,r,y)}else{let s=a.createInterpolant(),z=c,A=e-c;s.evaluate(j),d=bf(s.resultBuffer,z,A)}if("quaternion"===g){let B=new v().fromArray(d).normalize().conjugate();B.toArray(d)}let C=b.times.length;for(let n=0;n<C;++n){let o=n*m+l;if("quaternion"===g)v.multiplyQuaternionsFlat(b.values,o,d,0,b.values,o);else{let D=m-2*l;for(let h=0;h<D;++h)b.values[o+h]-=d[h]}}}return f.blendMode=dj,f}});class E{constructor(d,a,b,c){this.parameterPositions=d,this._cachedIndex=0,this.resultBuffer=void 0!==c?c:new a.constructor(b),this.sampleValues=a,this.valueSize=b,this.settings=null,this.DefaultSettings_={}}evaluate(e){let b=this.parameterPositions,a=this._cachedIndex,d=b[a],c=b[a-1];validate_interval:{seek:{let f;linear_scan:{forward_scan:if(!(e<d)){for(let i=a+2;;){if(void 0===d){if(e<c)break forward_scan;return a=b.length,this._cachedIndex=a,this.copySampleValue_(a-1)}if(a===i)break;if(c=d,e<(d=b[++a]))break seek}f=b.length;break linear_scan}if(!(e>=c)){let h=b[1];e<h&&(a=2,c=h);for(let j=a-2;;){if(void 0===c)return this._cachedIndex=0,this.copySampleValue_(0);if(a===j)break;if(d=c,e>=(c=b[--a-1]))break seek}f=a,a=0;break linear_scan}break validate_interval}for(;a<f;){let g=a+f>>>1;e<b[g]?f=g:a=g+1}if(d=b[a],c=b[a-1],void 0===c)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===d)return a=b.length,this._cachedIndex=a,this.copySampleValue_(a-1)}this._cachedIndex=a,this.intervalChanged_(a,c,d)}return this.interpolate_(a,c,e,d)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(d){let b=this.resultBuffer,e=this.sampleValues,c=this.valueSize,f=d*c;for(let a=0;a!==c;++a)b[a]=e[f+a];return b}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}class j1 extends E{constructor(a,b,c,d){super(a,b,c,d),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:df,endingEnd:df}}intervalChanged_(c,d,e){let a=this.parameterPositions,b=c-2,f=c+1,g=a[b],h=a[f];if(void 0===g)switch(this.getSettings_().endingStart){case dg:b=c,g=2*d-e;break;case dh:b=a.length-2,g=d+a[b]-a[b+1];break;default:b=c,g=e}if(void 0===h)switch(this.getSettings_().endingEnd){case dg:f=c,h=2*e-d;break;case dh:f=1,h=e+a[1]-a[0];break;default:f=c-1,h=d}let i=(e-d)*.5,j=this.valueSize;this._weightPrev=i/(d-g),this._weightNext=i/(h-e),this._offsetPrev=b*j,this._offsetNext=f*j}interpolate_(l,i,m,n){let j=this.resultBuffer,e=this.sampleValues,h=this.valueSize,k=l*h,o=k-h,p=this._offsetPrev,q=this._offsetNext,b=this._weightPrev,f=this._weightNext,c=(m-i)/(n-i),d=c*c,g=d*c,r=-b*g+2*b*d-b*c,s=(1+b)*g+(-1.5-2*b)*d+(-0.5+b)*c+1,t=(-1-f)*g+(1.5+f)*d+.5*c,u=f*g-f*d;for(let a=0;a!==h;++a)j[a]=r*e[p+a]+s*e[o+a]+t*e[k+a]+u*e[q+a];return j}}class j2 extends E{constructor(a,b,c,d){super(a,b,c,d)}interpolate_(h,c,i,j){let d=this.resultBuffer,e=this.sampleValues,b=this.valueSize,f=h*b,k=f-b,g=(i-c)/(j-c),l=1-g;for(let a=0;a!==b;++a)d[a]=e[k+a]*l+e[f+a]*g;return d}}class j3 extends E{constructor(a,b,c,d){super(a,b,c,d)}interpolate_(a){return this.copySampleValue_(a-1)}}class p{constructor(a,b,c,d){if(void 0===a)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===b||0===b.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+a);this.name=a,this.times=bg(b,this.TimeBufferType),this.values=bg(c,this.ValueBufferType),this.setInterpolation(d||this.DefaultInterpolation)}static toJSON(a){let c=a.constructor,b;if(c.toJSON!==this.toJSON)b=c.toJSON(a);else{b={name:a.name,times:bg(a.times,Array),values:bg(a.values,Array)};let d=a.getInterpolation();d!==a.DefaultInterpolation&&(b.interpolation=d)}return b.type=a.ValueTypeName,b}InterpolantFactoryMethodDiscrete(a){return new j3(this.times,this.values,this.getValueSize(),a)}InterpolantFactoryMethodLinear(a){return new j2(this.times,this.values,this.getValueSize(),a)}InterpolantFactoryMethodSmooth(a){return new j1(this.times,this.values,this.getValueSize(),a)}setInterpolation(b){let a;switch(b){case T:a=this.InterpolantFactoryMethodDiscrete;break;case U:a=this.InterpolantFactoryMethodLinear;break;case de:a=this.InterpolantFactoryMethodSmooth}if(void 0===a){let c="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(b!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(c)}return console.warn("THREE.KeyframeTrack:",c),this}return this.createInterpolant=a,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return T;case this.InterpolantFactoryMethodLinear:return U;case this.InterpolantFactoryMethodSmooth:return de}}getValueSize(){return this.values.length/this.times.length}shift(b){if(0!==b){let c=this.times;for(let a=0,d=c.length;a!==d;++a)c[a]+=b}return this}scale(b){if(1!==b){let c=this.times;for(let a=0,d=c.length;a!==d;++a)c[a]*=b}return this}trim(f,g){let c=this.times,d=c.length,b=0,a=d-1;for(;b!==d&&c[b]<f;)++b;for(;-1!==a&&c[a]>g;)--a;if(++a,0!==b||a!==d){b>=a&&(b=(a=Math.max(a,1))-1);let e=this.getValueSize();this.times=bf(c,b,a),this.values=bf(this.values,b*e,a*e)}return this}validate(){let a=!0,g=this.getValueSize();g-Math.floor(g)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),a=!1);let h=this.times,d=this.values,i=h.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),a=!1);let e=null;for(let c=0;c!==i;c++){let b=h[c];if("number"==typeof b&&isNaN(b)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,b),a=!1;break}if(null!==e&&e>b){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,b,e),a=!1;break}e=b}if(void 0!==d&&bh(d))for(let f=0,k=d.length;f!==k;++f){let j=d[f];if(isNaN(j)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,f,j),a=!1;break}}return a}optimize(){let a=bf(this.times),d=bf(this.values),b=this.getValueSize(),n=this.getInterpolation()===de,g=a.length-1,c=1;for(let e=1;e<g;++e){let j=!1,l=a[e],o=a[e+1];if(l!==o&&(1!==e||l!==a[0])){if(n)j=!0;else{let k=e*b,p=k-b,q=k+b;for(let f=0;f!==b;++f){let m=d[k+f];if(m!==d[p+f]||m!==d[q+f]){j=!0;break}}}}if(j){if(e!==c){a[c]=a[e];let r=e*b,s=c*b;for(let h=0;h!==b;++h)d[s+h]=d[r+h]}++c}}if(g>0){a[c]=a[g];for(let t=g*b,u=c*b,i=0;i!==b;++i)d[u+i]=d[t+i];++c}return c!==a.length?(this.times=bf(a,0,c),this.values=bf(d,0,c*b)):(this.times=a,this.values=d),this}clone(){let b=bf(this.times,0),c=bf(this.values,0),d=this.constructor,a=new d(this.name,b,c);return a.createInterpolant=this.createInterpolant,a}}p.prototype.TimeBufferType=Float32Array,p.prototype.ValueBufferType=Float32Array,p.prototype.DefaultInterpolation=U;class A extends p{}A.prototype.ValueTypeName="bool",A.prototype.ValueBufferType=Array,A.prototype.DefaultInterpolation=T,A.prototype.InterpolantFactoryMethodLinear=void 0,A.prototype.InterpolantFactoryMethodSmooth=void 0;class bl extends p{}bl.prototype.ValueTypeName="color";class bm extends p{}bm.prototype.ValueTypeName="number";class j4 extends E{constructor(a,b,c,d){super(a,b,c,d)}interpolate_(f,c,g,h){let d=this.resultBuffer,e=this.sampleValues,b=this.valueSize,i=(g-c)/(h-c),a=f*b;for(let j=a+b;a!==j;a+=4)v.slerpFlat(d,0,e,a-b,e,a,i);return d}}class M extends p{InterpolantFactoryMethodLinear(a){return new j4(this.times,this.values,this.getValueSize(),a)}}M.prototype.ValueTypeName="quaternion",M.prototype.DefaultInterpolation=U,M.prototype.InterpolantFactoryMethodSmooth=void 0;class B extends p{}B.prototype.ValueTypeName="string",B.prototype.ValueBufferType=Array,B.prototype.DefaultInterpolation=T,B.prototype.InterpolantFactoryMethodLinear=void 0,B.prototype.InterpolantFactoryMethodSmooth=void 0;class bn extends p{}bn.prototype.ValueTypeName="vector";class j5{constructor(a,b=-1,c,d=di){this.name=a,this.tracks=c,this.duration=b,this.blendMode=d,this.uuid=aH(),this.duration<0&&this.resetDuration()}static parse(a){let c=[],d=a.tracks,f=1/(a.fps||1);for(let b=0,g=d.length;b!==g;++b)c.push(j6(d[b]).scale(f));let e=new this(a.name,a.duration,c,a.blendMode);return e.uuid=a.uuid,e}static toJSON(a){let c=[],d=a.tracks,e={name:a.name,duration:a.duration,tracks:c,uuid:a.uuid,blendMode:a.blendMode};for(let b=0,f=d.length;b!==f;++b)c.push(p.toJSON(d[b]));return e}static CreateFromMorphTargetSequence(h,e,i,j){let d=e.length,f=[];for(let b=0;b<d;b++){let a=[],c=[];a.push((b+d-1)%d,b,(b+1)%d),c.push(0,1,0);let g=bi(a);a=bj(a,1,g),c=bj(c,1,g),j||0!==a[0]||(a.push(d),c.push(c[0])),f.push(new bm(".morphTargetInfluences["+e[b].name+"]",a,c).scale(1/i))}return new this(h,-1,f)}static findByName(c,e){let a=c;if(!Array.isArray(c)){let d=c;a=d.geometry&&d.geometry.animations||d.animations}for(let b=0;b<a.length;b++)if(a[b].name===e)return a[b];return null}static CreateClipsFromMorphTargetSequences(e,j,k){let a={},l=/^([\w-]*?)([\d]+)$/;for(let b=0,m=e.length;b<m;b++){let f=e[b],c=f.name.match(l);if(c&&c.length>1){let g=c[1],d=a[g];d||(a[g]=d=[]),d.push(f)}}let h=[];for(let i in a)h.push(this.CreateFromMorphTargetSequence(i,a[i],j,k));return h}static parseAnimation(c,q){if(!c)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;let f=function(d,e,b,f,g){if(0!==b.length){let a=[],c=[];bk(b,a,c,f),0!==a.length&&g.push(new d(e,a,c))}},d=[],r=c.name||"default",s=c.fps||30,t=c.blendMode,j=c.length|| -1,k=c.hierarchy||[];for(let e=0;e<k.length;e++){let a=k[e].keys;if(a&&0!==a.length){if(a[0].morphTargets){let g={},b;for(b=0;b<a.length;b++)if(a[b].morphTargets)for(let h=0;h<a[b].morphTargets.length;h++)g[a[b].morphTargets[h]]=-1;for(let l in g){let m=[],n=[];for(let o=0;o!==a[b].morphTargets.length;++o){let p=a[b];m.push(p.time),n.push(p.morphTarget===l?1:0)}d.push(new bm(".morphTargetInfluence["+l+"]",m,n))}j=g.length*s}else{let i=".bones["+q[e].name+"]";f(bn,i+".position",a,"pos",d),f(M,i+".quaternion",a,"rot",d),f(bn,i+".scale",a,"scl",d)}}}if(0===d.length)return null;let u=new this(r,j,d,t);return u}resetDuration(){let d=this.tracks,a=0;for(let b=0,e=d.length;b!==e;++b){let c=this.tracks[b];a=Math.max(a,c.times[c.times.length-1])}return this.duration=a,this}trim(){for(let a=0;a<this.tracks.length;a++)this.tracks[a].trim(0,this.duration);return this}validate(){let a=!0;for(let b=0;b<this.tracks.length;b++)a=a&&this.tracks[b].validate();return a}optimize(){for(let a=0;a<this.tracks.length;a++)this.tracks[a].optimize();return this}clone(){let b=[];for(let a=0;a<this.tracks.length;a++)b.push(this.tracks[a].clone());return new this.constructor(this.name,this.duration,b,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function j6(a){if(void 0===a.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");let b=function(a){switch(a.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return bm;case"vector":case"vector2":case"vector3":case"vector4":return bn;case"color":return bl;case"quaternion":return M;case"bool":case"boolean":return A;case"string":return B}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+a)}(a.type);if(void 0===a.times){let c=[],d=[];bk(a.keys,c,d,"value"),a.times=c,a.values=d}return void 0!==b.parse?b.parse(a):new b(a.name,a.times,a.values,a.interpolation)}let j7={enabled:!1,files:{},add:function(a,b){!1!==this.enabled&&(this.files[a]=b)},get:function(a){if(!1!==this.enabled)return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}};class bo{constructor(a,b,c){let d=this,e=!1,f=0,g=0,h,i=[];this.onStart=void 0,this.onLoad=a,this.onProgress=b,this.onError=c,this.itemStart=function(a){g++,!1===e&& void 0!==d.onStart&&d.onStart(a,f,g),e=!0},this.itemEnd=function(a){f++,void 0!==d.onProgress&&d.onProgress(a,f,g),f===g&&(e=!1,void 0!==d.onLoad&&d.onLoad())},this.itemError=function(a){void 0!==d.onError&&d.onError(a)},this.resolveURL=function(a){return h?h(a):a},this.setURLModifier=function(a){return h=a,this},this.addHandler=function(a,b){return i.push(a,b),this},this.removeHandler=function(b){let a=i.indexOf(b);return -1!==a&&i.splice(a,2),this},this.getHandler=function(c){for(let a=0,d=i.length;a<d;a+=2){let b=i[a],e=i[a+1];if(b.global&&(b.lastIndex=0),b.test(c))return e}return null}}}let j8=new bo;class m{constructor(a){this.manager=void 0!==a?a:j8,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(a,b){let c=this;return new Promise(function(d,e){c.load(a,d,b,e)})}parse(){}setCrossOrigin(a){return this.crossOrigin=a,this}setWithCredentials(a){return this.withCredentials=a,this}setPath(a){return this.path=a,this}setResourcePath(a){return this.resourcePath=a,this}setRequestHeader(a){return this.requestHeader=a,this}}let j9={};class ka extends Error{constructor(a,b){super(a),this.response=b}}class kb extends m{constructor(a){super(a)}load(a,b,c,d){void 0===a&&(a=""),void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);let e=j7.get(a);if(void 0!==e)return this.manager.itemStart(a),setTimeout(()=>{b&&b(e),this.manager.itemEnd(a)},0),e;if(void 0!==j9[a]){j9[a].push({onLoad:b,onProgress:c,onError:d});return}j9[a]=[],j9[a].push({onLoad:b,onProgress:c,onError:d});let f=new Request(a,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),g=this.mimeType,h=this.responseType;fetch(f).then(b=>{if(200===b.status||0===b.status){if(0===b.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream|| void 0===b.body|| void 0===b.body.getReader)return b;let f=j9[a],g=b.body.getReader(),c=b.headers.get("Content-Length"),d=c?parseInt(c):0,h=0!==d,i=0,e=new ReadableStream({start(a){b();function b(){g.read().then(({done:j,value:e})=>{if(j)a.close();else{i+=e.byteLength;let k=new ProgressEvent("progress",{lengthComputable:h,loaded:i,total:d});for(let c=0,l=f.length;c<l;c++){let g=f[c];g.onProgress&&g.onProgress(k)}a.enqueue(e),b()}})}}});return new Response(e)}throw new ka(`fetch for "${b.url}" responded with ${b.status}: ${b.statusText}`,b)}).then(a=>{switch(h){case"arraybuffer":return a.arrayBuffer();case"blob":return a.blob();case"document":return a.text().then(a=>{let b=new DOMParser;return b.parseFromString(a,g)});case"json":return a.json();default:if(void 0===g)return a.text();{let c=/charset="?([^;"\s]*)"?/i,b=c.exec(g),d=b&&b[1]?b[1].toLowerCase():void 0,e=new TextDecoder(d);return a.arrayBuffer().then(a=>e.decode(a))}}}).then(c=>{j7.add(a,c);let d=j9[a];delete j9[a];for(let b=0,f=d.length;b<f;b++){let e=d[b];e.onLoad&&e.onLoad(c)}}).catch(d=>{let b=j9[a];if(void 0===b)throw this.manager.itemError(a),d;delete j9[a];for(let c=0,f=b.length;c<f;c++){let e=b[c];e.onError&&e.onError(d)}this.manager.itemError(a)}).finally(()=>{this.manager.itemEnd(a)}),this.manager.itemStart(a)}setResponseType(a){return this.responseType=a,this}setMimeType(a){return this.mimeType=a,this}}class kc extends m{constructor(a){super(a)}load(b,e,c,d){let f=this,a=new kb(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(b,function(c){try{e(f.parse(JSON.parse(c)))}catch(a){d?d(a):console.error(a),f.manager.itemError(b)}},c,d)}parse(b){let c=[];for(let a=0;a<b.length;a++){let d=j5.parse(b[a]);c.push(d)}return c}}class kd extends m{constructor(a){super(a)}load(b,j,d,e){let f=this,k=[],g=new i0,a=new kb(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(f.withCredentials);let l=0;function h(c){a.load(b[c],function(b){let a=f.parse(b,!0);k[c]={width:a.width,height:a.height,format:a.format,mipmaps:a.mipmaps},6===(l+=1)&&(1===a.mipmapCount&&(g.minFilter=aC),g.image=k,g.format=a.format,g.needsUpdate=!0,j&&j(g))},d,e)}if(Array.isArray(b))for(let c=0,i=b.length;c<i;++c)h(c);else a.load(b,function(d){let a=f.parse(d,!0);if(a.isCubemap){let e=a.mipmaps.length/a.mipmapCount;for(let b=0;b<e;b++){k[b]={mipmaps:[]};for(let c=0;c<a.mipmapCount;c++)k[b].mipmaps.push(a.mipmaps[b*a.mipmapCount+c]),k[b].format=a.format,k[b].width=a.width,k[b].height=a.height}g.image=k}else g.image.width=a.width,g.image.height=a.height,g.mipmaps=a.mipmaps;1===a.mipmapCount&&(g.minFilter=aC),g.format=a.format,g.needsUpdate=!0,j&&j(g)},d,e);return g}}class ke extends m{constructor(a){super(a)}load(a,g,h,i){void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);let c=this,d=j7.get(a);if(void 0!==d)return c.manager.itemStart(a),setTimeout(function(){g&&g(d),c.manager.itemEnd(a)},0),d;let b=d1("img");function e(){j(),j7.add(a,this),g&&g(this),c.manager.itemEnd(a)}function f(b){j(),i&&i(b),c.manager.itemError(a),c.manager.itemEnd(a)}function j(){b.removeEventListener("load",e,!1),b.removeEventListener("error",f,!1)}return b.addEventListener("load",e,!1),b.addEventListener("error",f,!1),"data:"!==a.slice(0,5)&& void 0!==this.crossOrigin&&(b.crossOrigin=this.crossOrigin),c.manager.itemStart(a),b.src=a,b}}class kf extends m{constructor(a){super(a)}load(c,f,g,h){let d=new aX,b=new ke(this.manager);b.setCrossOrigin(this.crossOrigin),b.setPath(this.path);let i=0;function e(a){b.load(c[a],function(b){d.images[a]=b,6== ++i&&(d.needsUpdate=!0,f&&f(d))},void 0,h)}for(let a=0;a<c.length;++a)e(a);return d}}class kg extends m{constructor(a){super(a)}load(b,g,c,d){let e=this,f=new iB,a=new kb(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(e.withCredentials),a.load(b,function(b){let a=e.parse(b);a&&(void 0!==a.image?f.image=a.image:void 0!==a.data&&(f.image.width=a.width,f.image.height=a.height,f.image.data=a.data),f.wrapS=void 0!==a.wrapS?a.wrapS:ax,f.wrapT=void 0!==a.wrapT?a.wrapT:ax,f.magFilter=void 0!==a.magFilter?a.magFilter:aC,f.minFilter=void 0!==a.minFilter?a.minFilter:aC,f.anisotropy=void 0!==a.anisotropy?a.anisotropy:1,void 0!==a.encoding&&(f.encoding=a.encoding),void 0!==a.flipY&&(f.flipY=a.flipY),void 0!==a.format&&(f.format=a.format),void 0!==a.type&&(f.type=a.type),void 0!==a.mipmaps&&(f.mipmaps=a.mipmaps,f.minFilter=aE),1===a.mipmapCount&&(f.minFilter=aC),void 0!==a.generateMipmaps&&(f.generateMipmaps=a.generateMipmaps),f.needsUpdate=!0,g&&g(f,a))},c,d),f}}class kh extends m{constructor(a){super(a)}load(b,f,c,d){let e=new l,a=new ke(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(b,function(a){e.image=a,e.needsUpdate=!0,void 0!==f&&f(e)},c,d),e}}class t extends f{constructor(a,b=1){super(),this.isLight=!0,this.type="Light",this.color=new h(a),this.intensity=b}dispose(){}copy(a,b){return super.copy(a,b),this.color.copy(a.color),this.intensity=a.intensity,this}toJSON(b){let a=super.toJSON(b);return a.object.color=this.color.getHex(),a.object.intensity=this.intensity,void 0!==this.groundColor&&(a.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(a.object.distance=this.distance),void 0!==this.angle&&(a.object.angle=this.angle),void 0!==this.decay&&(a.object.decay=this.decay),void 0!==this.penumbra&&(a.object.penumbra=this.penumbra),void 0!==this.shadow&&(a.object.shadow=this.shadow.toJSON()),a}}class ki extends t{constructor(a,b,c){super(a,c),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(f.DefaultUp),this.updateMatrix(),this.groundColor=new h(b)}copy(a,b){return super.copy(a,b),this.groundColor.copy(a.groundColor),this}}let kj=new e,kk=new a,kl=new a;class km{constructor(a){this.camera=a,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new j(512,512),this.map=null,this.mapPass=null,this.matrix=new e,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new fZ,this._frameExtents=new j(1,1),this._viewportCount=1,this._viewports=[new W(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(c){let a=this.camera,b=this.matrix;kk.setFromMatrixPosition(c.matrixWorld),a.position.copy(kk),kl.setFromMatrixPosition(c.target.matrixWorld),a.lookAt(kl),a.updateMatrixWorld(),kj.multiplyMatrices(a.projectionMatrix,a.matrixWorldInverse),this._frustum.setFromProjectionMatrix(kj),b.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),b.multiply(a.projectionMatrix),b.multiply(a.matrixWorldInverse)}getViewport(a){return this._viewports[a]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(a){return this.camera=a.camera.clone(),this.bias=a.bias,this.radius=a.radius,this.mapSize.copy(a.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let a={};return 0!==this.bias&&(a.bias=this.bias),0!==this.normalBias&&(a.normalBias=this.normalBias),1!==this.radius&&(a.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(a.mapSize=this.mapSize.toArray()),a.camera=this.camera.toJSON(!1).object,delete a.camera.matrix,a}}class kn extends t{constructor(a,b,c=0,d=Math.PI/3,e=0,g=1){super(a,b),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(f.DefaultUp),this.updateMatrix(),this.target=new f,this.distance=c,this.angle=d,this.penumbra=e,this.decay=g,this.shadow=new class extends km{constructor(){super(new aW(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(b){let a=this.camera,c=2*aG*b.angle*this.focus,d=this.mapSize.width/this.mapSize.height,e=b.distance||a.far;(c!==a.fov||d!==a.aspect||e!==a.far)&&(a.fov=c,a.aspect=d,a.far=e,a.updateProjectionMatrix()),super.updateMatrices(b)}copy(a){return super.copy(a),this.focus=a.focus,this}}}get power(){return this.intensity*Math.PI}set power(a){this.intensity=a/Math.PI}dispose(){this.shadow.dispose()}copy(a,b){return super.copy(a,b),this.distance=a.distance,this.angle=a.angle,this.penumbra=a.penumbra,this.decay=a.decay,this.target=a.target.clone(),this.shadow=a.shadow.clone(),this}}let ko=new e,kp=new a,kq=new a;class kr extends t{constructor(b,c,d=0,e=1){super(b,c),this.isPointLight=!0,this.type="PointLight",this.distance=d,this.decay=e,this.shadow=new class extends km{constructor(){super(new aW(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new j(4,2),this._viewportCount=6,this._viewports=[new W(2,1,1,1),new W(0,1,1,1),new W(3,1,1,1),new W(1,1,1,1),new W(3,0,1,1),new W(1,0,1,1)],this._cubeDirections=[new a(1,0,0),new a(-1,0,0),new a(0,0,1),new a(0,0,-1),new a(0,1,0),new a(0,-1,0)],this._cubeUps=[new a(0,1,0),new a(0,1,0),new a(0,1,0),new a(0,1,0),new a(0,0,1),new a(0,0,-1)]}updateMatrices(b,c=0){let a=this.camera,e=this.matrix,d=b.distance||a.far;d!==a.far&&(a.far=d,a.updateProjectionMatrix()),kp.setFromMatrixPosition(b.matrixWorld),a.position.copy(kp),kq.copy(a.position),kq.add(this._cubeDirections[c]),a.up.copy(this._cubeUps[c]),a.lookAt(kq),a.updateMatrixWorld(),e.makeTranslation(-kp.x,-kp.y,-kp.z),ko.multiplyMatrices(a.projectionMatrix,a.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ko)}}}get power(){return 4*this.intensity*Math.PI}set power(a){this.intensity=a/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(a,b){return super.copy(a,b),this.distance=a.distance,this.decay=a.decay,this.shadow=a.shadow.clone(),this}}class ks extends t{constructor(a,b){super(a,b),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(f.DefaultUp),this.updateMatrix(),this.target=new f,this.shadow=new class extends km{constructor(){super(new aY(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}}dispose(){this.shadow.dispose()}copy(a){return super.copy(a),this.target=a.target.clone(),this.shadow=a.shadow.clone(),this}}class kt extends t{constructor(a,b){super(a,b),this.isAmbientLight=!0,this.type="AmbientLight"}}class ku extends t{constructor(a,b,c=10,d=10){super(a,b),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=c,this.height=d}get power(){return this.intensity*this.width*this.height*Math.PI}set power(a){this.intensity=a/(this.width*this.height*Math.PI)}copy(a){return super.copy(a),this.width=a.width,this.height=a.height,this}toJSON(b){let a=super.toJSON(b);return a.object.width=this.width,a.object.height=this.height,a}}class kv{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let b=0;b<9;b++)this.coefficients.push(new a)}set(b){for(let a=0;a<9;a++)this.coefficients[a].copy(b[a]);return this}zero(){for(let a=0;a<9;a++)this.coefficients[a].set(0,0,0);return this}getAt(f,a){let c=f.x,d=f.y,e=f.z,b=this.coefficients;return a.copy(b[0]).multiplyScalar(.282095),a.addScaledVector(b[1],.488603*d),a.addScaledVector(b[2],.488603*e),a.addScaledVector(b[3],.488603*c),a.addScaledVector(b[4],1.092548*(c*d)),a.addScaledVector(b[5],1.092548*(d*e)),a.addScaledVector(b[6],.315392*(3*e*e-1)),a.addScaledVector(b[7],1.092548*(c*e)),a.addScaledVector(b[8],.546274*(c*c-d*d)),a}getIrradianceAt(f,a){let c=f.x,d=f.y,e=f.z,b=this.coefficients;return a.copy(b[0]).multiplyScalar(.886227),a.addScaledVector(b[1],1.023328*d),a.addScaledVector(b[2],1.023328*e),a.addScaledVector(b[3],1.023328*c),a.addScaledVector(b[4],.858086*c*d),a.addScaledVector(b[5],.858086*d*e),a.addScaledVector(b[6],.743125*e*e-.247708),a.addScaledVector(b[7],.858086*c*e),a.addScaledVector(b[8],.429043*(c*c-d*d)),a}add(b){for(let a=0;a<9;a++)this.coefficients[a].add(b.coefficients[a]);return this}addScaledSH(b,c){for(let a=0;a<9;a++)this.coefficients[a].addScaledVector(b.coefficients[a],c);return this}scale(b){for(let a=0;a<9;a++)this.coefficients[a].multiplyScalar(b);return this}lerp(b,c){for(let a=0;a<9;a++)this.coefficients[a].lerp(b.coefficients[a],c);return this}equals(b){for(let a=0;a<9;a++)if(!this.coefficients[a].equals(b.coefficients[a]))return!1;return!0}copy(a){return this.set(a.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(b,c=0){let d=this.coefficients;for(let a=0;a<9;a++)d[a].fromArray(b,c+3*a);return this}toArray(b=[],c=0){let d=this.coefficients;for(let a=0;a<9;a++)d[a].toArray(b,c+3*a);return b}static getBasisAt(e,a){let b=e.x,c=e.y,d=e.z;a[0]=.282095,a[1]=.488603*c,a[2]=.488603*d,a[3]=.488603*b,a[4]=1.092548*b*c,a[5]=1.092548*c*d,a[6]=.315392*(3*d*d-1),a[7]=1.092548*b*d,a[8]=.546274*(b*b-c*c)}}class aq extends t{constructor(a=new kv,b=1){super(void 0,b),this.isLightProbe=!0,this.sh=a}copy(a){return super.copy(a),this.sh.copy(a.sh),this}fromJSON(a){return this.intensity=a.intensity,this.sh.fromArray(a.sh),this}toJSON(b){let a=super.toJSON(b);return a.object.sh=this.sh.toArray(),a}}class kw extends m{constructor(a){super(a),this.textures={}}load(c,f,d,e){let a=this,b=new kb(a.manager);b.setPath(a.path),b.setRequestHeader(a.requestHeader),b.setWithCredentials(a.withCredentials),b.load(c,function(d){try{f(a.parse(JSON.parse(d)))}catch(b){e?e(b):console.error(b),a.manager.itemError(c)}},d,e)}parse(b){let l=this.textures;function d(a){return void 0===l[a]&&console.warn("THREE.MaterialLoader: Undefined texture",a),l[a]}let c=kw.createMaterialFromType(b.type);if(void 0!==b.uuid&&(c.uuid=b.uuid),void 0!==b.name&&(c.name=b.name),void 0!==b.color&& void 0!==c.color&&c.color.setHex(b.color),void 0!==b.roughness&&(c.roughness=b.roughness),void 0!==b.metalness&&(c.metalness=b.metalness),void 0!==b.sheen&&(c.sheen=b.sheen),void 0!==b.sheenColor&&(c.sheenColor=new h().setHex(b.sheenColor)),void 0!==b.sheenRoughness&&(c.sheenRoughness=b.sheenRoughness),void 0!==b.emissive&& void 0!==c.emissive&&c.emissive.setHex(b.emissive),void 0!==b.specular&& void 0!==c.specular&&c.specular.setHex(b.specular),void 0!==b.specularIntensity&&(c.specularIntensity=b.specularIntensity),void 0!==b.specularColor&& void 0!==c.specularColor&&c.specularColor.setHex(b.specularColor),void 0!==b.shininess&&(c.shininess=b.shininess),void 0!==b.clearcoat&&(c.clearcoat=b.clearcoat),void 0!==b.clearcoatRoughness&&(c.clearcoatRoughness=b.clearcoatRoughness),void 0!==b.iridescence&&(c.iridescence=b.iridescence),void 0!==b.iridescenceIOR&&(c.iridescenceIOR=b.iridescenceIOR),void 0!==b.iridescenceThicknessRange&&(c.iridescenceThicknessRange=b.iridescenceThicknessRange),void 0!==b.transmission&&(c.transmission=b.transmission),void 0!==b.thickness&&(c.thickness=b.thickness),void 0!==b.attenuationDistance&&(c.attenuationDistance=b.attenuationDistance),void 0!==b.attenuationColor&& void 0!==c.attenuationColor&&c.attenuationColor.setHex(b.attenuationColor),void 0!==b.fog&&(c.fog=b.fog),void 0!==b.flatShading&&(c.flatShading=b.flatShading),void 0!==b.blending&&(c.blending=b.blending),void 0!==b.combine&&(c.combine=b.combine),void 0!==b.side&&(c.side=b.side),void 0!==b.shadowSide&&(c.shadowSide=b.shadowSide),void 0!==b.opacity&&(c.opacity=b.opacity),void 0!==b.transparent&&(c.transparent=b.transparent),void 0!==b.alphaTest&&(c.alphaTest=b.alphaTest),void 0!==b.depthTest&&(c.depthTest=b.depthTest),void 0!==b.depthWrite&&(c.depthWrite=b.depthWrite),void 0!==b.colorWrite&&(c.colorWrite=b.colorWrite),void 0!==b.stencilWrite&&(c.stencilWrite=b.stencilWrite),void 0!==b.stencilWriteMask&&(c.stencilWriteMask=b.stencilWriteMask),void 0!==b.stencilFunc&&(c.stencilFunc=b.stencilFunc),void 0!==b.stencilRef&&(c.stencilRef=b.stencilRef),void 0!==b.stencilFuncMask&&(c.stencilFuncMask=b.stencilFuncMask),void 0!==b.stencilFail&&(c.stencilFail=b.stencilFail),void 0!==b.stencilZFail&&(c.stencilZFail=b.stencilZFail),void 0!==b.stencilZPass&&(c.stencilZPass=b.stencilZPass),void 0!==b.wireframe&&(c.wireframe=b.wireframe),void 0!==b.wireframeLinewidth&&(c.wireframeLinewidth=b.wireframeLinewidth),void 0!==b.wireframeLinecap&&(c.wireframeLinecap=b.wireframeLinecap),void 0!==b.wireframeLinejoin&&(c.wireframeLinejoin=b.wireframeLinejoin),void 0!==b.rotation&&(c.rotation=b.rotation),1!==b.linewidth&&(c.linewidth=b.linewidth),void 0!==b.dashSize&&(c.dashSize=b.dashSize),void 0!==b.gapSize&&(c.gapSize=b.gapSize),void 0!==b.scale&&(c.scale=b.scale),void 0!==b.polygonOffset&&(c.polygonOffset=b.polygonOffset),void 0!==b.polygonOffsetFactor&&(c.polygonOffsetFactor=b.polygonOffsetFactor),void 0!==b.polygonOffsetUnits&&(c.polygonOffsetUnits=b.polygonOffsetUnits),void 0!==b.dithering&&(c.dithering=b.dithering),void 0!==b.alphaToCoverage&&(c.alphaToCoverage=b.alphaToCoverage),void 0!==b.premultipliedAlpha&&(c.premultipliedAlpha=b.premultipliedAlpha),void 0!==b.visible&&(c.visible=b.visible),void 0!==b.toneMapped&&(c.toneMapped=b.toneMapped),void 0!==b.userData&&(c.userData=b.userData),void 0!==b.vertexColors&&("number"==typeof b.vertexColors?c.vertexColors=b.vertexColors>0:c.vertexColors=b.vertexColors),void 0!==b.uniforms)for(let f in b.uniforms){let g=b.uniforms[f];switch(c.uniforms[f]={},g.type){case"t":c.uniforms[f].value=d(g.value);break;case"c":c.uniforms[f].value=new h().setHex(g.value);break;case"v2":c.uniforms[f].value=new j().fromArray(g.value);break;case"v3":c.uniforms[f].value=new a().fromArray(g.value);break;case"v4":c.uniforms[f].value=new W().fromArray(g.value);break;case"m3":c.uniforms[f].value=new u().fromArray(g.value);break;case"m4":c.uniforms[f].value=new e().fromArray(g.value);break;default:c.uniforms[f].value=g.value}}if(void 0!==b.defines&&(c.defines=b.defines),void 0!==b.vertexShader&&(c.vertexShader=b.vertexShader),void 0!==b.fragmentShader&&(c.fragmentShader=b.fragmentShader),void 0!==b.extensions)for(let k in b.extensions)c.extensions[k]=b.extensions[k];if(void 0!==b.shading&&(c.flatShading=1===b.shading),void 0!==b.size&&(c.size=b.size),void 0!==b.sizeAttenuation&&(c.sizeAttenuation=b.sizeAttenuation),void 0!==b.map&&(c.map=d(b.map)),void 0!==b.matcap&&(c.matcap=d(b.matcap)),void 0!==b.alphaMap&&(c.alphaMap=d(b.alphaMap)),void 0!==b.bumpMap&&(c.bumpMap=d(b.bumpMap)),void 0!==b.bumpScale&&(c.bumpScale=b.bumpScale),void 0!==b.normalMap&&(c.normalMap=d(b.normalMap)),void 0!==b.normalMapType&&(c.normalMapType=b.normalMapType),void 0!==b.normalScale){let i=b.normalScale;!1===Array.isArray(i)&&(i=[i,i]),c.normalScale=new j().fromArray(i)}return void 0!==b.displacementMap&&(c.displacementMap=d(b.displacementMap)),void 0!==b.displacementScale&&(c.displacementScale=b.displacementScale),void 0!==b.displacementBias&&(c.displacementBias=b.displacementBias),void 0!==b.roughnessMap&&(c.roughnessMap=d(b.roughnessMap)),void 0!==b.metalnessMap&&(c.metalnessMap=d(b.metalnessMap)),void 0!==b.emissiveMap&&(c.emissiveMap=d(b.emissiveMap)),void 0!==b.emissiveIntensity&&(c.emissiveIntensity=b.emissiveIntensity),void 0!==b.specularMap&&(c.specularMap=d(b.specularMap)),void 0!==b.specularIntensityMap&&(c.specularIntensityMap=d(b.specularIntensityMap)),void 0!==b.specularColorMap&&(c.specularColorMap=d(b.specularColorMap)),void 0!==b.envMap&&(c.envMap=d(b.envMap)),void 0!==b.envMapIntensity&&(c.envMapIntensity=b.envMapIntensity),void 0!==b.reflectivity&&(c.reflectivity=b.reflectivity),void 0!==b.refractionRatio&&(c.refractionRatio=b.refractionRatio),void 0!==b.lightMap&&(c.lightMap=d(b.lightMap)),void 0!==b.lightMapIntensity&&(c.lightMapIntensity=b.lightMapIntensity),void 0!==b.aoMap&&(c.aoMap=d(b.aoMap)),void 0!==b.aoMapIntensity&&(c.aoMapIntensity=b.aoMapIntensity),void 0!==b.gradientMap&&(c.gradientMap=d(b.gradientMap)),void 0!==b.clearcoatMap&&(c.clearcoatMap=d(b.clearcoatMap)),void 0!==b.clearcoatRoughnessMap&&(c.clearcoatRoughnessMap=d(b.clearcoatRoughnessMap)),void 0!==b.clearcoatNormalMap&&(c.clearcoatNormalMap=d(b.clearcoatNormalMap)),void 0!==b.clearcoatNormalScale&&(c.clearcoatNormalScale=new j().fromArray(b.clearcoatNormalScale)),void 0!==b.iridescenceMap&&(c.iridescenceMap=d(b.iridescenceMap)),void 0!==b.iridescenceThicknessMap&&(c.iridescenceThicknessMap=d(b.iridescenceThicknessMap)),void 0!==b.transmissionMap&&(c.transmissionMap=d(b.transmissionMap)),void 0!==b.thicknessMap&&(c.thicknessMap=d(b.thicknessMap)),void 0!==b.sheenColorMap&&(c.sheenColorMap=d(b.sheenColorMap)),void 0!==b.sheenRoughnessMap&&(c.sheenRoughnessMap=d(b.sheenRoughnessMap)),c}setTextures(a){return this.textures=a,this}static createMaterialFromType(a){return new({ShadowMaterial:jT,SpriteMaterial:h9,RawShaderMaterial:jU,ShaderMaterial:aV,PointsMaterial:iT,MeshPhysicalMaterial:jV,MeshStandardMaterial:be,MeshPhongMaterial:jW,MeshToonMaterial:jX,MeshNormalMaterial:jY,MeshLambertMaterial:jZ,MeshDepthMaterial:hS,MeshDistanceMaterial:hT,MeshBasicMaterial:fe,MeshMatcapMaterial:j$,LineDashedMaterial:j_,LineBasicMaterial:a0,Material:k})[a]}}class kx{static decodeText(a){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(a);let b="";for(let c=0,d=a.length;c<d;c++)b+=String.fromCharCode(a[c]);try{return decodeURIComponent(escape(b))}catch(e){return b}}static extractUrlBase(a){let b=a.lastIndexOf("/");return -1===b?"./":a.slice(0,b+1)}static resolveURL(a,b){return"string"!=typeof a||""===a?"":(/^https?:\/\//i.test(b)&&/^\//.test(a)&&(b=b.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(a)||/^data:.*,.*$/i.test(a)||/^blob:.*$/i.test(a))?a:b+a}}class ky extends g{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(a){return super.copy(a),this.instanceCount=a.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){let a=super.toJSON(this);return a.instanceCount=this.instanceCount,a.isInstancedBufferGeometry=!0,a}}class kz extends m{constructor(a){super(a)}load(c,f,d,e){let a=this,b=new kb(a.manager);b.setPath(a.path),b.setRequestHeader(a.requestHeader),b.setWithCredentials(a.withCredentials),b.load(c,function(d){try{f(a.parse(JSON.parse(d)))}catch(b){e?e(b):console.error(b),a.manager.itemError(c)}},d,e)}parse(c){let H={},I={};function q(d,a){if(void 0!==H[a])return H[a];let e=d.interleavedBuffers,b=e[a],f=J(d,b.buffer),g=d0(b.type,f),c=new a_(g,b.stride);return c.uuid=b.uuid,H[a]=c,c}function J(c,a){if(void 0!==I[a])return I[a];let d=c.arrayBuffers,e=d[a],b=new Uint32Array(e).buffer;return I[a]=b,b}let e=c.isInstancedBufferGeometry?new ky:new g,j=c.data.index;if(void 0!==j){let x=d0(j.type,j.array);e.setIndex(new n(x,1))}let r=c.data.attributes;for(let s in r){let b=r[s],f;if(b.isInterleavedBufferAttribute){let y=q(c.data,b.data);f=new h8(y,b.itemSize,b.offset,b.normalized)}else{let z=d0(b.type,b.array),A=b.isInstancedBufferAttribute?iF:n;f=new A(z,b.itemSize,b.normalized)}void 0!==b.name&&(f.name=b.name),void 0!==b.usage&&f.setUsage(b.usage),void 0!==b.updateRange&&(f.updateRange.offset=b.updateRange.offset,f.updateRange.count=b.updateRange.count),e.setAttribute(s,f)}let k=c.data.morphAttributes;if(k)for(let t in k){let u=k[t],v=[];for(let l=0,B=u.length;l<B;l++){let d=u[l],h;if(d.isInterleavedBufferAttribute){let D=q(c.data,d.data);h=new h8(D,d.itemSize,d.offset,d.normalized)}else{let E=d0(d.type,d.array);h=new n(E,d.itemSize,d.normalized)}void 0!==d.name&&(h.name=d.name),v.push(h)}e.morphAttributes[t]=v}let F=c.data.morphTargetsRelative;F&&(e.morphTargetsRelative=!0);let m=c.data.groups||c.data.drawcalls||c.data.offsets;if(void 0!==m)for(let o=0,G=m.length;o!==G;++o){let p=m[o];e.addGroup(p.start,p.count,p.materialIndex)}let i=c.data.boundingSphere;if(void 0!==i){let w=new a;void 0!==i.center&&w.fromArray(i.center),e.boundingSphere=new C(w,i.radius)}return c.name&&(e.name=c.name),c.userData&&(e.userData=c.userData),e}}class kA extends m{constructor(a){super(a)}load(b,f,c,d){let g=this,e=""===this.path?kx.extractUrlBase(b):this.path;this.resourcePath=this.resourcePath||e;let a=new kb(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(b,function(h){let a=null;try{a=JSON.parse(h)}catch(e){void 0!==d&&d(e),console.error("THREE:ObjectLoader: Can't parse "+b+".",e.message);return}let c=a.metadata;if(void 0===c|| void 0===c.type||"geometry"===c.type.toLowerCase()){console.error("THREE.ObjectLoader: Can't load "+b);return}g.parse(a,f)},c,d)}async loadAsync(b,e){let f=""===this.path?kx.extractUrlBase(b):this.path;this.resourcePath=this.resourcePath||f;let a=new kb(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials);let g=await a.loadAsync(b,e),d=JSON.parse(g),c=d.metadata;if(void 0===c|| void 0===c.type||"geometry"===c.type.toLowerCase())throw Error("THREE.ObjectLoader: Can't load "+b);return await this.parseAsync(d)}parse(a,d){let g=this.parseAnimations(a.animations),h=this.parseShapes(a.shapes),i=this.parseGeometries(a.geometries,h),c=this.parseImages(a.images,function(){void 0!==d&&d(b)}),e=this.parseTextures(a.textures,c),j=this.parseMaterials(a.materials,e),b=this.parseObject(a.object,i,j,e,g),k=this.parseSkeletons(a.skeletons,b);if(this.bindSkeletons(b,k),void 0!==d){let f=!1;for(let l in c)if(c[l].data instanceof HTMLImageElement){f=!0;break}!1===f&&d(b)}return b}async parseAsync(a){let d=this.parseAnimations(a.animations),e=this.parseShapes(a.shapes),f=this.parseGeometries(a.geometries,e),g=await this.parseImagesAsync(a.images),c=this.parseTextures(a.textures,g),h=this.parseMaterials(a.materials,c),b=this.parseObject(a.object,f,h,c,d),i=this.parseSkeletons(a.skeletons,b);return this.bindSkeletons(b,i),b}parseShapes(a){let c={};if(void 0!==a)for(let b=0,e=a.length;b<e;b++){let d=new je().fromJSON(a[b]);c[d.uuid]=d}return c}parseSkeletons(a,e){let c={},f={};if(e.traverse(function(a){a.isBone&&(f[a.uuid]=a)}),void 0!==a)for(let b=0,g=a.length;b<g;b++){let d=new iE().fromJSON(a[b],f);c[d.uuid]=d}return c}parseGeometries(c,f){let e={};if(void 0!==c){let g=new kz;for(let d=0,h=c.length;d<h;d++){let b,a=c[d];switch(a.type){case"BufferGeometry":case"InstancedBufferGeometry":b=g.parse(a);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:a.type in jS?b=jS[a.type].fromJSON(a,f):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${a.type}"`)}b.uuid=a.uuid,void 0!==a.name&&(b.name=a.name),!0===b.isBufferGeometry&& void 0!==a.userData&&(b.userData=a.userData),e[a.uuid]=b}}return e}parseMaterials(d,j){let b={},e={};if(void 0!==d){let f=new kw;f.setTextures(j);for(let g=0,k=d.length;g<k;g++){let a=d[g];if("MultiMaterial"===a.type){let i=[];for(let h=0;h<a.materials.length;h++){let c=a.materials[h];void 0===b[c.uuid]&&(b[c.uuid]=f.parse(c)),i.push(b[c.uuid])}e[a.uuid]=i}else void 0===b[a.uuid]&&(b[a.uuid]=f.parse(a)),e[a.uuid]=b[a.uuid]}}return e}parseAnimations(a){let c={};if(void 0!==a)for(let b=0;b<a.length;b++){let e=a[b],d=j5.parse(e);c[d.uuid]=d}return c}parseImages(b,j){let q=this,d={},k;function i(a){if("string"==typeof a){var b;let c=a,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:q.resourcePath+c;return b=d,q.manager.itemStart(b),k.load(b,function(){q.manager.itemEnd(b)},void 0,function(){q.manager.itemError(b),q.manager.itemEnd(b)})}return a.data?{data:d0(a.type,a.data),width:a.width,height:a.height}:null}if(void 0!==b&&b.length>0){let l=new bo(j);(k=new ke(l)).setCrossOrigin(this.crossOrigin);for(let e=0,m=b.length;e<m;e++){let c=b[e],f=c.url;if(Array.isArray(f)){let g=[];for(let h=0,n=f.length;h<n;h++){let o=f[h],a=i(o);null!==a&&(a instanceof HTMLImageElement?g.push(a):g.push(new iB(a.data,a.width,a.height)))}d[c.uuid]=new eb(g)}else{let p=i(c.url);d[c.uuid]=new eb(p)}}}return d}async parseImagesAsync(b){let o=this,d={},j;async function i(a){if("string"==typeof a){let b=a,c=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(b)?b:o.resourcePath+b;return await j.loadAsync(c)}return a.data?{data:d0(a.type,a.data),width:a.width,height:a.height}:null}if(void 0!==b&&b.length>0){(j=new ke(this.manager)).setCrossOrigin(this.crossOrigin);for(let e=0,k=b.length;e<k;e++){let c=b[e],f=c.url;if(Array.isArray(f)){let g=[];for(let h=0,l=f.length;h<l;h++){let m=f[h],a=await i(m);null!==a&&(a instanceof HTMLImageElement?g.push(a):g.push(new iB(a.data,a.width,a.height)))}d[c.uuid]=new eb(g)}else{let n=await i(c.url);d[c.uuid]=new eb(n)}}}return d}parseTextures(e,g){function c(a,b){return"number"==typeof a?a:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",a),b[a])}let h={};if(void 0!==e)for(let f=0,j=e.length;f<j;f++){let a=e[f];void 0===a.image&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),void 0===g[a.image]&&console.warn("THREE.ObjectLoader: Undefined image",a.image);let i=g[a.image],d=i.data,b;Array.isArray(d)?(b=new aX,6===d.length&&(b.needsUpdate=!0)):(b=d&&d.data?new iB:new l,d&&(b.needsUpdate=!0)),b.source=i,b.uuid=a.uuid,void 0!==a.name&&(b.name=a.name),void 0!==a.mapping&&(b.mapping=c(a.mapping,kB)),void 0!==a.offset&&b.offset.fromArray(a.offset),void 0!==a.repeat&&b.repeat.fromArray(a.repeat),void 0!==a.center&&b.center.fromArray(a.center),void 0!==a.rotation&&(b.rotation=a.rotation),void 0!==a.wrap&&(b.wrapS=c(a.wrap[0],kC),b.wrapT=c(a.wrap[1],kC)),void 0!==a.format&&(b.format=a.format),void 0!==a.type&&(b.type=a.type),void 0!==a.encoding&&(b.encoding=a.encoding),void 0!==a.minFilter&&(b.minFilter=c(a.minFilter,kD)),void 0!==a.magFilter&&(b.magFilter=c(a.magFilter,kD)),void 0!==a.anisotropy&&(b.anisotropy=a.anisotropy),void 0!==a.flipY&&(b.flipY=a.flipY),void 0!==a.premultiplyAlpha&&(b.premultiplyAlpha=a.premultiplyAlpha),void 0!==a.unpackAlignment&&(b.unpackAlignment=a.unpackAlignment),void 0!==a.userData&&(b.userData=a.userData),h[a.uuid]=b}return h}parseObject(a,u,v,w,m){let b;function d(a){return void 0===u[a]&&console.warn("THREE.ObjectLoader: Undefined geometry",a),u[a]}function c(a){if(void 0!==a){if(Array.isArray(a)){let d=[];for(let b=0,e=a.length;b<e;b++){let c=a[b];void 0===v[c]&&console.warn("THREE.ObjectLoader: Undefined material",c),d.push(v[c])}return d}return void 0===v[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),v[a]}}function n(a){return void 0===w[a]&&console.warn("THREE.ObjectLoader: Undefined texture",a),w[a]}let e,g;switch(a.type){case"Scene":b=new h6,void 0!==a.background&&(Number.isInteger(a.background)?b.background=new h(a.background):b.background=n(a.background)),void 0!==a.environment&&(b.environment=n(a.environment)),void 0!==a.fog&&("Fog"===a.fog.type?b.fog=new h5(a.fog.color,a.fog.near,a.fog.far):"FogExp2"===a.fog.type&&(b.fog=new h4(a.fog.color,a.fog.density)));break;case"PerspectiveCamera":b=new aW(a.fov,a.aspect,a.near,a.far),void 0!==a.focus&&(b.focus=a.focus),void 0!==a.zoom&&(b.zoom=a.zoom),void 0!==a.filmGauge&&(b.filmGauge=a.filmGauge),void 0!==a.filmOffset&&(b.filmOffset=a.filmOffset),void 0!==a.view&&(b.view=Object.assign({},a.view));break;case"OrthographicCamera":b=new aY(a.left,a.right,a.top,a.bottom,a.near,a.far),void 0!==a.zoom&&(b.zoom=a.zoom),void 0!==a.view&&(b.view=Object.assign({},a.view));break;case"AmbientLight":b=new kt(a.color,a.intensity);break;case"DirectionalLight":b=new ks(a.color,a.intensity);break;case"PointLight":b=new kr(a.color,a.intensity,a.distance,a.decay);break;case"RectAreaLight":b=new ku(a.color,a.intensity,a.width,a.height);break;case"SpotLight":b=new kn(a.color,a.intensity,a.distance,a.angle,a.penumbra,a.decay);break;case"HemisphereLight":b=new ki(a.color,a.groundColor,a.intensity);break;case"LightProbe":b=new aq().fromJSON(a);break;case"SkinnedMesh":e=d(a.geometry),g=c(a.material),b=new iz(e,g),void 0!==a.bindMode&&(b.bindMode=a.bindMode),void 0!==a.bindMatrix&&b.bindMatrix.fromArray(a.bindMatrix),void 0!==a.skeleton&&(b.skeleton=a.skeleton);break;case"Mesh":e=d(a.geometry),g=c(a.material),b=new D(e,g);break;case"InstancedMesh":e=d(a.geometry),g=c(a.material);let x=a.count,y=a.instanceMatrix,i=a.instanceColor;(b=new iK(e,g,x)).instanceMatrix=new iF(new Float32Array(y.array),16),void 0!==i&&(b.instanceColor=new iF(new Float32Array(i.array),i.itemSize));break;case"LOD":b=new it;break;case"Line":b=new I(d(a.geometry),c(a.material));break;case"LineLoop":b=new iS(d(a.geometry),c(a.material));break;case"LineSegments":b=new s(d(a.geometry),c(a.material));break;case"PointCloud":case"Points":b=new iY(d(a.geometry),c(a.material));break;case"Sprite":b=new ip(c(a.material));break;case"Group":b=new hZ;break;case"Bone":b=new iA;break;default:b=new f}if(b.uuid=a.uuid,void 0!==a.name&&(b.name=a.name),void 0!==a.matrix?(b.matrix.fromArray(a.matrix),void 0!==a.matrixAutoUpdate&&(b.matrixAutoUpdate=a.matrixAutoUpdate),b.matrixAutoUpdate&&b.matrix.decompose(b.position,b.quaternion,b.scale)):(void 0!==a.position&&b.position.fromArray(a.position),void 0!==a.rotation&&b.rotation.fromArray(a.rotation),void 0!==a.quaternion&&b.quaternion.fromArray(a.quaternion),void 0!==a.scale&&b.scale.fromArray(a.scale)),void 0!==a.castShadow&&(b.castShadow=a.castShadow),void 0!==a.receiveShadow&&(b.receiveShadow=a.receiveShadow),a.shadow&&(void 0!==a.shadow.bias&&(b.shadow.bias=a.shadow.bias),void 0!==a.shadow.normalBias&&(b.shadow.normalBias=a.shadow.normalBias),void 0!==a.shadow.radius&&(b.shadow.radius=a.shadow.radius),void 0!==a.shadow.mapSize&&b.shadow.mapSize.fromArray(a.shadow.mapSize),void 0!==a.shadow.camera&&(b.shadow.camera=this.parseObject(a.shadow.camera))),void 0!==a.visible&&(b.visible=a.visible),void 0!==a.frustumCulled&&(b.frustumCulled=a.frustumCulled),void 0!==a.renderOrder&&(b.renderOrder=a.renderOrder),void 0!==a.userData&&(b.userData=a.userData),void 0!==a.layers&&(b.layers.mask=a.layers),void 0!==a.children){let o=a.children;for(let j=0;j<o.length;j++)b.add(this.parseObject(o[j],u,v,w,m))}if(void 0!==a.animations){let p=a.animations;for(let k=0;k<p.length;k++){let z=p[k];b.animations.push(m[z])}}if("LOD"===a.type){void 0!==a.autoUpdate&&(b.autoUpdate=a.autoUpdate);let q=a.levels;for(let l=0;l<q.length;l++){let r=q[l],t=b.getObjectByProperty("uuid",r.object);void 0!==t&&b.addLevel(t,r.distance)}}return b}bindSkeletons(a,b){0!==Object.keys(b).length&&a.traverse(function(a){if(!0===a.isSkinnedMesh&& void 0!==a.skeleton){let c=b[a.skeleton];void 0===c?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",a.skeleton):a.bind(c,a.bindMatrix)}})}}let kB={UVMapping:S,CubeReflectionMapping:ar,CubeRefractionMapping:as,EquirectangularReflectionMapping:at,EquirectangularRefractionMapping:au,CubeUVReflectionMapping:av},kC={RepeatWrapping:aw,ClampToEdgeWrapping:ax,MirroredRepeatWrapping:ay},kD={NearestFilter:az,NearestMipmapNearestFilter:aA,NearestMipmapLinearFilter:aB,LinearFilter:aC,LinearMipmapNearestFilter:aD,LinearMipmapLinearFilter:aE};class kE extends m{constructor(a){super(a),this.isImageBitmapLoader=!0,"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(a){return this.options=a,this}load(a,e,f,g){void 0===a&&(a=""),void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);let c=this,d=j7.get(a);if(void 0!==d)return c.manager.itemStart(a),setTimeout(function(){e&&e(d),c.manager.itemEnd(a)},0),d;let b={};b.credentials="anonymous"===this.crossOrigin?"same-origin":"include",b.headers=this.requestHeader,fetch(a,b).then(function(a){return a.blob()}).then(function(a){return createImageBitmap(a,Object.assign(c.options,{colorSpaceConversion:"none"}))}).then(function(b){j7.add(a,b),e&&e(b),c.manager.itemEnd(a)}).catch(function(b){g&&g(b),c.manager.itemError(a),c.manager.itemEnd(a)}),c.manager.itemStart(a)}}let kF,kG={getContext:function(){return void 0===kF&&(kF=new(window.AudioContext||window.webkitAudioContext)),kF},setContext:function(a){kF=a}};class kH extends m{constructor(a){super(a)}load(b,e,c,d){let f=this,a=new kb(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(b,function(c){try{let g=c.slice(0),h=kG.getContext();h.decodeAudioData(g,function(a){e(a)})}catch(a){d?d(a):console.error(a),f.manager.itemError(b)}},c,d)}}class kI extends aq{constructor(g,i,j=1){super(void 0,j),this.isHemisphereLightProbe=!0;let b=new h().set(g),c=new h().set(i),d=new a(b.r,b.g,b.b),e=new a(c.r,c.g,c.b),f=Math.sqrt(Math.PI);this.sh.coefficients[0].copy(d).add(e).multiplyScalar(f),this.sh.coefficients[1].copy(d).sub(e).multiplyScalar(f*Math.sqrt(.75))}}class kJ extends aq{constructor(b,c=1){super(void 0,c),this.isAmbientLightProbe=!0;let a=new h().set(b);this.sh.coefficients[0].set(a.r,a.g,a.b).multiplyScalar(2*Math.sqrt(Math.PI))}}let kK=new e,kL=new e,kM=new e;class kN{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new aW,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new aW,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(b){let a=this._cache,h=a.focus!==b.focus||a.fov!==b.fov||a.aspect!==b.aspect*this.aspect||a.near!==b.near||a.far!==b.far||a.zoom!==b.zoom||a.eyeSep!==this.eyeSep;if(h){a.focus=b.focus,a.fov=b.fov,a.aspect=b.aspect*this.aspect,a.near=b.near,a.far=b.far,a.zoom=b.zoom,a.eyeSep=this.eyeSep,kM.copy(b.projectionMatrix);let g=a.eyeSep/2,e=g*a.near/a.focus,f=a.near*Math.tan(aF*a.fov*.5)/a.zoom,c,d;kL.elements[12]=-g,kK.elements[12]=g,c=-f*a.aspect+e,d=f*a.aspect+e,kM.elements[0]=2*a.near/(d-c),kM.elements[8]=(d+c)/(d-c),this.cameraL.projectionMatrix.copy(kM),c=-f*a.aspect-e,d=f*a.aspect-e,kM.elements[0]=2*a.near/(d-c),kM.elements[8]=(d+c)/(d-c),this.cameraR.projectionMatrix.copy(kM)}this.cameraL.matrixWorld.copy(b.matrixWorld).multiply(kL),this.cameraR.matrixWorld.copy(b.matrixWorld).multiply(kK)}}class kO{constructor(a=!0){this.autoStart=a,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=kP(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let a=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){let b=kP();a=(b-this.oldTime)/1e3,this.oldTime=b,this.elapsedTime+=a}return a}}function kP(){return("undefined"==typeof performance?Date:performance).now()}let kQ=new a,kR=new v,kS=new a,kT=new a;class kU extends f{constructor(){super(),this.type="AudioListener",this.context=kG.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new kO}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(a){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=a,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(a){return this.gain.gain.setTargetAtTime(a,this.context.currentTime,.01),this}updateMatrixWorld(d){super.updateMatrixWorld(d);let a=this.context.listener,c=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(kQ,kR,kS),kT.set(0,0,-1).applyQuaternion(kR),a.positionX){let b=this.context.currentTime+this.timeDelta;a.positionX.linearRampToValueAtTime(kQ.x,b),a.positionY.linearRampToValueAtTime(kQ.y,b),a.positionZ.linearRampToValueAtTime(kQ.z,b),a.forwardX.linearRampToValueAtTime(kT.x,b),a.forwardY.linearRampToValueAtTime(kT.y,b),a.forwardZ.linearRampToValueAtTime(kT.z,b),a.upX.linearRampToValueAtTime(c.x,b),a.upY.linearRampToValueAtTime(c.y,b),a.upZ.linearRampToValueAtTime(c.z,b)}else a.setPosition(kQ.x,kQ.y,kQ.z),a.setOrientation(kT.x,kT.y,kT.z,c.x,c.y,c.z)}}class bp extends f{constructor(a){super(),this.type="Audio",this.listener=a,this.context=a.context,this.gain=this.context.createGain(),this.gain.connect(a.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(a){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=a,this.connect(),this}setMediaElementSource(a){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(a),this.connect(),this}setMediaStreamSource(a){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(a),this.connect(),this}setBuffer(a){return this.buffer=a,this.sourceType="buffer",this.autoplay&&this.play(),this}play(b=0){if(!0===this.isPlaying){console.warn("THREE.Audio: Audio is already playing.");return}if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+b;let a=this.context.createBufferSource();return a.buffer=this.buffer,a.loop=this.loop,a.loopStart=this.loopStart,a.loopEnd=this.loopEnd,a.onended=this.onEnded.bind(this),a.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=a,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let a=1,b=this.filters.length;a<b;a++)this.filters[a-1].connect(this.filters[a]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let a=1,b=this.filters.length;a<b;a++)this.filters[a-1].disconnect(this.filters[a]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(a){return a||(a=[]),!0===this._connected?(this.disconnect(),this.filters=a.slice(),this.connect()):this.filters=a.slice(),this}setDetune(a){if(this.detune=a,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(a){return this.setFilters(a?[a]:[])}setPlaybackRate(a){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=a,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(a){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=a,!0===this.isPlaying&&(this.source.loop=this.loop),this}setLoopStart(a){return this.loopStart=a,this}setLoopEnd(a){return this.loopEnd=a,this}getVolume(){return this.gain.gain.value}setVolume(a){return this.gain.gain.setTargetAtTime(a,this.context.currentTime,.01),this}}let kV=new a,kW=new v,kX=new a,kY=new a;class kZ extends bp{constructor(a){super(a),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(a){return this.panner.refDistance=a,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(a){return this.panner.rolloffFactor=a,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(a){return this.panner.distanceModel=a,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(a){return this.panner.maxDistance=a,this}setDirectionalCone(a,b,c){return this.panner.coneInnerAngle=a,this.panner.coneOuterAngle=b,this.panner.coneOuterGain=c,this}updateMatrixWorld(c){if(super.updateMatrixWorld(c),!0===this.hasPlaybackControl&& !1===this.isPlaying)return;this.matrixWorld.decompose(kV,kW,kX),kY.set(0,0,1).applyQuaternion(kW);let a=this.panner;if(a.positionX){let b=this.context.currentTime+this.listener.timeDelta;a.positionX.linearRampToValueAtTime(kV.x,b),a.positionY.linearRampToValueAtTime(kV.y,b),a.positionZ.linearRampToValueAtTime(kV.z,b),a.orientationX.linearRampToValueAtTime(kY.x,b),a.orientationY.linearRampToValueAtTime(kY.y,b),a.orientationZ.linearRampToValueAtTime(kY.z,b)}else a.setPosition(kV.x,kV.y,kV.z),a.setOrientation(kY.x,kY.y,kY.z)}}class k${constructor(a,b=2048){this.analyser=a.context.createAnalyser(),this.analyser.fftSize=b,this.data=new Uint8Array(this.analyser.frequencyBinCount),a.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let c=0,a=this.getFrequencyData();for(let b=0;b<a.length;b++)c+=a[b];return c/a.length}}class k_{constructor(e,f,a){this.binding=e,this.valueSize=a;let b,c,d;switch(f){case"quaternion":b=this._slerp,c=this._slerpAdditive,d=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*a),this._workIndex=5;break;case"string":case"bool":b=this._select,c=this._select,d=this._setAdditiveIdentityOther,this.buffer=Array(5*a);break;default:b=this._lerp,c=this._lerpAdditive,d=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*a)}this._mixBufferRegion=b,this._mixBufferRegionAdditive=c,this._setIdentity=d,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(g,d){let e=this.buffer,b=this.valueSize,f=g*b+b,a=this.cumulativeWeight;if(0===a){for(let c=0;c!==b;++c)e[f+c]=e[c];a=d}else{a+=d;let h=d/a;this._mixBufferRegion(e,f,0,h,b)}this.cumulativeWeight=a}accumulateAdditive(a){let c=this.buffer,b=this.valueSize,d=b*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(c,d,0,a,b),this.cumulativeWeightAdditive+=a}apply(f){let a=this.valueSize,b=this.buffer,d=f*a+a,e=this.cumulativeWeight,g=this.cumulativeWeightAdditive,h=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,e<1){let i=a*this._origIndex;this._mixBufferRegion(b,d,i,1-e,a)}g>0&&this._mixBufferRegionAdditive(b,d,this._addIndex*a,1,a);for(let c=a,j=a+a;c!==j;++c)if(b[c]!==b[c+a]){h.setValue(b,d);break}}saveOriginalState(){let e=this.binding,b=this.buffer,c=this.valueSize,d=c*this._origIndex;e.getValue(b,d);for(let a=c,f=d;a!==f;++a)b[a]=b[d+a%c];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){let a=3*this.valueSize;this.binding.setValue(this.buffer,a)}_setAdditiveIdentityNumeric(){let b=this._addIndex*this.valueSize,c=b+this.valueSize;for(let a=b;a<c;a++)this.buffer[a]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){let b=this._origIndex*this.valueSize,c=this._addIndex*this.valueSize;for(let a=0;a<this.valueSize;a++)this.buffer[c+a]=this.buffer[b+a]}_select(b,c,d,e,f){if(e>=.5)for(let a=0;a!==f;++a)b[c+a]=b[d+a]}_slerp(a,b,c,d){v.slerpFlat(a,b,a,b,a,c,d)}_slerpAdditive(a,b,d,e,f){let c=this._workIndex*f;v.multiplyQuaternionsFlat(a,c,a,b,a,d),v.slerpFlat(a,b,a,b,a,c,e)}_lerp(b,e,f,c,g){let h=1-c;for(let a=0;a!==g;++a){let d=e+a;b[d]=b[d]*h+b[f+a]*c}}_lerpAdditive(b,d,e,f,g){for(let a=0;a!==g;++a){let c=d+a;b[c]=b[c]+b[e+a]*f}}}let N="\\[\\]\\.:\\/",k0=RegExp("["+N+"]","g"),O="[^"+N+"]",bq="[^"+N.replace("\\.","")+"]",br=/((?:WC+[\/:])*)/.source.replace("WC",O),bs=/(WCOD+)?/.source.replace("WCOD",bq),bt=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",O),bu=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",O),k1=RegExp("^"+br+bs+bt+bu+"$"),k2=["material","materials","bones"];class d{constructor(a,b,c){this.path=b,this.parsedPath=c||d.parseTrackName(b),this.node=d.findNode(a,this.parsedPath.nodeName)||a,this.rootNode=a,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(a,b,c){return a&&a.isAnimationObjectGroup?new d.Composite(a,b,c):new d(a,b,c)}static sanitizeNodeName(a){return a.replace(/\s/g,"_").replace(k0,"")}static parseTrackName(d){let b=k1.exec(d);if(null===b)throw Error("PropertyBinding: Cannot parse trackName: "+d);let a={nodeName:b[2],objectName:b[3],objectIndex:b[4],propertyName:b[5],propertyIndex:b[6]},c=a.nodeName&&a.nodeName.lastIndexOf(".");if(void 0!==c&& -1!==c){let e=a.nodeName.substring(c+1);-1!==k2.indexOf(e)&&(a.nodeName=a.nodeName.substring(0,c),a.objectName=e)}if(null===a.propertyName||0===a.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+d);return a}static findNode(a,b){if(void 0===b||""===b||"."===b|| -1===b||b===a.name||b===a.uuid)return a;if(a.skeleton){let c=a.skeleton.getBoneByName(b);if(void 0!==c)return c}if(a.children){let e=function(d){for(let c=0;c<d.length;c++){let a=d[c];if(a.name===b||a.uuid===b)return a;let f=e(a.children);if(f)return f}return null},d=e(a.children);if(d)return d}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(a,b){a[b]=this.targetObject[this.propertyName]}_getValue_array(c,d){let b=this.resolvedProperty;for(let a=0,e=b.length;a!==e;++a)c[d++]=b[a]}_getValue_arrayElement(a,b){a[b]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(a,b){this.resolvedProperty.toArray(a,b)}_setValue_direct(a,b){this.targetObject[this.propertyName]=a[b]}_setValue_direct_setNeedsUpdate(a,b){this.targetObject[this.propertyName]=a[b],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(a,b){this.targetObject[this.propertyName]=a[b],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(c,d){let b=this.resolvedProperty;for(let a=0,e=b.length;a!==e;++a)b[a]=c[d++]}_setValue_array_setNeedsUpdate(c,d){let b=this.resolvedProperty;for(let a=0,e=b.length;a!==e;++a)b[a]=c[d++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(c,d){let b=this.resolvedProperty;for(let a=0,e=b.length;a!==e;++a)b[a]=c[d++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(a,b){this.resolvedProperty[this.propertyIndex]=a[b]}_setValue_arrayElement_setNeedsUpdate(a,b){this.resolvedProperty[this.propertyIndex]=a[b],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(a,b){this.resolvedProperty[this.propertyIndex]=a[b],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(a,b){this.resolvedProperty.fromArray(a,b)}_setValue_fromArray_setNeedsUpdate(a,b){this.resolvedProperty.fromArray(a,b),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(a,b){this.resolvedProperty.fromArray(a,b),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(a,b){this.bind(),this.getValue(a,b)}_setValue_unbound(a,b){this.bind(),this.setValue(a,b)}bind(){let a=this.node,c=this.parsedPath,h=c.objectName,i=c.propertyName,e=c.propertyIndex;if(a||(a=d.findNode(this.rootNode,c.nodeName)||this.rootNode,this.node=a),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!a){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(h){let f=c.objectIndex;switch(h){case"materials":if(!a.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!a.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}a=a.material.materials;break;case"bones":if(!a.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}a=a.skeleton.bones;for(let j=0;j<a.length;j++)if(a[j].name===f){f=j;break}break;default:if(void 0===a[h]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}a=a[h]}if(void 0!==f){if(void 0===a[f]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,a);return}a=a[f]}}let b=a[i];if(void 0===b){let l=c.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",a);return}let k=this.Versioning.None;this.targetObject=a,void 0!==a.needsUpdate?k=this.Versioning.NeedsUpdate:void 0!==a.matrixWorldNeedsUpdate&&(k=this.Versioning.MatrixWorldNeedsUpdate);let g=this.BindingType.Direct;if(void 0!==e){if("morphTargetInfluences"===i){if(!a.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!a.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==a.morphTargetDictionary[e]&&(e=a.morphTargetDictionary[e])}g=this.BindingType.ArrayElement,this.resolvedProperty=b,this.propertyIndex=e}else void 0!==b.fromArray&& void 0!==b.toArray?(g=this.BindingType.HasFromToArray,this.resolvedProperty=b):Array.isArray(b)?(g=this.BindingType.EntireArray,this.resolvedProperty=b):this.propertyName=i;this.getValue=this.GetterByBindingType[g],this.setValue=this.SetterByBindingTypeAndVersioning[g][k]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}d.Composite=class{constructor(a,b,c){let e=c||d.parseTrackName(b);this._targetGroup=a,this._bindings=a.subscribe_(b,e)}getValue(b,c){this.bind();let d=this._targetGroup.nCachedObjects_,a=this._bindings[d];void 0!==a&&a.getValue(b,c)}setValue(c,d){let b=this._bindings;for(let a=this._targetGroup.nCachedObjects_,e=b.length;a!==e;++a)b[a].setValue(c,d)}bind(){let b=this._bindings;for(let a=this._targetGroup.nCachedObjects_,c=b.length;a!==c;++a)b[a].bind()}unbind(){let b=this._bindings;for(let a=this._targetGroup.nCachedObjects_,c=b.length;a!==c;++a)b[a].unbind()}},d.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},d.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},d.prototype.GetterByBindingType=[d.prototype._getValue_direct,d.prototype._getValue_array,d.prototype._getValue_arrayElement,d.prototype._getValue_toArray,],d.prototype.SetterByBindingTypeAndVersioning=[[d.prototype._setValue_direct,d.prototype._setValue_direct_setNeedsUpdate,d.prototype._setValue_direct_setMatrixWorldNeedsUpdate,],[d.prototype._setValue_array,d.prototype._setValue_array_setNeedsUpdate,d.prototype._setValue_array_setMatrixWorldNeedsUpdate,],[d.prototype._setValue_arrayElement,d.prototype._setValue_arrayElement_setNeedsUpdate,d.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,],[d.prototype._setValue_fromArray,d.prototype._setValue_fromArray_setNeedsUpdate,d.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,]];class k3{constructor(){this.isAnimationObjectGroup=!0,this.uuid=aH(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;let b={};this._indicesByUUID=b;for(let a=0,c=arguments.length;a!==c;++a)b[arguments[a].uuid]=a;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={},this.stats={objects:{get total(){return this._objects.length},get inUse(){return this.total-this.nCachedObjects_}},get bindingsPerObject(){return this._bindings.length}}}add(){let b=this._objects,h=this._indicesByUUID,o=this._paths,p=this._parsedPaths,j=this._bindings,q=j.length,r,t=b.length,k=this.nCachedObjects_;for(let l=0,u=arguments.length;l!==u;++l){let c=arguments[l],m=c.uuid,a=h[m];if(void 0===a){a=t++,h[m]=a,b.push(c);for(let e=0,v=q;e!==v;++e)j[e].push(new d(c,o[e],p[e]))}else if(a<k){r=b[a];let f=--k,s=b[f];h[s.uuid]=a,b[a]=s,h[m]=f,b[f]=c;for(let g=0,w=q;g!==w;++g){let i=j[g],x=i[f],n=i[a];i[a]=x,void 0===n&&(n=new d(c,o[g],p[g])),i[f]=n}}else b[a]!==r&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=k}remove(){let d=this._objects,e=this._indicesByUUID,i=this._bindings,m=i.length,f=this.nCachedObjects_;for(let g=0,n=arguments.length;g!==n;++g){let j=arguments[g],k=j.uuid,a=e[k];if(void 0!==a&&a>=f){let b=f++,l=d[b];e[l.uuid]=a,d[a]=l,e[k]=b,d[b]=j;for(let h=0,o=m;h!==o;++h){let c=i[h],p=c[b],q=c[a];c[a]=p,c[b]=q}}}this.nCachedObjects_=f}uncache(){let a=this._objects,c=this._indicesByUUID,f=this._bindings,m=f.length,g=this.nCachedObjects_,n=a.length;for(let h=0,t=arguments.length;h!==t;++h){let u=arguments[h],o=u.uuid,b=c[o];if(void 0!==b){if(delete c[o],b<g){let d=--g,p=a[d],q=--n,r=a[q];c[p.uuid]=b,a[b]=p,c[r.uuid]=d,a[d]=r,a.pop();for(let i=0,v=m;i!==v;++i){let e=f[i],w=e[d],x=e[q];e[b]=w,e[d]=x,e.pop()}}else{let j=--n,s=a[j];j>0&&(c[s.uuid]=b),a[b]=s,a.pop();for(let k=0,y=m;k!==y;++k){let l=f[k];l[b]=l[j],l.pop()}}}}this.nCachedObjects_=g}subscribe_(a,h){let i=this._bindingsIndicesByPath,b=i[a],e=this._bindings;if(void 0!==b)return e[b];let j=this._paths,k=this._parsedPaths,f=this._objects,l=f.length,m=this.nCachedObjects_,g=Array(l);b=e.length,i[a]=b,j.push(a),k.push(h),e.push(g);for(let c=m,n=f.length;c!==n;++c){let o=f[c];g[c]=new d(o,a,h)}return g}unsubscribe_(f){let g=this._bindingsIndicesByPath,a=g[f];if(void 0!==a){let d=this._paths,e=this._parsedPaths,b=this._bindings,c=b.length-1,h=b[c],i=f[c];g[i]=a,b[a]=h,b.pop(),e[a]=e[c],e.pop(),d[a]=d[c],d.pop()}}}class k4{constructor(h,b,i=null,j=b.blendMode){this._mixer=h,this._clip=b,this._localRoot=i,this.blendMode=j;let d=b.tracks,c=d.length,e=Array(c),f={endingStart:df,endingEnd:df};for(let a=0;a!==c;++a){let g=d[a].createInterpolant(null);e[a]=g,g.settings=f}this._interpolantSettings=f,this._interpolants=e,this._propertyBindings=Array(c),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=dc,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(a){return this._startTime=a,this}setLoop(a,b){return this.loop=a,this.repetitions=b,this}setEffectiveWeight(a){return this.weight=a,this._effectiveWeight=this.enabled?a:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(a){return this._scheduleFading(a,0,1)}fadeOut(a){return this._scheduleFading(a,1,0)}crossFadeFrom(b,a,e){if(b.fadeOut(a),this.fadeIn(a),e){let c=this._clip.duration,d=b._clip.duration,f=d/c,g=c/d;b.warp(1,f,a),this.warp(g,1,a)}return this}crossFadeTo(a,b,c){return a.crossFadeFrom(this,b,c)}stopFading(){let a=this._weightInterpolant;return null!==a&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(a)),this}setEffectiveTimeScale(a){return this.timeScale=a,this._effectiveTimeScale=this.paused?0:a,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(a){return this.timeScale=this._clip.duration/a,this.stopWarping()}syncWith(a){return this.time=a.time,this.timeScale=a.timeScale,this.stopWarping()}halt(a){return this.warp(this._effectiveTimeScale,0,a)}warp(g,h,i){let b=this._mixer,c=b.time,d=this.timeScale,a=this._timeScaleInterpolant;null===a&&(a=b._lendControlInterpolant(),this._timeScaleInterpolant=a);let e=a.parameterPositions,f=a.sampleValues;return e[0]=c,e[1]=c+i,f[0]=g/d,f[1]=h/d,this}stopWarping(){let a=this._timeScaleInterpolant;return null!==a&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(a)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(a,e,f,l){if(!this.enabled){this._updateWeight(a);return}let h=this._startTime;if(null!==h){let i=(a-h)*f;if(i<0||0===f)return;this._startTime=null,e=f*i}e*=this._updateTimeScale(a);let j=this._updateTime(e),g=this._updateWeight(a);if(g>0){let b=this._interpolants,k=this._propertyBindings;if(this.blendMode===dj)for(let c=0,m=b.length;c!==m;++c)b[c].evaluate(j),k[c].accumulateAdditive(g);else for(let d=0,n=b.length;d!==n;++d)b[d].evaluate(j),k[d].accumulate(l,g)}}_updateWeight(c){let a=0;if(this.enabled){a=this.weight;let b=this._weightInterpolant;if(null!==b){let d=b.evaluate(c)[0];a*=d,c>b.parameterPositions[1]&&(this.stopFading(),0===d&&(this.enabled=!1))}}return this._effectiveWeight=a,a}_updateTimeScale(c){let a=0;if(!this.paused){a=this.timeScale;let b=this._timeScaleInterpolant;if(null!==b){let d=b.evaluate(c)[0];a*=d,c>b.parameterPositions[1]&&(this.stopWarping(),0===a?this.paused=!0:this.timeScale=a)}}return this._effectiveTimeScale=a,a}_updateTime(d){let c=this._clip.duration,g=this.loop,a=this.time+d,b=this._loopCount,e=g===dd;if(0===d)return -1===b?a:e&&(1&b)==1?c-a:a;if(g===db){-1===b&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(a>=c)a=c;else if(a<0)a=0;else{this.time=a;break handle_stop}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=a,this._mixer.dispatchEvent({type:"finished",action:this,direction:d<0?-1:1})}}else{if(-1===b&&(d>=0?(b=0,this._setEndings(!0,0===this.repetitions,e)):this._setEndings(0===this.repetitions,!0,e)),a>=c||a<0){let f=Math.floor(a/c);a-=c*f,b+=Math.abs(f);let h=this.repetitions-b;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,a=d>0?c:0,this.time=a,this._mixer.dispatchEvent({type:"finished",action:this,direction:d>0?1:-1});else{if(1===h){let i=d<0;this._setEndings(i,!i,e)}else this._setEndings(!1,!1,e);this._loopCount=b,this.time=a,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:f})}}else this.time=a;if(e&&(1&b)==1)return c-a}return a}_setEndings(b,c,d){let a=this._interpolantSettings;d?(a.endingStart=dg,a.endingEnd=dg):(b?a.endingStart=this.zeroSlopeAtStart?dg:df:a.endingStart=dh,c?a.endingEnd=this.zeroSlopeAtEnd?dg:df:a.endingEnd=dh)}_scheduleFading(f,g,h){let b=this._mixer,c=b.time,a=this._weightInterpolant;null===a&&(a=b._lendControlInterpolant(),this._weightInterpolant=a);let d=a.parameterPositions,e=a.sampleValues;return d[0]=c,e[0]=g,d[1]=c+f,e[1]=h,this}}let k5=new Float32Array(1);class k6 extends q{constructor(a){super(),this._root=a,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(c,j){let k=c._localRoot||this._root,l=c._clip.tracks,n=l.length,h=c._propertyBindings,o=c._interpolants,e=k.uuid,m=this._bindingsByRootAndName,f=m[e];void 0===f&&(f={},m[e]=f);for(let b=0;b!==n;++b){let i=l[b],g=i.name,a=f[g];if(void 0!==a)++a.referenceCount,h[b]=a;else{if(void 0!==(a=h[b])){null===a._cacheIndex&&(++a.referenceCount,this._addInactiveBinding(a,e,g));continue}let p=j&&j._propertyBindings[b].binding.parsedPath;a=new k_(d.create(k,g,p),i.ValueTypeName,i.getValueSize()),++a.referenceCount,this._addInactiveBinding(a,e,g),h[b]=a}o[b].resultBuffer=a.buffer}}_activateAction(a){if(!this._isActiveAction(a)){if(null===a._cacheIndex){let g=(a._localRoot||this._root).uuid,d=a._clip.uuid,e=this._actionsByClip[d];this._bindAction(a,e&&e.knownActions[0]),this._addInactiveAction(a,d,g)}let f=a._propertyBindings;for(let b=0,h=f.length;b!==h;++b){let c=f[b];0==c.useCount++&&(this._lendBinding(c),c.saveOriginalState())}this._lendAction(a)}}_deactivateAction(a){if(this._isActiveAction(a)){let d=a._propertyBindings;for(let b=0,e=d.length;b!==e;++b){let c=d[b];0== --c.useCount&&(c.restoreOriginalState(),this._takeBackBinding(c))}this._takeBackAction(a)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0,this.stats={actions:{get total(){return this._actions.length},get inUse(){return this._nActiveActions}},bindings:{get total(){return this._bindings.length},get inUse(){return this._nActiveBindings}},controlInterpolants:{get total(){return this._controlInterpolants.length},get inUse(){return this._nActiveControlInterpolants}}}}_isActiveAction(b){let a=b._cacheIndex;return null!==a&&a<this._nActiveActions}_addInactiveAction(a,c,g){let d=this._actions,e=this._actionsByClip,b=e[c];if(void 0===b)b={knownActions:[a],actionByRoot:{}},a._byClipCacheIndex=0,e[c]=b;else{let f=b.knownActions;a._byClipCacheIndex=f.length,f.push(a)}a._cacheIndex=d.length,d.push(a),b.actionByRoot[g]=a}_removeInactiveAction(a){let c=this._actions,d=c[c.length-1],e=a._cacheIndex;d._cacheIndex=e,c[e]=d,c.pop(),a._cacheIndex=null;let f=a._clip.uuid,g=this._actionsByClip,h=g[f],b=h.knownActions,i=b[b.length-1],j=a._byClipCacheIndex;i._byClipCacheIndex=j,b[j]=i,b.pop(),a._byClipCacheIndex=null;let k=h.actionByRoot,l=(a._localRoot||this._root).uuid;delete k[l],0===b.length&&delete g[f],this._removeInactiveBindingsForAction(a)}_removeInactiveBindingsForAction(d){let b=d._propertyBindings;for(let a=0,e=b.length;a!==e;++a){let c=b[a];0== --c.referenceCount&&this._removeInactiveBinding(c)}}_lendAction(a){let b=this._actions,d=a._cacheIndex,c=this._nActiveActions++,e=b[c];a._cacheIndex=c,b[c]=a,e._cacheIndex=d,b[d]=e}_takeBackAction(a){let b=this._actions,d=a._cacheIndex,c=--this._nActiveActions,e=b[c];a._cacheIndex=c,b[c]=a,e._cacheIndex=d,b[d]=e}_addInactiveBinding(b,c,f){let d=this._bindingsByRootAndName,e=this._bindings,a=d[c];void 0===a&&(a={},d[c]=a),a[f]=b,b._cacheIndex=e.length,e.push(b)}_removeInactiveBinding(b){let a=this._bindings,c=b.binding,d=c.rootNode.uuid,i=c.path,e=this._bindingsByRootAndName,f=e[d],g=a[a.length-1],h=b._cacheIndex;g._cacheIndex=h,a[h]=g,a.pop(),delete f[i],0===Object.keys(f).length&&delete e[d]}_lendBinding(a){let b=this._bindings,d=a._cacheIndex,c=this._nActiveBindings++,e=b[c];a._cacheIndex=c,b[c]=a,e._cacheIndex=d,b[d]=e}_takeBackBinding(a){let b=this._bindings,d=a._cacheIndex,c=--this._nActiveBindings,e=b[c];a._cacheIndex=c,b[c]=a,e._cacheIndex=d,b[d]=e}_lendControlInterpolant(){let c=this._controlInterpolants,b=this._nActiveControlInterpolants++,a=c[b];return void 0===a&&((a=new j2(new Float32Array(2),new Float32Array(2),1,k5)).__cacheIndex=b,c[b]=a),a}_takeBackControlInterpolant(a){let b=this._controlInterpolants,d=a.__cacheIndex,c=--this._nActiveControlInterpolants,e=b[c];a.__cacheIndex=c,b[c]=a,e.__cacheIndex=d,b[d]=e}clipAction(b,h,c){let i=h||this._root,j=i.uuid,a="string"==typeof b?j5.findByName(i,b):b,k=null!==a?a.uuid:b,d=this._actionsByClip[k],e=null;if(void 0===c&&(c=null!==a?a.blendMode:di),void 0!==d){let f=d.actionByRoot[j];if(void 0!==f&&f.blendMode===c)return f;e=d.knownActions[0],null===a&&(a=e._clip)}if(null===a)return null;let g=new k4(this,a,h,c);return this._bindAction(g,e),this._addInactiveAction(g,k,j),g}existingAction(a,e){let b=e||this._root,f=b.uuid,c="string"==typeof a?j5.findByName(b,a):a,g=c?c.uuid:a,d=this._actionsByClip[g];return void 0!==d&&d.actionByRoot[f]||null}stopAllAction(){let b=this._actions,c=this._nActiveActions;for(let a=c-1;a>=0;--a)b[a].stop();return this}update(a){a*=this.timeScale;let e=this._actions,f=this._nActiveActions,g=this.time+=a,h=Math.sign(a),d=this._accuIndex^=1;for(let b=0;b!==f;++b){let i=e[b];i._update(g,a,h,d)}let j=this._bindings,k=this._nActiveBindings;for(let c=0;c!==k;++c)j[c].apply(d);return this}setTime(b){this.time=0;for(let a=0;a<this._actions.length;a++)this._actions[a].time=0;return this.update(b)}getRoot(){return this._root}uncacheClip(j){let b=this._actions,d=j.uuid,e=this._actionsByClip,f=e[d];if(void 0!==f){let g=f.knownActions;for(let c=0,k=g.length;c!==k;++c){let a=g[c];this._deactivateAction(a);let h=a._cacheIndex,i=b[b.length-1];a._cacheIndex=null,a._byClipCacheIndex=null,i._cacheIndex=h,b[h]=i,b.pop(),this._removeInactiveBindingsForAction(a)}delete e[d]}}uncacheRoot(f){let c=f.uuid,d=this._actionsByClip;for(let g in d){let h=d[g].actionByRoot,a=h[c];void 0!==a&&(this._deactivateAction(a),this._removeInactiveAction(a))}let i=this._bindingsByRootAndName,b=i[c];if(void 0!==b)for(let j in b){let e=b[j];e.restoreOriginalState(),this._removeInactiveBinding(e)}}uncacheAction(b,c){let a=this.existingAction(b,c);null!==a&&(this._deactivateAction(a),this._removeInactiveAction(a))}}class k7{constructor(a){"string"==typeof a&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),a=arguments[1]),this.value=a}clone(){return new k7(void 0===this.value.clone?this.value:this.value.clone())}}let k8=0;class k9 extends q{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:k8++}),this.name="",this.usage=dL,this.uniforms=[]}add(a){return this.uniforms.push(a),this}remove(b){let a=this.uniforms.indexOf(b);return -1!==a&&this.uniforms.splice(a,1),this}setName(a){return this.name=a,this}setUsage(a){return this.usage=a,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(a){this.name=a.name,this.usage=a.usage;let c=a.uniforms;this.uniforms.length=0;for(let b=0,d=c.length;b<d;b++)this.uniforms.push(c[b].clone());return this}clone(){return new this.constructor().copy(this)}}class la extends a_{constructor(a,b,c=1){super(a,b),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=c}copy(a){return super.copy(a),this.meshPerAttribute=a.meshPerAttribute,this}clone(b){let a=super.clone(b);return a.meshPerAttribute=this.meshPerAttribute,a}toJSON(b){let a=super.toJSON(b);return a.isInstancedInterleavedBuffer=!0,a.meshPerAttribute=this.meshPerAttribute,a}}class lb{constructor(a,b,c,d,e){this.isGLBufferAttribute=!0,this.buffer=a,this.type=b,this.itemSize=c,this.elementSize=d,this.count=e,this.version=0}set needsUpdate(a){!0===a&&this.version++}setBuffer(a){return this.buffer=a,this}setType(a,b){return this.type=a,this.elementSize=b,this}setItemSize(a){return this.itemSize=a,this}setCount(a){return this.count=a,this}}class lc{constructor(a,b,c=0,d=1/0){this.ray=new G(a,b),this.near=c,this.far=d,this.camera=null,this.layers=new eR,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(a,b){this.ray.set(a,b)}setFromCamera(b,a){a.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(a.matrixWorld),this.ray.direction.set(b.x,b.y,.5).unproject(a).sub(this.ray.origin).normalize(),this.camera=a):a.isOrthographicCamera?(this.ray.origin.set(b.x,b.y,(a.near+a.far)/(a.near-a.far)).unproject(a),this.ray.direction.set(0,0,-1).transformDirection(a.matrixWorld),this.camera=a):console.error("THREE.Raycaster: Unsupported camera type: "+a.type)}intersectObject(b,c=!0,a=[]){return le(b,this,a,c),a.sort(ld),a}intersectObjects(c,d=!0,a=[]){for(let b=0,e=c.length;b<e;b++)le(c[b],this,a,d);return a.sort(ld),a}}function ld(a,b){return a.distance-b.distance}function le(a,b,d,f){if(a.layers.test(b.layers)&&a.raycast(b,d),!0===f){let e=a.children;for(let c=0,g=e.length;c<g;c++)le(e[c],b,d,!0)}}class lf{constructor(a=1,b=0,c=0){return this.radius=a,this.phi=b,this.theta=c,this}set(a,b,c){return this.radius=a,this.phi=b,this.theta=c,this}copy(a){return this.radius=a.radius,this.phi=a.phi,this.theta=a.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(a){return this.setFromCartesianCoords(a.x,a.y,a.z)}setFromCartesianCoords(a,b,c){return this.radius=Math.sqrt(a*a+b*b+c*c),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(a,c),this.phi=Math.acos(aI(b/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class lg{constructor(a=1,b=0,c=0){return this.radius=a,this.theta=b,this.y=c,this}set(a,b,c){return this.radius=a,this.theta=b,this.y=c,this}copy(a){return this.radius=a.radius,this.theta=a.theta,this.y=a.y,this}setFromVector3(a){return this.setFromCartesianCoords(a.x,a.y,a.z)}setFromCartesianCoords(a,c,b){return this.radius=Math.sqrt(a*a+b*b),this.theta=Math.atan2(a,b),this.y=c,this}clone(){return new this.constructor().copy(this)}}let lh=new j;class li{constructor(a=new j(Infinity,Infinity),b=new j(-1/0,-1/0)){this.isBox2=!0,this.min=a,this.max=b}set(a,b){return this.min.copy(a),this.max.copy(b),this}setFromPoints(b){this.makeEmpty();for(let a=0,c=b.length;a<c;a++)this.expandByPoint(b[a]);return this}setFromCenterAndSize(a,c){let b=lh.copy(c).multiplyScalar(.5);return this.min.copy(a).sub(b),this.max.copy(a).add(b),this}clone(){return new this.constructor().copy(this)}copy(a){return this.min.copy(a.min),this.max.copy(a.max),this}makeEmpty(){return this.min.x=this.min.y=Infinity,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(a){return this.isEmpty()?a.set(0,0):a.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(a){return this.isEmpty()?a.set(0,0):a.subVectors(this.max,this.min)}expandByPoint(a){return this.min.min(a),this.max.max(a),this}expandByVector(a){return this.min.sub(a),this.max.add(a),this}expandByScalar(a){return this.min.addScalar(-a),this.max.addScalar(a),this}containsPoint(a){return!(a.x<this.min.x)&&!(a.x>this.max.x)&&!(a.y<this.min.y)&&!(a.y>this.max.y)}containsBox(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y}getParameter(a,b){return b.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(a){return!(a.max.x<this.min.x)&&!(a.min.x>this.max.x)&&!(a.max.y<this.min.y)&&!(a.min.y>this.max.y)}clampPoint(a,b){return b.copy(a).clamp(this.min,this.max)}distanceToPoint(a){let b=lh.copy(a).clamp(this.min,this.max);return b.sub(a).length()}intersect(a){return this.min.max(a.min),this.max.min(a.max),this}union(a){return this.min.min(a.min),this.max.max(a.max),this}translate(a){return this.min.add(a),this.max.add(a),this}equals(a){return a.min.equals(this.min)&&a.max.equals(this.max)}}let lj=new a,lk=new a;class ll{constructor(b=new a,c=new a){this.start=b,this.end=c}set(a,b){return this.start.copy(a),this.end.copy(b),this}copy(a){return this.start.copy(a.start),this.end.copy(a.end),this}getCenter(a){return a.addVectors(this.start,this.end).multiplyScalar(.5)}delta(a){return a.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(a,b){return this.delta(b).multiplyScalar(a).add(this.start)}closestPointToPointParameter(b,c){lj.subVectors(b,this.start),lk.subVectors(this.end,this.start);let d=lk.dot(lk),e=lk.dot(lj),a=e/d;return c&&(a=aI(a,0,1)),a}closestPointToPoint(a,b,c){let d=this.closestPointToPointParameter(a,b);return this.delta(c).multiplyScalar(d).add(this.start)}applyMatrix4(a){return this.start.applyMatrix4(a),this.end.applyMatrix4(a),this}equals(a){return a.start.equals(this.start)&&a.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}let lm=new a;class ln extends f{constructor(b,i){super(),this.light=b,this.light.updateMatrixWorld(),this.matrix=b.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;let c=new g,d=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,e=1;a<32;a++,e++){let f=a/32*Math.PI*2,h=e/32*Math.PI*2;d.push(Math.cos(f),Math.sin(f),1,Math.cos(h),Math.sin(h),1)}c.setAttribute("position",new fp(d,3));let j=new a0({fog:!1,toneMapped:!1});this.cone=new s(c,j),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();let a=this.light.distance?this.light.distance:1e3,b=a*Math.tan(this.light.angle);this.cone.scale.set(b,b,a),lm.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(lm),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}let lo=new a,lp=new e,lq=new e;class lr extends s{constructor(a){let b=ls(a),c=new g,d=[],e=[],f=new h(0,0,1),i=new h(0,1,0);for(let j=0;j<b.length;j++){let k=b[j];k.parent&&k.parent.isBone&&(d.push(0,0,0),d.push(0,0,0),e.push(f.r,f.g,f.b),e.push(i.r,i.g,i.b))}c.setAttribute("position",new fp(d,3)),c.setAttribute("color",new fp(e,3));let l=new a0({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(c,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=a,this.bones=b,this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(g){let d=this.bones,e=this.geometry,f=e.getAttribute("position");lq.copy(this.root.matrixWorld).invert();for(let b=0,c=0;b<d.length;b++){let a=d[b];a.parent&&a.parent.isBone&&(lp.multiplyMatrices(lq,a.matrixWorld),lo.setFromMatrixPosition(lp),f.setXYZ(c,lo.x,lo.y,lo.z),lp.multiplyMatrices(lq,a.parent.matrixWorld),lo.setFromMatrixPosition(lp),f.setXYZ(c+1,lo.x,lo.y,lo.z),c+=2)}e.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(g)}}function ls(a){let b=[];!0===a.isBone&&b.push(a);for(let c=0;c<a.children.length;c++)b.push.apply(b,ls(a.children[c]));return b}class lt extends D{constructor(a,b,c){let d=new al(b,4,2),e=new fe({wireframe:!0,fog:!1,toneMapped:!1});super(d,e),this.light=a,this.light.updateMatrixWorld(),this.color=c,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}let lu=new a,lv=new h,lw=new h;class lx extends f{constructor(b,c,d){super(),this.light=b,this.light.updateMatrixWorld(),this.matrix=b.matrixWorld,this.matrixAutoUpdate=!1,this.color=d;let a=new ai(c);a.rotateY(.5*Math.PI),this.material=new fe({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);let e=a.getAttribute("position"),f=new Float32Array(3*e.count);a.setAttribute("color",new n(f,3)),this.add(new D(a,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){let d=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{let b=d.geometry.getAttribute("color");lv.copy(this.light.color),lw.copy(this.light.groundColor);for(let a=0,e=b.count;a<e;a++){let c=a<e/2?lv:lw;b.setXYZ(a,c.r,c.g,c.b)}b.needsUpdate=!0}d.lookAt(lu.setFromMatrixPosition(this.light.matrixWorld).negate())}}class ly extends s{constructor(n=10,f=10,i=4473924,j=8947848){i=new h(i),j=new h(j);let o=f/2,p=n/f,b=n/2,k=[],c=[];for(let l=0,a=0,d=-b;l<=f;l++,d+=p){k.push(-b,0,d,b,0,d),k.push(d,0,-b,d,0,b);let e=l===o?i:j;e.toArray(c,a),a+=3,e.toArray(c,a),a+=3,e.toArray(c,a),a+=3,e.toArray(c,a),a+=3}let m=new g;m.setAttribute("position",new fp(k,3)),m.setAttribute("color",new fp(c,3));let q=new a0({vertexColors:!0,toneMapped:!1});super(m,q),this.type="GridHelper"}}class lz extends s{constructor(f=10,s=16,t=8,o=64,i=4473924,j=8947848){i=new h(i),j=new h(j);let c=[],d=[];for(let k=0;k<=s;k++){let u=k/s*(2*Math.PI),v=Math.sin(u)*f,w=Math.cos(u)*f;c.push(0,0,0),c.push(v,0,w);let a=1&k?i:j;d.push(a.r,a.g,a.b),d.push(a.r,a.g,a.b)}for(let l=0;l<=t;l++){let b=1&l?i:j,m=f-f/t*l;for(let n=0;n<o;n++){let e=n/o*(2*Math.PI),p=Math.sin(e)*m,q=Math.cos(e)*m;c.push(p,0,q),d.push(b.r,b.g,b.b),e=(n+1)/o*(2*Math.PI),p=Math.sin(e)*m,q=Math.cos(e)*m,c.push(p,0,q),d.push(b.r,b.g,b.b)}}let r=new g;r.setAttribute("position",new fp(c,3)),r.setAttribute("color",new fp(d,3));let x=new a0({vertexColors:!0,toneMapped:!1});super(r,x),this.type="PolarGridHelper"}}let lA=new a,lB=new a,lC=new a;class lD extends f{constructor(c,a,e){super(),this.light=c,this.light.updateMatrixWorld(),this.matrix=c.matrixWorld,this.matrixAutoUpdate=!1,this.color=e,void 0===a&&(a=1);let b=new g;b.setAttribute("position",new fp([-a,a,0,a,a,0,a,-a,0,-a,-a,0,-a,a,0],3));let d=new a0({fog:!1,toneMapped:!1});this.lightPlane=new I(b,d),this.add(this.lightPlane),(b=new g).setAttribute("position",new fp([0,0,0,0,0,1],3)),this.targetLine=new I(b,d),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){lA.setFromMatrixPosition(this.light.matrixWorld),lB.setFromMatrixPosition(this.light.target.matrixWorld),lC.subVectors(lB,lA),this.lightPlane.lookAt(lB),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(lB),this.targetLine.scale.z=lC.length()}}let lE=new a,lF=new H;class lG extends s{constructor(c){let b=new g,d=new a0({color:16777215,vertexColors:!0,toneMapped:!1}),e=[],f=[],i={};function a(a,b){o(a),o(b)}function o(a){e.push(0,0,0),f.push(0,0,0),void 0===i[a]&&(i[a]=[]),i[a].push(e.length/3-1)}a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4"),b.setAttribute("position",new fp(e,3)),b.setAttribute("color",new fp(f,3)),super(b,d),this.type="CameraHelper",this.camera=c,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=c.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=i,this.update();let j=new h(16755200),k=new h(16711680),l=new h(43775),m=new h(16777215),n=new h(3355443);this.setColors(j,k,l,m,n)}setColors(a,d,e,f,c){let g=this.geometry,b=g.getAttribute("color");b.setXYZ(0,a.r,a.g,a.b),b.setXYZ(1,a.r,a.g,a.b),b.setXYZ(2,a.r,a.g,a.b),b.setXYZ(3,a.r,a.g,a.b),b.setXYZ(4,a.r,a.g,a.b),b.setXYZ(5,a.r,a.g,a.b),b.setXYZ(6,a.r,a.g,a.b),b.setXYZ(7,a.r,a.g,a.b),b.setXYZ(8,a.r,a.g,a.b),b.setXYZ(9,a.r,a.g,a.b),b.setXYZ(10,a.r,a.g,a.b),b.setXYZ(11,a.r,a.g,a.b),b.setXYZ(12,a.r,a.g,a.b),b.setXYZ(13,a.r,a.g,a.b),b.setXYZ(14,a.r,a.g,a.b),b.setXYZ(15,a.r,a.g,a.b),b.setXYZ(16,a.r,a.g,a.b),b.setXYZ(17,a.r,a.g,a.b),b.setXYZ(18,a.r,a.g,a.b),b.setXYZ(19,a.r,a.g,a.b),b.setXYZ(20,a.r,a.g,a.b),b.setXYZ(21,a.r,a.g,a.b),b.setXYZ(22,a.r,a.g,a.b),b.setXYZ(23,a.r,a.g,a.b),b.setXYZ(24,d.r,d.g,d.b),b.setXYZ(25,d.r,d.g,d.b),b.setXYZ(26,d.r,d.g,d.b),b.setXYZ(27,d.r,d.g,d.b),b.setXYZ(28,d.r,d.g,d.b),b.setXYZ(29,d.r,d.g,d.b),b.setXYZ(30,d.r,d.g,d.b),b.setXYZ(31,d.r,d.g,d.b),b.setXYZ(32,e.r,e.g,e.b),b.setXYZ(33,e.r,e.g,e.b),b.setXYZ(34,e.r,e.g,e.b),b.setXYZ(35,e.r,e.g,e.b),b.setXYZ(36,e.r,e.g,e.b),b.setXYZ(37,e.r,e.g,e.b),b.setXYZ(38,f.r,f.g,f.b),b.setXYZ(39,f.r,f.g,f.b),b.setXYZ(40,c.r,c.g,c.b),b.setXYZ(41,c.r,c.g,c.b),b.setXYZ(42,c.r,c.g,c.b),b.setXYZ(43,c.r,c.g,c.b),b.setXYZ(44,c.r,c.g,c.b),b.setXYZ(45,c.r,c.g,c.b),b.setXYZ(46,c.r,c.g,c.b),b.setXYZ(47,c.r,c.g,c.b),b.setXYZ(48,c.r,c.g,c.b),b.setXYZ(49,c.r,c.g,c.b),b.needsUpdate=!0}update(){let a=this.geometry,b=this.pointMap;lF.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),lH("c",b,a,lF,0,0,-1),lH("t",b,a,lF,0,0,1),lH("n1",b,a,lF,-1,-1,-1),lH("n2",b,a,lF,1,-1,-1),lH("n3",b,a,lF,-1,1,-1),lH("n4",b,a,lF,1,1,-1),lH("f1",b,a,lF,-1,-1,1),lH("f2",b,a,lF,1,-1,1),lH("f3",b,a,lF,-1,1,1),lH("f4",b,a,lF,1,1,1),lH("u1",b,a,lF,.7,1.1,-1),lH("u2",b,a,lF,-0.7,1.1,-1),lH("u3",b,a,lF,0,2,-1),lH("cf1",b,a,lF,-1,0,1),lH("cf2",b,a,lF,1,0,1),lH("cf3",b,a,lF,0,-1,1),lH("cf4",b,a,lF,0,1,1),lH("cn1",b,a,lF,-1,0,-1),lH("cn2",b,a,lF,1,0,-1),lH("cn3",b,a,lF,0,-1,-1),lH("cn4",b,a,lF,0,1,-1),a.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function lH(c,d,e,f,g,h,i){lE.set(g,h,i).unproject(f);let a=d[c];if(void 0!==a){let j=e.getAttribute("position");for(let b=0,k=a.length;b<k;b++)j.setXYZ(a[b],lE.x,lE.y,lE.z)}}let lI=new z;class lJ extends s{constructor(b,c=16776960){let d=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),e=new Float32Array(24),a=new g;a.setIndex(new n(d,1)),a.setAttribute("position",new n(e,3)),super(a,new a0({color:c,toneMapped:!1})),this.object=b,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&lI.setFromObject(this.object),lI.isEmpty())return;let b=lI.min,c=lI.max,d=this.geometry.attributes.position,a=d.array;a[0]=c.x,a[1]=c.y,a[2]=c.z,a[3]=b.x,a[4]=c.y,a[5]=c.z,a[6]=b.x,a[7]=b.y,a[8]=c.z,a[9]=c.x,a[10]=b.y,a[11]=c.z,a[12]=c.x,a[13]=c.y,a[14]=b.z,a[15]=b.x,a[16]=c.y,a[17]=b.z,a[18]=b.x,a[19]=b.y,a[20]=b.z,a[21]=c.x,a[22]=b.y,a[23]=b.z,d.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(a){return this.object=a,this.update(),this}copy(a,b){return super.copy(a,b),this.object=a.object,this}}class lK extends s{constructor(b,c=16776960){let d=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),a=new g;a.setIndex(new n(d,1)),a.setAttribute("position",new fp([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(a,new a0({color:c,toneMapped:!1})),this.box=b,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(b){let a=this.box;a.isEmpty()||(a.getCenter(this.position),a.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(b))}}class lL extends I{constructor(d,e=1,f=16776960){let c=f,a=new g;a.setAttribute("position",new fp([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3)),a.computeBoundingSphere(),super(a,new a0({color:c,toneMapped:!1})),this.type="PlaneHelper",this.plane=d,this.size=e;let b=new g;b.setAttribute("position",new fp([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3)),b.computeBoundingSphere(),this.add(new D(b,new fe({color:c,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(a){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(a)}}let lM=new a,lN,lO;class lP extends f{constructor(e=new a(0,0,1),f=new a(0,0,0),b=1,c=16776960,d=.2*b,h=.2*d){super(),this.type="ArrowHelper",void 0===lN&&((lN=new g).setAttribute("position",new fp([0,0,0,0,1,0],3)),(lO=new L(0,.5,1,5,1)).translate(0,-0.5,0)),this.position.copy(f),this.line=new I(lN,new a0({color:c,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new D(lO,new fe({color:c,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(b,d,h)}setDirection(a){if(a.y>.99999)this.quaternion.set(0,0,0,1);else if(a.y< -0.99999)this.quaternion.set(1,0,0,0);else{lM.set(a.z,0,-a.x).normalize();let b=Math.acos(a.y);this.quaternion.setFromAxisAngle(lM,b)}}setLength(a,b=.2*a,c=.2*b){this.line.scale.set(1,Math.max(1e-4,a-b),1),this.line.updateMatrix(),this.cone.scale.set(c,b,c),this.cone.position.y=a,this.cone.updateMatrix()}setColor(a){this.line.material.color.set(a),this.cone.material.color.set(a)}copy(a){return super.copy(a,!1),this.line.copy(a.line),this.cone.copy(a.cone),this}}class lQ extends s{constructor(a=1){let b=new g;b.setAttribute("position",new fp([0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a],3)),b.setAttribute("color",new fp([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));let c=new a0({vertexColors:!0,toneMapped:!1});super(b,c),this.type="AxesHelper"}setColors(c,d,e){let a=new h,b=this.geometry.attributes.color.array;return a.set(c),a.toArray(b,0),a.toArray(b,3),a.set(d),a.toArray(b,6),a.toArray(b,9),a.set(e),a.toArray(b,12),a.toArray(b,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class lR{constructor(){this.type="ShapePath",this.color=new h,this.subPaths=[],this.currentPath=null}moveTo(a,b){return this.currentPath=new bb,this.subPaths.push(this.currentPath),this.currentPath.moveTo(a,b),this}lineTo(a,b){return this.currentPath.lineTo(a,b),this}quadraticCurveTo(a,b,c,d){return this.currentPath.quadraticCurveTo(a,b,c,d),this}bezierCurveTo(a,b,c,d,e,f){return this.currentPath.bezierCurveTo(a,b,c,d,e,f),this}splineThru(a){return this.currentPath.splineThru(a),this}toShapes(v,B){function w(b){let c=[];for(let a=0,e=b.length;a<e;a++){let f=b[a],d=new je;d.curves=f.curves,c.push(d)}return c}function C(a,d){let j=d.length,g=!1;for(let h=j-1,f=0;f<j;h=f++){let b=d[h],c=d[f],i=c.x-b.x,e=c.y-b.y;if(Math.abs(e)>Number.EPSILON){if(e<0&&(b=d[f],i=-i,c=d[h],e=-e),a.y<b.y||a.y>c.y)continue;if(a.y===b.y){if(a.x===b.x)return!0}else{let k=e*(a.x-b.x)-i*(a.y-b.y);if(0===k)return!0;if(k<0)continue;g=!g}}else{if(a.y!==b.y)continue;if(c.x<=a.x&&a.x<=b.x||b.x<=a.x&&a.x<=c.x)return!0}}return g}let x=jL.isClockWise,c=this.subPaths;if(0===c.length)return[];if(!0===B)return w(c);let j,e,f,k=[];if(1===c.length)return e=c[0],(f=new je).curves=e.curves,k.push(f),k;let g=!x(c[0].getPoints());g=v?!g:g;let l=[],a=[],d=[],b=0,n;a[b]=void 0,d[b]=[];for(let o=0,D=c.length;o<D;o++)j=x(n=(e=c[o]).getPoints()),(j=v?!j:j)?(!g&&a[b]&&b++,a[b]={s:new je,p:n},a[b].s.curves=e.curves,g&&b++,d[b]=[]):d[b].push({h:e,p:n[0]});if(!a[0])return w(c);if(a.length>1){let y=!1,z=0;for(let p=0,E=a.length;p<E;p++)l[p]=[];for(let h=0,F=a.length;h<F;h++){let A=d[h];for(let q=0;q<A.length;q++){let r=A[q],s=!0;for(let i=0;i<a.length;i++)C(r.p,a[i].p)&&(h!==i&&z++,s?(s=!1,l[i].push(r)):y=!0);s&&l[h].push(r)}}z>0&& !1===y&&(d=l)}let t;for(let m=0,G=a.length;m<G;m++){f=a[m].s,k.push(f),t=d[m];for(let u=0,H=t.length;u<H;u++)f.holes.push(t[u].h)}return k}}let lS=function(){let n=new ArrayBuffer(4),p=new Float32Array(n),q=new Uint32Array(n),b=new Uint32Array(512),c=new Uint32Array(512);for(let a=0;a<256;++a){let d=a-127;d< -27?(b[a]=0,b[256|a]=32768,c[a]=24,c[256|a]=24):d< -14?(b[a]=1024>> -d-14,b[256|a]=1024>> -d-14|32768,c[a]=-d-1,c[256|a]=-d-1):d<=15?(b[a]=d+15<<10,b[256|a]=d+15<<10|32768,c[a]=13,c[256|a]=13):d<128?(b[a]=31744,b[256|a]=64512,c[a]=24,c[256|a]=24):(b[a]=31744,b[256|a]=64512,c[a]=13,c[256|a]=13)}let l=new Uint32Array(2048),e=new Uint32Array(64),o=new Uint32Array(64);for(let f=1;f<1024;++f){let g=f<<13,m=0;for(;(8388608&g)==0;)g<<=1,m-=8388608;g&=-8388609,m+=947912704,l[f]=g|m}for(let h=1024;h<2048;++h)l[h]=939524096+(h-1024<<13);for(let i=1;i<31;++i)e[i]=i<<23;e[31]=1199570944,e[32]=2147483648;for(let j=33;j<63;++j)e[j]=2147483648+(j-32<<23);e[63]=3347054592;for(let k=1;k<64;++k)32!==k&&(o[k]=1024);return{floatView:p,uint32View:q,baseTable:b,shiftTable:c,mantissaTable:l,exponentTable:e,offsetTable:o}}();var lT=Object.freeze({__proto__:null,toHalfFloat:function(a){Math.abs(a)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),a=aI(a,-65504,65504),lS.floatView[0]=a;let b=lS.uint32View[0],c=b>>23&511;return lS.baseTable[c]+((8388607&b)>>lS.shiftTable[c])},fromHalfFloat:function(a){let b=a>>10;return lS.uint32View[0]=lS.mantissaTable[lS.offsetTable[b]+(1023&a)]+lS.exponentTable[b],lS.floatView[0]}});class lU extends g{constructor(){console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),super()}}class lV extends g{constructor(){console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),super()}}function lW(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")}function lX(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")}function lY(){console.error("THREE.ImmediateRenderObject has been removed.")}class lZ extends y{constructor(a,b,c){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(a,b,c),this.samples=4}}class l$ extends X{constructor(a,b,c,d){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(a,b,c,d)}}class l_ extends Y{constructor(a,b,c,d){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(a,b,c,d)}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:R}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=R)}}])